!(function () {
  const t = document.createElement("link").relList;
  if (!(t && t.supports && t.supports("modulepreload"))) {
    for (const t of document.querySelectorAll('link[rel="modulepreload"]'))
      e(t);
    new MutationObserver((t) => {
      for (const i of t)
        if ("childList" === i.type)
          for (const t of i.addedNodes)
            "LINK" === t.tagName && "modulepreload" === t.rel && e(t);
    }).observe(document, { childList: !0, subtree: !0 });
  }
  function e(t) {
    if (t.ep) return;
    t.ep = !0;
    const e = (function (t) {
      const e = {};
      return (
        t.integrity && (e.integrity = t.integrity),
        t.referrerPolicy && (e.referrerPolicy = t.referrerPolicy),
        "use-credentials" === t.crossOrigin
          ? (e.credentials = "include")
          : "anonymous" === t.crossOrigin
          ? (e.credentials = "omit")
          : (e.credentials = "same-origin"),
        e
      );
    })(t);
    fetch(t.href, e);
  }
})();
class t {
  on(t, e, i) {
    const r = this.e || (this.e = {});
    return (r[t] || (r[t] = [])).push({ fn: e, ctx: i }), this;
  }
  once(t, e, i) {
    const r = this;
    function a(...s) {
      r.off(t, a), e.apply(i, s);
    }
    return (a._ = e), this.on(t, a, i);
  }
  emit(t, ...e) {
    const i = ((this.e || (this.e = {}))[t] || []).slice();
    for (let r = 0; r < i.length; r += 1) i[r].fn.apply(i[r].ctx, e);
    return this;
  }
  off(t, e) {
    const i = this.e || (this.e = {}),
      r = i[t],
      a = [];
    if (r && e)
      for (let s = 0, n = r.length; s < n; s += 1)
        r[s].fn !== e && r[s].fn._ !== e && a.push(r[s]);
    return a.length ? (i[t] = a) : delete i[t], this;
  }
}
const e = "undefined" != typeof navigator ? navigator.userAgent : "",
  i = /^((?!chrome|android).)*safari/i.test(e),
  r = /MicroMessenger/i.test(e),
  a = /MSIE|Trident/i.test(e),
  s = /android/i.test(e),
  n = /iPad|iPhone|iPod/i.test(e) && !window.MSStream,
  o = n || (e.includes("Macintosh") && navigator.maxTouchPoints >= 1),
  h =
    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e) ||
    o,
  l = "undefined" != typeof window;
"undefined" != typeof globalThis
  ? globalThis
  : "undefined" != typeof window
  ? window
  : "undefined" != typeof global
  ? global
  : "undefined" != typeof self && self;
function A(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default")
    ? t.default
    : t;
}
var d,
  u = { exports: {} };
(d = u.exports),
  "undefined" != typeof navigator &&
    (u.exports = (function () {
      var t = "",
        e = !1,
        i = -999999,
        r = function () {
          return t;
        };
      function a(t) {
        return document.createElement(t);
      }
      function s(t, e) {
        var i,
          r,
          a = t.length;
        for (i = 0; i < a; i += 1)
          for (var s in (r = t[i].prototype))
            Object.prototype.hasOwnProperty.call(r, s) &&
              (e.prototype[s] = r[s]);
      }
      function n(t) {
        function e() {}
        return (e.prototype = t), e;
      }
      var o = (function () {
          function t(t) {
            (this.audios = []),
              (this.audioFactory = t),
              (this._volume = 1),
              (this._isMuted = !1);
          }
          return (
            (t.prototype = {
              addAudio: function (t) {
                this.audios.push(t);
              },
              pause: function () {
                var t,
                  e = this.audios.length;
                for (t = 0; t < e; t += 1) this.audios[t].pause();
              },
              resume: function () {
                var t,
                  e = this.audios.length;
                for (t = 0; t < e; t += 1) this.audios[t].resume();
              },
              setRate: function (t) {
                var e,
                  i = this.audios.length;
                for (e = 0; e < i; e += 1) this.audios[e].setRate(t);
              },
              createAudio: function (t) {
                return this.audioFactory
                  ? this.audioFactory(t)
                  : window.Howl
                  ? new window.Howl({ src: [t] })
                  : {
                      isPlaying: !1,
                      play: function () {
                        this.isPlaying = !0;
                      },
                      seek: function () {
                        this.isPlaying = !1;
                      },
                      playing: function () {},
                      rate: function () {},
                      setVolume: function () {},
                    };
              },
              setAudioFactory: function (t) {
                this.audioFactory = t;
              },
              setVolume: function (t) {
                (this._volume = t), this._updateVolume();
              },
              mute: function () {
                (this._isMuted = !0), this._updateVolume();
              },
              unmute: function () {
                (this._isMuted = !1), this._updateVolume();
              },
              getVolume: function () {
                return this._volume;
              },
              _updateVolume: function () {
                var t,
                  e = this.audios.length;
                for (t = 0; t < e; t += 1)
                  this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1));
              },
            }),
            function () {
              return new t();
            }
          );
        })(),
        h = (function () {
          function t(t, e) {
            var i,
              r = 0,
              a = [];
            switch (t) {
              case "int16":
              case "uint8c":
                i = 1;
                break;
              default:
                i = 1.1;
            }
            for (r = 0; r < e; r += 1) a.push(i);
            return a;
          }
          return "function" == typeof Uint8ClampedArray &&
            "function" == typeof Float32Array
            ? function (e, i) {
                return "float32" === e
                  ? new Float32Array(i)
                  : "int16" === e
                  ? new Int16Array(i)
                  : "uint8c" === e
                  ? new Uint8ClampedArray(i)
                  : t(e, i);
              }
            : t;
        })();
      function l(t) {
        return Array.apply(null, { length: t });
      }
      var A = !0,
        u = null,
        c = "",
        g = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
        f = Math.pow,
        p = Math.sqrt,
        m = Math.floor,
        v = Math.min,
        E = 150,
        y = Math.PI / 180,
        I = 0.5519;
      function C(t, e, i, r) {
        (this.type = t),
          (this.currentTime = e),
          (this.totalTime = i),
          (this.direction = r < 0 ? -1 : 1);
      }
      function B(t, e) {
        (this.type = t), (this.direction = e < 0 ? -1 : 1);
      }
      function k(t, e, i, r) {
        (this.type = t),
          (this.currentLoop = i),
          (this.totalLoops = e),
          (this.direction = r < 0 ? -1 : 1);
      }
      function x(t, e, i) {
        (this.type = t), (this.firstFrame = e), (this.totalFrames = i);
      }
      function w(t, e) {
        (this.type = t), (this.target = e);
      }
      function Q(t, e) {
        (this.type = "renderFrameError"),
          (this.nativeError = t),
          (this.currentTime = e);
      }
      function S(t) {
        (this.type = "configError"), (this.nativeError = t);
      }
      var b,
        D =
          ((b = 0),
          function () {
            return c + "__lottie_element_" + (b += 1);
          });
      function R(t, e, i) {
        var r, a, s, n, o, h, l, A;
        switch (
          ((h = i * (1 - e)),
          (l = i * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e)),
          (A = i * (1 - (1 - o) * e)),
          n % 6)
        ) {
          case 0:
            (r = i), (a = A), (s = h);
            break;
          case 1:
            (r = l), (a = i), (s = h);
            break;
          case 2:
            (r = h), (a = i), (s = A);
            break;
          case 3:
            (r = h), (a = l), (s = i);
            break;
          case 4:
            (r = A), (a = h), (s = i);
            break;
          case 5:
            (r = i), (a = h), (s = l);
        }
        return [r, a, s];
      }
      function L(t, e, i) {
        var r,
          a = Math.max(t, e, i),
          s = Math.min(t, e, i),
          n = a - s,
          o = 0 === a ? 0 : n / a,
          h = a / 255;
        switch (a) {
          case s:
            r = 0;
            break;
          case t:
            (r = e - i + n * (e < i ? 6 : 0)), (r /= 6 * n);
            break;
          case e:
            (r = i - t + 2 * n), (r /= 6 * n);
            break;
          case i:
            (r = t - e + 4 * n), (r /= 6 * n);
        }
        return [r, o, h];
      }
      function T(t, e) {
        var i = L(255 * t[0], 255 * t[1], 255 * t[2]);
        return (
          (i[1] += e),
          i[1] > 1 ? (i[1] = 1) : i[1] <= 0 && (i[1] = 0),
          R(i[0], i[1], i[2])
        );
      }
      function M(t, e) {
        var i = L(255 * t[0], 255 * t[1], 255 * t[2]);
        return (
          (i[2] += e),
          i[2] > 1 ? (i[2] = 1) : i[2] < 0 && (i[2] = 0),
          R(i[0], i[1], i[2])
        );
      }
      function F(t, e) {
        var i = L(255 * t[0], 255 * t[1], 255 * t[2]);
        return (
          (i[0] += e / 360),
          i[0] > 1 ? (i[0] -= 1) : i[0] < 0 && (i[0] += 1),
          R(i[0], i[1], i[2])
        );
      }
      !(function () {
        var t;
        for (t = 0; t < 256; t += 1) t.toString(16).length;
      })();
      var P = function () {
          return u;
        },
        _ = function (t) {
          E = t;
        },
        N = function () {
          return E;
        };
      function U(t) {
        return document.createElementNS("http://www.w3.org/2000/svg", t);
      }
      function G(t) {
        return (G =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (t) {
                return typeof t;
              }
            : function (t) {
                return t &&
                  "function" == typeof Symbol &&
                  t.constructor === Symbol &&
                  t !== Symbol.prototype
                  ? "symbol"
                  : typeof t;
              })(t);
      }
      var O = (function () {
          var t,
            i,
            r = 1,
            a = [],
            s = {
              onmessage: function () {},
              postMessage: function (e) {
                t({ data: e });
              },
            },
            n = {
              postMessage: function (t) {
                s.onmessage({ data: t });
              },
            };
          function o(i) {
            if (window.Worker && window.Blob && e) {
              var r = new Blob(
                  ["var _workerSelf = self; self.onmessage = ", i.toString()],
                  { type: "text/javascript" }
                ),
                a = URL.createObjectURL(r);
              return new Worker(a);
            }
            return (t = i), s;
          }
          function h() {
            i ||
              ((i = o(function (t) {
                if (
                  (n.dataManager ||
                    (n.dataManager = (function () {
                      function t(a, s) {
                        var n,
                          o,
                          h,
                          l,
                          A,
                          u,
                          c = a.length;
                        for (o = 0; o < c; o += 1)
                          if ("ks" in (n = a[o]) && !n.completed) {
                            if (((n.completed = !0), n.hasMask)) {
                              var g = n.masksProperties;
                              for (l = g.length, h = 0; h < l; h += 1)
                                if (g[h].pt.k.i) r(g[h].pt.k);
                                else
                                  for (
                                    u = g[h].pt.k.length, A = 0;
                                    A < u;
                                    A += 1
                                  )
                                    g[h].pt.k[A].s && r(g[h].pt.k[A].s[0]),
                                      g[h].pt.k[A].e && r(g[h].pt.k[A].e[0]);
                            }
                            0 === n.ty
                              ? ((n.layers = e(n.refId, s)), t(n.layers, s))
                              : 4 === n.ty
                              ? i(n.shapes)
                              : 5 === n.ty && d(n);
                          }
                      }
                      function e(t, e) {
                        var i = (function (t, e) {
                          for (var i = 0, r = e.length; i < r; ) {
                            if (e[i].id === t) return e[i];
                            i += 1;
                          }
                          return null;
                        })(t, e);
                        return i
                          ? i.layers.__used
                            ? JSON.parse(JSON.stringify(i.layers))
                            : ((i.layers.__used = !0), i.layers)
                          : null;
                      }
                      function i(t) {
                        var e, a, s;
                        for (e = t.length - 1; e >= 0; e -= 1)
                          if ("sh" === t[e].ty)
                            if (t[e].ks.k.i) r(t[e].ks.k);
                            else
                              for (s = t[e].ks.k.length, a = 0; a < s; a += 1)
                                t[e].ks.k[a].s && r(t[e].ks.k[a].s[0]),
                                  t[e].ks.k[a].e && r(t[e].ks.k[a].e[0]);
                          else "gr" === t[e].ty && i(t[e].it);
                      }
                      function r(t) {
                        var e,
                          i = t.i.length;
                        for (e = 0; e < i; e += 1)
                          (t.i[e][0] += t.v[e][0]),
                            (t.i[e][1] += t.v[e][1]),
                            (t.o[e][0] += t.v[e][0]),
                            (t.o[e][1] += t.v[e][1]);
                      }
                      function a(t, e) {
                        var i = e ? e.split(".") : [100, 100, 100];
                        return (
                          t[0] > i[0] ||
                          (!(i[0] > t[0]) &&
                            (t[1] > i[1] ||
                              (!(i[1] > t[1]) &&
                                (t[2] > i[2] || (!(i[2] > t[2]) && null)))))
                        );
                      }
                      var s,
                        n = (function () {
                          var t = [4, 4, 14];
                          function e(t) {
                            var e,
                              i,
                              r,
                              a = t.length;
                            for (e = 0; e < a; e += 1)
                              5 === t[e].ty &&
                                ((r = void 0),
                                (r = (i = t[e]).t.d),
                                (i.t.d = { k: [{ s: r, t: 0 }] }));
                          }
                          return function (i) {
                            if (a(t, i.v) && (e(i.layers), i.assets)) {
                              var r,
                                s = i.assets.length;
                              for (r = 0; r < s; r += 1)
                                i.assets[r].layers && e(i.assets[r].layers);
                            }
                          };
                        })(),
                        o =
                          ((s = [4, 7, 99]),
                          function (t) {
                            if (t.chars && !a(s, t.v)) {
                              var e,
                                r = t.chars.length;
                              for (e = 0; e < r; e += 1) {
                                var n = t.chars[e];
                                n.data &&
                                  n.data.shapes &&
                                  (i(n.data.shapes),
                                  (n.data.ip = 0),
                                  (n.data.op = 99999),
                                  (n.data.st = 0),
                                  (n.data.sr = 1),
                                  (n.data.ks = {
                                    p: { k: [0, 0], a: 0 },
                                    s: { k: [100, 100], a: 0 },
                                    a: { k: [0, 0], a: 0 },
                                    r: { k: 0, a: 0 },
                                    o: { k: 100, a: 0 },
                                  }),
                                  t.chars[e].t ||
                                    (n.data.shapes.push({ ty: "no" }),
                                    n.data.shapes[0].it.push({
                                      p: { k: [0, 0], a: 0 },
                                      s: { k: [100, 100], a: 0 },
                                      a: { k: [0, 0], a: 0 },
                                      r: { k: 0, a: 0 },
                                      o: { k: 100, a: 0 },
                                      sk: { k: 0, a: 0 },
                                      sa: { k: 0, a: 0 },
                                      ty: "tr",
                                    })));
                              }
                            }
                          }),
                        h = (function () {
                          var t = [5, 7, 15];
                          function e(t) {
                            var e,
                              i,
                              r = t.length;
                            for (e = 0; e < r; e += 1)
                              5 === t[e].ty &&
                                ((i = void 0),
                                "number" == typeof (i = t[e].t.p).a &&
                                  (i.a = { a: 0, k: i.a }),
                                "number" == typeof i.p &&
                                  (i.p = { a: 0, k: i.p }),
                                "number" == typeof i.r &&
                                  (i.r = { a: 0, k: i.r }));
                          }
                          return function (i) {
                            if (a(t, i.v) && (e(i.layers), i.assets)) {
                              var r,
                                s = i.assets.length;
                              for (r = 0; r < s; r += 1)
                                i.assets[r].layers && e(i.assets[r].layers);
                            }
                          };
                        })(),
                        l = (function () {
                          var t = [4, 1, 9];
                          function e(t) {
                            var i,
                              r,
                              a,
                              s = t.length;
                            for (i = 0; i < s; i += 1)
                              if ("gr" === t[i].ty) e(t[i].it);
                              else if ("fl" === t[i].ty || "st" === t[i].ty)
                                if (t[i].c.k && t[i].c.k[0].i)
                                  for (
                                    a = t[i].c.k.length, r = 0;
                                    r < a;
                                    r += 1
                                  )
                                    t[i].c.k[r].s &&
                                      ((t[i].c.k[r].s[0] /= 255),
                                      (t[i].c.k[r].s[1] /= 255),
                                      (t[i].c.k[r].s[2] /= 255),
                                      (t[i].c.k[r].s[3] /= 255)),
                                      t[i].c.k[r].e &&
                                        ((t[i].c.k[r].e[0] /= 255),
                                        (t[i].c.k[r].e[1] /= 255),
                                        (t[i].c.k[r].e[2] /= 255),
                                        (t[i].c.k[r].e[3] /= 255));
                                else
                                  (t[i].c.k[0] /= 255),
                                    (t[i].c.k[1] /= 255),
                                    (t[i].c.k[2] /= 255),
                                    (t[i].c.k[3] /= 255);
                          }
                          function i(t) {
                            var i,
                              r = t.length;
                            for (i = 0; i < r; i += 1)
                              4 === t[i].ty && e(t[i].shapes);
                          }
                          return function (e) {
                            if (a(t, e.v) && (i(e.layers), e.assets)) {
                              var r,
                                s = e.assets.length;
                              for (r = 0; r < s; r += 1)
                                e.assets[r].layers && i(e.assets[r].layers);
                            }
                          };
                        })(),
                        A = (function () {
                          var t = [4, 4, 18];
                          function e(t) {
                            var i, r, a;
                            for (i = t.length - 1; i >= 0; i -= 1)
                              if ("sh" === t[i].ty)
                                if (t[i].ks.k.i) t[i].ks.k.c = t[i].closed;
                                else
                                  for (
                                    a = t[i].ks.k.length, r = 0;
                                    r < a;
                                    r += 1
                                  )
                                    t[i].ks.k[r].s &&
                                      (t[i].ks.k[r].s[0].c = t[i].closed),
                                      t[i].ks.k[r].e &&
                                        (t[i].ks.k[r].e[0].c = t[i].closed);
                              else "gr" === t[i].ty && e(t[i].it);
                          }
                          function i(t) {
                            var i,
                              r,
                              a,
                              s,
                              n,
                              o,
                              h = t.length;
                            for (r = 0; r < h; r += 1) {
                              if ((i = t[r]).hasMask) {
                                var l = i.masksProperties;
                                for (s = l.length, a = 0; a < s; a += 1)
                                  if (l[a].pt.k.i) l[a].pt.k.c = l[a].cl;
                                  else
                                    for (
                                      o = l[a].pt.k.length, n = 0;
                                      n < o;
                                      n += 1
                                    )
                                      l[a].pt.k[n].s &&
                                        (l[a].pt.k[n].s[0].c = l[a].cl),
                                        l[a].pt.k[n].e &&
                                          (l[a].pt.k[n].e[0].c = l[a].cl);
                              }
                              4 === i.ty && e(i.shapes);
                            }
                          }
                          return function (e) {
                            if (a(t, e.v) && (i(e.layers), e.assets)) {
                              var r,
                                s = e.assets.length;
                              for (r = 0; r < s; r += 1)
                                e.assets[r].layers && i(e.assets[r].layers);
                            }
                          };
                        })();
                      function d(t) {
                        0 === t.t.a.length && t.t.p;
                      }
                      var u = {
                        completeData: function (i) {
                          i.__complete ||
                            (l(i),
                            n(i),
                            o(i),
                            h(i),
                            A(i),
                            t(i.layers, i.assets),
                            (function (i, r) {
                              if (i) {
                                var a = 0,
                                  s = i.length;
                                for (a = 0; a < s; a += 1)
                                  1 === i[a].t &&
                                    ((i[a].data.layers = e(i[a].data.refId, r)),
                                    t(i[a].data.layers, r));
                              }
                            })(i.chars, i.assets),
                            (i.__complete = !0));
                        },
                      };
                      return (
                        (u.checkColors = l),
                        (u.checkChars = o),
                        (u.checkPathProperties = h),
                        (u.checkShapes = A),
                        (u.completeLayers = t),
                        u
                      );
                    })()),
                  n.assetLoader ||
                    (n.assetLoader = (function () {
                      function t(t) {
                        var e = t.getResponseHeader("content-type");
                        return (e &&
                          "json" === t.responseType &&
                          -1 !== e.indexOf("json")) ||
                          (t.response && "object" === G(t.response))
                          ? t.response
                          : t.response && "string" == typeof t.response
                          ? JSON.parse(t.response)
                          : t.responseText
                          ? JSON.parse(t.responseText)
                          : null;
                      }
                      return {
                        load: function (e, i, r, a) {
                          var s,
                            n = new XMLHttpRequest();
                          try {
                            n.responseType = "json";
                          } catch (o) {}
                          n.onreadystatechange = function () {
                            if (4 === n.readyState)
                              if (200 === n.status) (s = t(n)), r(s);
                              else
                                try {
                                  (s = t(n)), r(s);
                                } catch (o) {
                                  a && a(o);
                                }
                          };
                          try {
                            n.open(["G", "E", "T"].join(""), e, !0);
                          } catch (o) {
                            n.open(["G", "E", "T"].join(""), i + "/" + e, !0);
                          }
                          n.send();
                        },
                      };
                    })()),
                  "loadAnimation" === t.data.type)
                )
                  n.assetLoader.load(
                    t.data.path,
                    t.data.fullPath,
                    function (e) {
                      n.dataManager.completeData(e),
                        n.postMessage({
                          id: t.data.id,
                          payload: e,
                          status: "success",
                        });
                    },
                    function () {
                      n.postMessage({ id: t.data.id, status: "error" });
                    }
                  );
                else if ("complete" === t.data.type) {
                  var e = t.data.animation;
                  n.dataManager.completeData(e),
                    n.postMessage({
                      id: t.data.id,
                      payload: e,
                      status: "success",
                    });
                } else
                  "loadData" === t.data.type &&
                    n.assetLoader.load(
                      t.data.path,
                      t.data.fullPath,
                      function (e) {
                        n.postMessage({
                          id: t.data.id,
                          payload: e,
                          status: "success",
                        });
                      },
                      function () {
                        n.postMessage({ id: t.data.id, status: "error" });
                      }
                    );
              })).onmessage = function (t) {
                var e = t.data,
                  i = e.id,
                  r = a[i];
                (a[i] = null),
                  "success" === e.status
                    ? r.onComplete(e.payload)
                    : r.onError && r.onError();
              });
          }
          function l(t, e) {
            var i = "processId_" + (r += 1);
            return (a[i] = { onComplete: t, onError: e }), i;
          }
          return {
            loadAnimation: function (t, e, r) {
              h();
              var a = l(e, r);
              i.postMessage({
                type: "loadAnimation",
                path: t,
                fullPath: window.location.origin + window.location.pathname,
                id: a,
              });
            },
            loadData: function (t, e, r) {
              h();
              var a = l(e, r);
              i.postMessage({
                type: "loadData",
                path: t,
                fullPath: window.location.origin + window.location.pathname,
                id: a,
              });
            },
            completeAnimation: function (t, e, r) {
              h();
              var a = l(e, r);
              i.postMessage({ type: "complete", animation: t, id: a });
            },
          };
        })(),
        j = (function () {
          var t = (function () {
            var t = a("canvas");
            (t.width = 1), (t.height = 1);
            var e = t.getContext("2d");
            return (e.fillStyle = "rgba(0,0,0,0)"), e.fillRect(0, 0, 1, 1), t;
          })();
          function e() {
            (this.loadedAssets += 1),
              this.loadedAssets === this.totalImages &&
                this.loadedFootagesCount === this.totalFootages &&
                this.imagesLoadedCb &&
                this.imagesLoadedCb(null);
          }
          function i() {
            (this.loadedFootagesCount += 1),
              this.loadedAssets === this.totalImages &&
                this.loadedFootagesCount === this.totalFootages &&
                this.imagesLoadedCb &&
                this.imagesLoadedCb(null);
          }
          function r(t, e, i) {
            var r = "";
            if (t.e) r = t.p;
            else if (e) {
              var a = t.p;
              -1 !== a.indexOf("images/") && (a = a.split("/")[1]), (r = e + a);
            } else (r = i), (r += t.u ? t.u : ""), (r += t.p);
            return r;
          }
          function s(t) {
            var e = 0,
              i = setInterval(
                function () {
                  (t.getBBox().width || e > 500) &&
                    (this._imageLoaded(), clearInterval(i)),
                    (e += 1);
                }.bind(this),
                50
              );
          }
          function n(t) {
            var e = { assetData: t },
              i = r(t, this.assetsPath, this.path);
            return (
              O.loadData(
                i,
                function (t) {
                  (e.img = t), this._footageLoaded();
                }.bind(this),
                function () {
                  (e.img = {}), this._footageLoaded();
                }.bind(this)
              ),
              e
            );
          }
          function o() {
            (this._imageLoaded = e.bind(this)),
              (this._footageLoaded = i.bind(this)),
              (this.testImageLoaded = s.bind(this)),
              (this.createFootageData = n.bind(this)),
              (this.assetsPath = ""),
              (this.path = ""),
              (this.totalImages = 0),
              (this.totalFootages = 0),
              (this.loadedAssets = 0),
              (this.loadedFootagesCount = 0),
              (this.imagesLoadedCb = null),
              (this.images = []);
          }
          return (
            (o.prototype = {
              loadAssets: function (t, e) {
                var i;
                this.imagesLoadedCb = e;
                var r = t.length;
                for (i = 0; i < r; i += 1)
                  t[i].layers ||
                    (t[i].t && "seq" !== t[i].t
                      ? 3 === t[i].t &&
                        ((this.totalFootages += 1),
                        this.images.push(this.createFootageData(t[i])))
                      : ((this.totalImages += 1),
                        this.images.push(this._createImageData(t[i]))));
              },
              setAssetsPath: function (t) {
                this.assetsPath = t || "";
              },
              setPath: function (t) {
                this.path = t || "";
              },
              loadedImages: function () {
                return this.totalImages === this.loadedAssets;
              },
              loadedFootages: function () {
                return this.totalFootages === this.loadedFootagesCount;
              },
              destroy: function () {
                (this.imagesLoadedCb = null), (this.images.length = 0);
              },
              getAsset: function (t) {
                for (var e = 0, i = this.images.length; e < i; ) {
                  if (this.images[e].assetData === t) return this.images[e].img;
                  e += 1;
                }
                return null;
              },
              createImgData: function (e) {
                var i = r(e, this.assetsPath, this.path),
                  s = a("img");
                (s.crossOrigin = "anonymous"),
                  s.addEventListener("load", this._imageLoaded, !1),
                  s.addEventListener(
                    "error",
                    function () {
                      (n.img = t), this._imageLoaded();
                    }.bind(this),
                    !1
                  ),
                  (s.src = i);
                var n = { img: s, assetData: e };
                return n;
              },
              createImageData: function (e) {
                var i = r(e, this.assetsPath, this.path),
                  a = U("image");
                g
                  ? this.testImageLoaded(a)
                  : a.addEventListener("load", this._imageLoaded, !1),
                  a.addEventListener(
                    "error",
                    function () {
                      (s.img = t), this._imageLoaded();
                    }.bind(this),
                    !1
                  ),
                  a.setAttributeNS("http://www.w3.org/1999/xlink", "href", i),
                  this._elementHelper.append
                    ? this._elementHelper.append(a)
                    : this._elementHelper.appendChild(a);
                var s = { img: a, assetData: e };
                return s;
              },
              imageLoaded: e,
              footageLoaded: i,
              setCacheType: function (t, e) {
                "svg" === t
                  ? ((this._elementHelper = e),
                    (this._createImageData = this.createImageData.bind(this)))
                  : (this._createImageData = this.createImgData.bind(this));
              },
            }),
            o
          );
        })();
      function Y() {}
      Y.prototype = {
        triggerEvent: function (t, e) {
          if (this._cbs[t])
            for (var i = this._cbs[t], r = 0; r < i.length; r += 1) i[r](e);
        },
        addEventListener: function (t, e) {
          return (
            this._cbs[t] || (this._cbs[t] = []),
            this._cbs[t].push(e),
            function () {
              this.removeEventListener(t, e);
            }.bind(this)
          );
        },
        removeEventListener: function (t, e) {
          if (e) {
            if (this._cbs[t]) {
              for (var i = 0, r = this._cbs[t].length; i < r; )
                this._cbs[t][i] === e &&
                  (this._cbs[t].splice(i, 1), (i -= 1), (r -= 1)),
                  (i += 1);
              this._cbs[t].length || (this._cbs[t] = null);
            }
          } else this._cbs[t] = null;
        },
      };
      var H = (function () {
          function t(t) {
            for (
              var e, i = t.split("\r\n"), r = {}, a = 0, s = 0;
              s < i.length;
              s += 1
            )
              2 === (e = i[s].split(":")).length &&
                ((r[e[0]] = e[1].trim()), (a += 1));
            if (0 === a) throw new Error();
            return r;
          }
          return function (e) {
            for (var i = [], r = 0; r < e.length; r += 1) {
              var a = e[r],
                s = { time: a.tm, duration: a.dr };
              try {
                s.payload = JSON.parse(e[r].cm);
              } catch (n) {
                try {
                  s.payload = t(e[r].cm);
                } catch (o) {
                  s.payload = { name: e[r].cm };
                }
              }
              i.push(s);
            }
            return i;
          };
        })(),
        V = (function () {
          function t(t) {
            this.compositions.push(t);
          }
          return function () {
            function e(t) {
              for (var e = 0, i = this.compositions.length; e < i; ) {
                if (
                  this.compositions[e].data &&
                  this.compositions[e].data.nm === t
                )
                  return (
                    this.compositions[e].prepareFrame &&
                      this.compositions[e].data.xt &&
                      this.compositions[e].prepareFrame(this.currentFrame),
                    this.compositions[e].compInterface
                  );
                e += 1;
              }
              return null;
            }
            return (
              (e.compositions = []),
              (e.currentFrame = 0),
              (e.registerComposition = t),
              e
            );
          };
        })(),
        K = {};
      function z(t) {
        return (z =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (t) {
                return typeof t;
              }
            : function (t) {
                return t &&
                  "function" == typeof Symbol &&
                  t.constructor === Symbol &&
                  t !== Symbol.prototype
                  ? "symbol"
                  : typeof t;
              })(t);
      }
      var q = function () {
        (this._cbs = []),
          (this.name = ""),
          (this.path = ""),
          (this.isLoaded = !1),
          (this.currentFrame = 0),
          (this.currentRawFrame = 0),
          (this.firstFrame = 0),
          (this.totalFrames = 0),
          (this.frameRate = 0),
          (this.frameMult = 0),
          (this.playSpeed = 1),
          (this.playDirection = 1),
          (this.playCount = 0),
          (this.animationData = {}),
          (this.assets = []),
          (this.isPaused = !0),
          (this.autoplay = !1),
          (this.loop = !0),
          (this.renderer = null),
          (this.animationID = D()),
          (this.assetsPath = ""),
          (this.timeCompleted = 0),
          (this.segmentPos = 0),
          (this.isSubframeEnabled = A),
          (this.segments = []),
          (this._idle = !0),
          (this._completedLoop = !1),
          (this.projectInterface = V()),
          (this.imagePreloader = new j()),
          (this.audioController = o()),
          (this.markers = []),
          (this.configAnimation = this.configAnimation.bind(this)),
          (this.onSetupError = this.onSetupError.bind(this)),
          (this.onSegmentComplete = this.onSegmentComplete.bind(this)),
          (this.drawnFrameEvent = new C("drawnFrame", 0, 0, 0)),
          (this.expressionsPlugin = P());
      };
      s([Y], q),
        (q.prototype.setParams = function (t) {
          (t.wrapper || t.container) &&
            (this.wrapper = t.wrapper || t.container);
          var e = "svg";
          t.animType ? (e = t.animType) : t.renderer && (e = t.renderer);
          var i = K[e];
          (this.renderer = new i(this, t.rendererSettings)),
            this.imagePreloader.setCacheType(e, this.renderer.globalData.defs),
            this.renderer.setProjectInterface(this.projectInterface),
            (this.animType = e),
            "" === t.loop ||
            null === t.loop ||
            void 0 === t.loop ||
            !0 === t.loop
              ? (this.loop = !0)
              : !1 === t.loop
              ? (this.loop = !1)
              : (this.loop = parseInt(t.loop, 10)),
            (this.autoplay = !("autoplay" in t) || t.autoplay),
            (this.name = t.name ? t.name : ""),
            (this.autoloadSegments =
              !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") ||
              t.autoloadSegments),
            (this.assetsPath = t.assetsPath),
            (this.initialSegment = t.initialSegment),
            t.audioFactory &&
              this.audioController.setAudioFactory(t.audioFactory),
            t.animationData
              ? this.setupAnimation(t.animationData)
              : t.path &&
                (-1 !== t.path.lastIndexOf("\\")
                  ? (this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1))
                  : (this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1)),
                (this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1)),
                (this.fileName = this.fileName.substr(
                  0,
                  this.fileName.lastIndexOf(".json")
                )),
                O.loadAnimation(
                  t.path,
                  this.configAnimation,
                  this.onSetupError
                ));
        }),
        (q.prototype.onSetupError = function () {
          this.trigger("data_failed");
        }),
        (q.prototype.setupAnimation = function (t) {
          O.completeAnimation(t, this.configAnimation);
        }),
        (q.prototype.setData = function (t, e) {
          e && "object" !== z(e) && (e = JSON.parse(e));
          var i = { wrapper: t, animationData: e },
            r = t.attributes;
          (i.path = r.getNamedItem("data-animation-path")
            ? r.getNamedItem("data-animation-path").value
            : r.getNamedItem("data-bm-path")
            ? r.getNamedItem("data-bm-path").value
            : r.getNamedItem("bm-path")
            ? r.getNamedItem("bm-path").value
            : ""),
            (i.animType = r.getNamedItem("data-anim-type")
              ? r.getNamedItem("data-anim-type").value
              : r.getNamedItem("data-bm-type")
              ? r.getNamedItem("data-bm-type").value
              : r.getNamedItem("bm-type")
              ? r.getNamedItem("bm-type").value
              : r.getNamedItem("data-bm-renderer")
              ? r.getNamedItem("data-bm-renderer").value
              : r.getNamedItem("bm-renderer")
              ? r.getNamedItem("bm-renderer").value
              : (function () {
                  if (K.canvas) return "canvas";
                  for (var t in K) if (K[t]) return t;
                  return "";
                })() || "canvas");
          var a = r.getNamedItem("data-anim-loop")
            ? r.getNamedItem("data-anim-loop").value
            : r.getNamedItem("data-bm-loop")
            ? r.getNamedItem("data-bm-loop").value
            : r.getNamedItem("bm-loop")
            ? r.getNamedItem("bm-loop").value
            : "";
          "false" === a
            ? (i.loop = !1)
            : "true" === a
            ? (i.loop = !0)
            : "" !== a && (i.loop = parseInt(a, 10));
          var s = r.getNamedItem("data-anim-autoplay")
            ? r.getNamedItem("data-anim-autoplay").value
            : r.getNamedItem("data-bm-autoplay")
            ? r.getNamedItem("data-bm-autoplay").value
            : !r.getNamedItem("bm-autoplay") ||
              r.getNamedItem("bm-autoplay").value;
          (i.autoplay = "false" !== s),
            (i.name = r.getNamedItem("data-name")
              ? r.getNamedItem("data-name").value
              : r.getNamedItem("data-bm-name")
              ? r.getNamedItem("data-bm-name").value
              : r.getNamedItem("bm-name")
              ? r.getNamedItem("bm-name").value
              : ""),
            "false" ===
              (r.getNamedItem("data-anim-prerender")
                ? r.getNamedItem("data-anim-prerender").value
                : r.getNamedItem("data-bm-prerender")
                ? r.getNamedItem("data-bm-prerender").value
                : r.getNamedItem("bm-prerender")
                ? r.getNamedItem("bm-prerender").value
                : "") && (i.prerender = !1),
            i.path ? this.setParams(i) : this.trigger("destroy");
        }),
        (q.prototype.includeLayers = function (t) {
          t.op > this.animationData.op &&
            ((this.animationData.op = t.op),
            (this.totalFrames = Math.floor(t.op - this.animationData.ip)));
          var e,
            i,
            r = this.animationData.layers,
            a = r.length,
            s = t.layers,
            n = s.length;
          for (i = 0; i < n; i += 1)
            for (e = 0; e < a; ) {
              if (r[e].id === s[i].id) {
                r[e] = s[i];
                break;
              }
              e += 1;
            }
          if (
            ((t.chars || t.fonts) &&
              (this.renderer.globalData.fontManager.addChars(t.chars),
              this.renderer.globalData.fontManager.addFonts(
                t.fonts,
                this.renderer.globalData.defs
              )),
            t.assets)
          )
            for (a = t.assets.length, e = 0; e < a; e += 1)
              this.animationData.assets.push(t.assets[e]);
          (this.animationData.__complete = !1),
            O.completeAnimation(this.animationData, this.onSegmentComplete);
        }),
        (q.prototype.onSegmentComplete = function (t) {
          this.animationData = t;
          var e = P();
          e && e.initExpressions(this), this.loadNextSegment();
        }),
        (q.prototype.loadNextSegment = function () {
          var t = this.animationData.segments;
          if (!t || 0 === t.length || !this.autoloadSegments)
            return (
              this.trigger("data_ready"),
              void (this.timeCompleted = this.totalFrames)
            );
          var e = t.shift();
          this.timeCompleted = e.time * this.frameRate;
          var i = this.path + this.fileName + "_" + this.segmentPos + ".json";
          (this.segmentPos += 1),
            O.loadData(
              i,
              this.includeLayers.bind(this),
              function () {
                this.trigger("data_failed");
              }.bind(this)
            );
        }),
        (q.prototype.loadSegments = function () {
          this.animationData.segments ||
            (this.timeCompleted = this.totalFrames),
            this.loadNextSegment();
        }),
        (q.prototype.imagesLoaded = function () {
          this.trigger("loaded_images"), this.checkLoaded();
        }),
        (q.prototype.preloadImages = function () {
          this.imagePreloader.setAssetsPath(this.assetsPath),
            this.imagePreloader.setPath(this.path),
            this.imagePreloader.loadAssets(
              this.animationData.assets,
              this.imagesLoaded.bind(this)
            );
        }),
        (q.prototype.configAnimation = function (t) {
          if (this.renderer)
            try {
              (this.animationData = t),
                this.initialSegment
                  ? ((this.totalFrames = Math.floor(
                      this.initialSegment[1] - this.initialSegment[0]
                    )),
                    (this.firstFrame = Math.round(this.initialSegment[0])))
                  : ((this.totalFrames = Math.floor(
                      this.animationData.op - this.animationData.ip
                    )),
                    (this.firstFrame = Math.round(this.animationData.ip))),
                this.renderer.configAnimation(t),
                t.assets || (t.assets = []),
                (this.assets = this.animationData.assets),
                (this.frameRate = this.animationData.fr),
                (this.frameMult = this.animationData.fr / 1e3),
                this.renderer.searchExtraCompositions(t.assets),
                (this.markers = H(t.markers || [])),
                this.trigger("config_ready"),
                this.preloadImages(),
                this.loadSegments(),
                this.updaFrameModifier(),
                this.waitForFontsLoaded(),
                this.isPaused && this.audioController.pause();
            } catch (e) {
              this.triggerConfigError(e);
            }
        }),
        (q.prototype.waitForFontsLoaded = function () {
          this.renderer &&
            (this.renderer.globalData.fontManager.isLoaded
              ? this.checkLoaded()
              : setTimeout(this.waitForFontsLoaded.bind(this), 20));
        }),
        (q.prototype.checkLoaded = function () {
          if (
            !this.isLoaded &&
            this.renderer.globalData.fontManager.isLoaded &&
            (this.imagePreloader.loadedImages() ||
              "canvas" !== this.renderer.rendererType) &&
            this.imagePreloader.loadedFootages()
          ) {
            this.isLoaded = !0;
            var t = P();
            t && t.initExpressions(this),
              this.renderer.initItems(),
              setTimeout(
                function () {
                  this.trigger("DOMLoaded");
                }.bind(this),
                0
              ),
              this.gotoFrame(),
              this.autoplay && this.play();
          }
        }),
        (q.prototype.resize = function (t, e) {
          var i = "number" == typeof t ? t : void 0,
            r = "number" == typeof e ? e : void 0;
          this.renderer.updateContainerSize(i, r);
        }),
        (q.prototype.setSubframe = function (t) {
          this.isSubframeEnabled = !!t;
        }),
        (q.prototype.gotoFrame = function () {
          (this.currentFrame = this.isSubframeEnabled
            ? this.currentRawFrame
            : ~~this.currentRawFrame),
            this.timeCompleted !== this.totalFrames &&
              this.currentFrame > this.timeCompleted &&
              (this.currentFrame = this.timeCompleted),
            this.trigger("enterFrame"),
            this.renderFrame(),
            this.trigger("drawnFrame");
        }),
        (q.prototype.renderFrame = function () {
          if (!1 !== this.isLoaded && this.renderer)
            try {
              this.expressionsPlugin && this.expressionsPlugin.resetFrame(),
                this.renderer.renderFrame(this.currentFrame + this.firstFrame);
            } catch (Ft) {
              this.triggerRenderFrameError(Ft);
            }
        }),
        (q.prototype.play = function (t) {
          (t && this.name !== t) ||
            (!0 === this.isPaused &&
              ((this.isPaused = !1),
              this.trigger("_play"),
              this.audioController.resume(),
              this._idle && ((this._idle = !1), this.trigger("_active"))));
        }),
        (q.prototype.pause = function (t) {
          (t && this.name !== t) ||
            (!1 === this.isPaused &&
              ((this.isPaused = !0),
              this.trigger("_pause"),
              (this._idle = !0),
              this.trigger("_idle"),
              this.audioController.pause()));
        }),
        (q.prototype.togglePause = function (t) {
          (t && this.name !== t) ||
            (!0 === this.isPaused ? this.play() : this.pause());
        }),
        (q.prototype.stop = function (t) {
          (t && this.name !== t) ||
            (this.pause(),
            (this.playCount = 0),
            (this._completedLoop = !1),
            this.setCurrentRawFrameValue(0));
        }),
        (q.prototype.getMarkerData = function (t) {
          for (var e, i = 0; i < this.markers.length; i += 1)
            if ((e = this.markers[i]).payload && e.payload.name === t) return e;
          return null;
        }),
        (q.prototype.goToAndStop = function (t, e, i) {
          if (!i || this.name === i) {
            var r = Number(t);
            if (isNaN(r)) {
              var a = this.getMarkerData(t);
              a && this.goToAndStop(a.time, !0);
            } else
              e
                ? this.setCurrentRawFrameValue(t)
                : this.setCurrentRawFrameValue(t * this.frameModifier);
            this.pause();
          }
        }),
        (q.prototype.goToAndPlay = function (t, e, i) {
          if (!i || this.name === i) {
            var r = Number(t);
            if (isNaN(r)) {
              var a = this.getMarkerData(t);
              a &&
                (a.duration
                  ? this.playSegments([a.time, a.time + a.duration], !0)
                  : this.goToAndStop(a.time, !0));
            } else this.goToAndStop(r, e, i);
            this.play();
          }
        }),
        (q.prototype.advanceTime = function (t) {
          if (!0 !== this.isPaused && !1 !== this.isLoaded) {
            var e = this.currentRawFrame + t * this.frameModifier,
              i = !1;
            e >= this.totalFrames - 1 && this.frameModifier > 0
              ? this.loop && this.playCount !== this.loop
                ? e >= this.totalFrames
                  ? ((this.playCount += 1),
                    this.checkSegments(e % this.totalFrames) ||
                      (this.setCurrentRawFrameValue(e % this.totalFrames),
                      (this._completedLoop = !0),
                      this.trigger("loopComplete")))
                  : this.setCurrentRawFrameValue(e)
                : this.checkSegments(
                    e > this.totalFrames ? e % this.totalFrames : 0
                  ) || ((i = !0), (e = this.totalFrames - 1))
              : e < 0
              ? this.checkSegments(e % this.totalFrames) ||
                (!this.loop || (this.playCount-- <= 0 && !0 !== this.loop)
                  ? ((i = !0), (e = 0))
                  : (this.setCurrentRawFrameValue(
                      this.totalFrames + (e % this.totalFrames)
                    ),
                    this._completedLoop
                      ? this.trigger("loopComplete")
                      : (this._completedLoop = !0)))
              : this.setCurrentRawFrameValue(e),
              i &&
                (this.setCurrentRawFrameValue(e),
                this.pause(),
                this.trigger("complete"));
          }
        }),
        (q.prototype.adjustSegment = function (t, e) {
          (this.playCount = 0),
            t[1] < t[0]
              ? (this.frameModifier > 0 &&
                  (this.playSpeed < 0
                    ? this.setSpeed(-this.playSpeed)
                    : this.setDirection(-1)),
                (this.totalFrames = t[0] - t[1]),
                (this.timeCompleted = this.totalFrames),
                (this.firstFrame = t[1]),
                this.setCurrentRawFrameValue(this.totalFrames - 0.001 - e))
              : t[1] > t[0] &&
                (this.frameModifier < 0 &&
                  (this.playSpeed < 0
                    ? this.setSpeed(-this.playSpeed)
                    : this.setDirection(1)),
                (this.totalFrames = t[1] - t[0]),
                (this.timeCompleted = this.totalFrames),
                (this.firstFrame = t[0]),
                this.setCurrentRawFrameValue(0.001 + e)),
            this.trigger("segmentStart");
        }),
        (q.prototype.setSegment = function (t, e) {
          var i = -1;
          this.isPaused &&
            (this.currentRawFrame + this.firstFrame < t
              ? (i = t)
              : this.currentRawFrame + this.firstFrame > e && (i = e - t)),
            (this.firstFrame = t),
            (this.totalFrames = e - t),
            (this.timeCompleted = this.totalFrames),
            -1 !== i && this.goToAndStop(i, !0);
        }),
        (q.prototype.playSegments = function (t, e) {
          if ((e && (this.segments.length = 0), "object" === z(t[0]))) {
            var i,
              r = t.length;
            for (i = 0; i < r; i += 1) this.segments.push(t[i]);
          } else this.segments.push(t);
          this.segments.length &&
            e &&
            this.adjustSegment(this.segments.shift(), 0),
            this.isPaused && this.play();
        }),
        (q.prototype.resetSegments = function (t) {
          (this.segments.length = 0),
            this.segments.push([this.animationData.ip, this.animationData.op]),
            t && this.checkSegments(0);
        }),
        (q.prototype.checkSegments = function (t) {
          return (
            !!this.segments.length &&
            (this.adjustSegment(this.segments.shift(), t), !0)
          );
        }),
        (q.prototype.destroy = function (t) {
          (t && this.name !== t) ||
            !this.renderer ||
            (this.renderer.destroy(),
            this.imagePreloader.destroy(),
            this.trigger("destroy"),
            (this._cbs = null),
            (this.onEnterFrame = null),
            (this.onLoopComplete = null),
            (this.onComplete = null),
            (this.onSegmentStart = null),
            (this.onDestroy = null),
            (this.renderer = null),
            (this.expressionsPlugin = null),
            (this.imagePreloader = null),
            (this.projectInterface = null));
        }),
        (q.prototype.setCurrentRawFrameValue = function (t) {
          (this.currentRawFrame = t), this.gotoFrame();
        }),
        (q.prototype.setSpeed = function (t) {
          (this.playSpeed = t), this.updaFrameModifier();
        }),
        (q.prototype.setDirection = function (t) {
          (this.playDirection = t < 0 ? -1 : 1), this.updaFrameModifier();
        }),
        (q.prototype.setLoop = function (t) {
          this.loop = t;
        }),
        (q.prototype.setVolume = function (t, e) {
          (e && this.name !== e) || this.audioController.setVolume(t);
        }),
        (q.prototype.getVolume = function () {
          return this.audioController.getVolume();
        }),
        (q.prototype.mute = function (t) {
          (t && this.name !== t) || this.audioController.mute();
        }),
        (q.prototype.unmute = function (t) {
          (t && this.name !== t) || this.audioController.unmute();
        }),
        (q.prototype.updaFrameModifier = function () {
          (this.frameModifier =
            this.frameMult * this.playSpeed * this.playDirection),
            this.audioController.setRate(this.playSpeed * this.playDirection);
        }),
        (q.prototype.getPath = function () {
          return this.path;
        }),
        (q.prototype.getAssetsPath = function (t) {
          var e = "";
          if (t.e) e = t.p;
          else if (this.assetsPath) {
            var i = t.p;
            -1 !== i.indexOf("images/") && (i = i.split("/")[1]),
              (e = this.assetsPath + i);
          } else (e = this.path), (e += t.u ? t.u : ""), (e += t.p);
          return e;
        }),
        (q.prototype.getAssetData = function (t) {
          for (var e = 0, i = this.assets.length; e < i; ) {
            if (t === this.assets[e].id) return this.assets[e];
            e += 1;
          }
          return null;
        }),
        (q.prototype.hide = function () {
          this.renderer.hide();
        }),
        (q.prototype.show = function () {
          this.renderer.show();
        }),
        (q.prototype.getDuration = function (t) {
          return t ? this.totalFrames : this.totalFrames / this.frameRate;
        }),
        (q.prototype.updateDocumentData = function (t, e, i) {
          try {
            this.renderer.getElementByPath(t).updateDocumentData(e, i);
          } catch (r) {}
        }),
        (q.prototype.trigger = function (t) {
          if (this._cbs && this._cbs[t])
            switch (t) {
              case "enterFrame":
                this.triggerEvent(
                  t,
                  new C(
                    t,
                    this.currentFrame,
                    this.totalFrames,
                    this.frameModifier
                  )
                );
                break;
              case "drawnFrame":
                (this.drawnFrameEvent.currentTime = this.currentFrame),
                  (this.drawnFrameEvent.totalTime = this.totalFrames),
                  (this.drawnFrameEvent.direction = this.frameModifier),
                  this.triggerEvent(t, this.drawnFrameEvent);
                break;
              case "loopComplete":
                this.triggerEvent(
                  t,
                  new k(t, this.loop, this.playCount, this.frameMult)
                );
                break;
              case "complete":
                this.triggerEvent(t, new B(t, this.frameMult));
                break;
              case "segmentStart":
                this.triggerEvent(
                  t,
                  new x(t, this.firstFrame, this.totalFrames)
                );
                break;
              case "destroy":
                this.triggerEvent(t, new w(t, this));
                break;
              default:
                this.triggerEvent(t);
            }
          "enterFrame" === t &&
            this.onEnterFrame &&
            this.onEnterFrame.call(
              this,
              new C(t, this.currentFrame, this.totalFrames, this.frameMult)
            ),
            "loopComplete" === t &&
              this.onLoopComplete &&
              this.onLoopComplete.call(
                this,
                new k(t, this.loop, this.playCount, this.frameMult)
              ),
            "complete" === t &&
              this.onComplete &&
              this.onComplete.call(this, new B(t, this.frameMult)),
            "segmentStart" === t &&
              this.onSegmentStart &&
              this.onSegmentStart.call(
                this,
                new x(t, this.firstFrame, this.totalFrames)
              ),
            "destroy" === t &&
              this.onDestroy &&
              this.onDestroy.call(this, new w(t, this));
        }),
        (q.prototype.triggerRenderFrameError = function (t) {
          var e = new Q(t, this.currentFrame);
          this.triggerEvent("error", e),
            this.onError && this.onError.call(this, e);
        }),
        (q.prototype.triggerConfigError = function (t) {
          var e = new S(t, this.currentFrame);
          this.triggerEvent("error", e),
            this.onError && this.onError.call(this, e);
        });
      var W = (function () {
          var t = {},
            e = [],
            i = 0,
            r = 0,
            s = 0,
            n = !0,
            o = !1;
          function h(t) {
            for (var i = 0, a = t.target; i < r; )
              e[i].animation === a &&
                (e.splice(i, 1), (i -= 1), (r -= 1), a.isPaused || d()),
                (i += 1);
          }
          function l(t, i) {
            if (!t) return null;
            for (var a = 0; a < r; ) {
              if (e[a].elem === t && null !== e[a].elem) return e[a].animation;
              a += 1;
            }
            var s = new q();
            return u(s, t), s.setData(t, i), s;
          }
          function A() {
            (s += 1), f();
          }
          function d() {
            s -= 1;
          }
          function u(t, i) {
            t.addEventListener("destroy", h),
              t.addEventListener("_active", A),
              t.addEventListener("_idle", d),
              e.push({ elem: i, animation: t }),
              (r += 1);
          }
          function c(t) {
            var a,
              h = t - i;
            for (a = 0; a < r; a += 1) e[a].animation.advanceTime(h);
            (i = t), s && !o ? window.requestAnimationFrame(c) : (n = !0);
          }
          function g(t) {
            (i = t), window.requestAnimationFrame(c);
          }
          function f() {
            !o && s && n && (window.requestAnimationFrame(g), (n = !1));
          }
          return (
            (t.registerAnimation = l),
            (t.loadAnimation = function (t) {
              var e = new q();
              return u(e, null), e.setParams(t), e;
            }),
            (t.setSpeed = function (t, i) {
              var a;
              for (a = 0; a < r; a += 1) e[a].animation.setSpeed(t, i);
            }),
            (t.setDirection = function (t, i) {
              var a;
              for (a = 0; a < r; a += 1) e[a].animation.setDirection(t, i);
            }),
            (t.play = function (t) {
              var i;
              for (i = 0; i < r; i += 1) e[i].animation.play(t);
            }),
            (t.pause = function (t) {
              var i;
              for (i = 0; i < r; i += 1) e[i].animation.pause(t);
            }),
            (t.stop = function (t) {
              var i;
              for (i = 0; i < r; i += 1) e[i].animation.stop(t);
            }),
            (t.togglePause = function (t) {
              var i;
              for (i = 0; i < r; i += 1) e[i].animation.togglePause(t);
            }),
            (t.searchAnimations = function (t, e, i) {
              var r,
                s = [].concat(
                  [].slice.call(document.getElementsByClassName("lottie")),
                  [].slice.call(document.getElementsByClassName("bodymovin"))
                ),
                n = s.length;
              for (r = 0; r < n; r += 1)
                i && s[r].setAttribute("data-bm-type", i), l(s[r], t);
              if (e && 0 === n) {
                i || (i = "svg");
                var o = document.getElementsByTagName("body")[0];
                o.innerText = "";
                var h = a("div");
                (h.style.width = "100%"),
                  (h.style.height = "100%"),
                  h.setAttribute("data-bm-type", i),
                  o.appendChild(h),
                  l(h, t);
              }
            }),
            (t.resize = function () {
              var t;
              for (t = 0; t < r; t += 1) e[t].animation.resize();
            }),
            (t.goToAndStop = function (t, i, a) {
              var s;
              for (s = 0; s < r; s += 1) e[s].animation.goToAndStop(t, i, a);
            }),
            (t.destroy = function (t) {
              var i;
              for (i = r - 1; i >= 0; i -= 1) e[i].animation.destroy(t);
            }),
            (t.freeze = function () {
              o = !0;
            }),
            (t.unfreeze = function () {
              (o = !1), f();
            }),
            (t.setVolume = function (t, i) {
              var a;
              for (a = 0; a < r; a += 1) e[a].animation.setVolume(t, i);
            }),
            (t.mute = function (t) {
              var i;
              for (i = 0; i < r; i += 1) e[i].animation.mute(t);
            }),
            (t.unmute = function (t) {
              var i;
              for (i = 0; i < r; i += 1) e[i].animation.unmute(t);
            }),
            (t.getRegisteredAnimations = function () {
              var t,
                i = e.length,
                r = [];
              for (t = 0; t < i; t += 1) r.push(e[t].animation);
              return r;
            }),
            t
          );
        })(),
        J = (function () {
          var t = {
              getBezierEasing: function (t, i, r, a, s) {
                var n =
                  s ||
                  ("bez_" + t + "_" + i + "_" + r + "_" + a).replace(
                    /\./g,
                    "p"
                  );
                if (e[n]) return e[n];
                var o = new l([t, i, r, a]);
                return (e[n] = o), o;
              },
            },
            e = {},
            i = 0.1,
            r = "function" == typeof Float32Array;
          function a(t, e) {
            return 1 - 3 * e + 3 * t;
          }
          function s(t, e) {
            return 3 * e - 6 * t;
          }
          function n(t) {
            return 3 * t;
          }
          function o(t, e, i) {
            return ((a(e, i) * t + s(e, i)) * t + n(e)) * t;
          }
          function h(t, e, i) {
            return 3 * a(e, i) * t * t + 2 * s(e, i) * t + n(e);
          }
          function l(t) {
            (this._p = t),
              (this._mSampleValues = r ? new Float32Array(11) : new Array(11)),
              (this._precomputed = !1),
              (this.get = this.get.bind(this));
          }
          return (
            (l.prototype = {
              get: function (t) {
                var e = this._p[0],
                  i = this._p[1],
                  r = this._p[2],
                  a = this._p[3];
                return (
                  this._precomputed || this._precompute(),
                  e === i && r === a
                    ? t
                    : 0 === t
                    ? 0
                    : 1 === t
                    ? 1
                    : o(this._getTForX(t), i, a)
                );
              },
              _precompute: function () {
                var t = this._p[0],
                  e = this._p[1],
                  i = this._p[2],
                  r = this._p[3];
                (this._precomputed = !0),
                  (t === e && i === r) || this._calcSampleValues();
              },
              _calcSampleValues: function () {
                for (var t = this._p[0], e = this._p[2], r = 0; r < 11; ++r)
                  this._mSampleValues[r] = o(r * i, t, e);
              },
              _getTForX: function (t) {
                for (
                  var e = this._p[0],
                    r = this._p[2],
                    a = this._mSampleValues,
                    s = 0,
                    n = 1;
                  10 !== n && a[n] <= t;
                  ++n
                )
                  s += i;
                var l = s + ((t - a[--n]) / (a[n + 1] - a[n])) * i,
                  A = h(l, e, r);
                return A >= 0.001
                  ? (function (t, e, i, r) {
                      for (var a = 0; a < 4; ++a) {
                        var s = h(e, i, r);
                        if (0 === s) return e;
                        e -= (o(e, i, r) - t) / s;
                      }
                      return e;
                    })(t, l, e, r)
                  : 0 === A
                  ? l
                  : (function (t, e, i, r, a) {
                      var s,
                        n,
                        h = 0;
                      do {
                        (s = o((n = e + (i - e) / 2), r, a) - t) > 0
                          ? (i = n)
                          : (e = n);
                      } while (Math.abs(s) > 1e-7 && ++h < 10);
                      return n;
                    })(t, s, s + i, e, r);
              },
            }),
            t
          );
        })(),
        Z = {
          double: function (t) {
            return t.concat(l(t.length));
          },
        },
        X = function (t, e, i) {
          var r = 0,
            a = t,
            s = l(a);
          return {
            newElement: function () {
              return r ? s[(r -= 1)] : e();
            },
            release: function (t) {
              r === a && ((s = Z.double(s)), (a *= 2)),
                i && i(t),
                (s[r] = t),
                (r += 1);
            },
          };
        },
        $ = X(8, function () {
          return {
            addedLength: 0,
            percents: h("float32", N()),
            lengths: h("float32", N()),
          };
        }),
        tt = X(
          8,
          function () {
            return { lengths: [], totalLength: 0 };
          },
          function (t) {
            var e,
              i = t.lengths.length;
            for (e = 0; e < i; e += 1) $.release(t.lengths[e]);
            t.lengths.length = 0;
          }
        ),
        et = (function () {
          var t = Math;
          function e(t, e, i, r, a, s) {
            var n = t * r + e * a + i * s - a * r - s * t - i * e;
            return n > -0.001 && n < 0.001;
          }
          var i = function (t, e, i, r) {
            var a,
              s,
              n,
              o,
              h,
              l,
              A = N(),
              d = 0,
              u = [],
              c = [],
              g = $.newElement();
            for (n = i.length, a = 0; a < A; a += 1) {
              for (h = a / (A - 1), l = 0, s = 0; s < n; s += 1)
                (o =
                  f(1 - h, 3) * t[s] +
                  3 * f(1 - h, 2) * h * i[s] +
                  3 * (1 - h) * f(h, 2) * r[s] +
                  f(h, 3) * e[s]),
                  (u[s] = o),
                  null !== c[s] && (l += f(u[s] - c[s], 2)),
                  (c[s] = u[s]);
              l && (d += l = p(l)), (g.percents[a] = h), (g.lengths[a] = d);
            }
            return (g.addedLength = d), g;
          };
          function r(t) {
            (this.segmentLength = 0), (this.points = new Array(t));
          }
          function a(t, e) {
            (this.partialLength = t), (this.point = e);
          }
          var s,
            n =
              ((s = {}),
              function (t, i, n, o) {
                var h = (
                  t[0] +
                  "_" +
                  t[1] +
                  "_" +
                  i[0] +
                  "_" +
                  i[1] +
                  "_" +
                  n[0] +
                  "_" +
                  n[1] +
                  "_" +
                  o[0] +
                  "_" +
                  o[1]
                ).replace(/\./g, "p");
                if (!s[h]) {
                  var A,
                    d,
                    u,
                    c,
                    g,
                    m,
                    v,
                    E = N(),
                    y = 0,
                    I = null;
                  2 === t.length &&
                    (t[0] !== i[0] || t[1] !== i[1]) &&
                    e(t[0], t[1], i[0], i[1], t[0] + n[0], t[1] + n[1]) &&
                    e(t[0], t[1], i[0], i[1], i[0] + o[0], i[1] + o[1]) &&
                    (E = 2);
                  var C = new r(E);
                  for (u = n.length, A = 0; A < E; A += 1) {
                    for (v = l(u), g = A / (E - 1), m = 0, d = 0; d < u; d += 1)
                      (c =
                        f(1 - g, 3) * t[d] +
                        3 * f(1 - g, 2) * g * (t[d] + n[d]) +
                        3 * (1 - g) * f(g, 2) * (i[d] + o[d]) +
                        f(g, 3) * i[d]),
                        (v[d] = c),
                        null !== I && (m += f(v[d] - I[d], 2));
                    (y += m = p(m)), (C.points[A] = new a(m, v)), (I = v);
                  }
                  (C.segmentLength = y), (s[h] = C);
                }
                return s[h];
              });
          function o(t, e) {
            var i = e.percents,
              r = e.lengths,
              a = i.length,
              s = m((a - 1) * t),
              n = t * e.addedLength,
              o = 0;
            if (s === a - 1 || 0 === s || n === r[s]) return i[s];
            for (var h = r[s] > n ? -1 : 1, l = !0; l; )
              if (
                (r[s] <= n && r[s + 1] > n
                  ? ((o = (n - r[s]) / (r[s + 1] - r[s])), (l = !1))
                  : (s += h),
                s < 0 || s >= a - 1)
              ) {
                if (s === a - 1) return i[s];
                l = !1;
              }
            return i[s] + (i[s + 1] - i[s]) * o;
          }
          var A = h("float32", 8);
          return {
            getSegmentsLength: function (t) {
              var e,
                r = tt.newElement(),
                a = t.c,
                s = t.v,
                n = t.o,
                o = t.i,
                h = t._length,
                l = r.lengths,
                A = 0;
              for (e = 0; e < h - 1; e += 1)
                (l[e] = i(s[e], s[e + 1], n[e], o[e + 1])),
                  (A += l[e].addedLength);
              return (
                a &&
                  h &&
                  ((l[e] = i(s[e], s[0], n[e], o[0])), (A += l[e].addedLength)),
                (r.totalLength = A),
                r
              );
            },
            getNewSegment: function (e, i, r, a, s, n, h) {
              s < 0 ? (s = 0) : s > 1 && (s = 1);
              var l,
                d = o(s, h),
                u = o((n = n > 1 ? 1 : n), h),
                c = e.length,
                g = 1 - d,
                f = 1 - u,
                p = g * g * g,
                m = d * g * g * 3,
                v = d * d * g * 3,
                E = d * d * d,
                y = g * g * f,
                I = d * g * f + g * d * f + g * g * u,
                C = d * d * f + g * d * u + d * g * u,
                B = d * d * u,
                k = g * f * f,
                x = d * f * f + g * u * f + g * f * u,
                w = d * u * f + g * u * u + d * f * u,
                Q = d * u * u,
                S = f * f * f,
                b = u * f * f + f * u * f + f * f * u,
                D = u * u * f + f * u * u + u * f * u,
                R = u * u * u;
              for (l = 0; l < c; l += 1)
                (A[4 * l] =
                  t.round(1e3 * (p * e[l] + m * r[l] + v * a[l] + E * i[l])) /
                  1e3),
                  (A[4 * l + 1] =
                    t.round(1e3 * (y * e[l] + I * r[l] + C * a[l] + B * i[l])) /
                    1e3),
                  (A[4 * l + 2] =
                    t.round(1e3 * (k * e[l] + x * r[l] + w * a[l] + Q * i[l])) /
                    1e3),
                  (A[4 * l + 3] =
                    t.round(1e3 * (S * e[l] + b * r[l] + D * a[l] + R * i[l])) /
                    1e3);
              return A;
            },
            getPointInSegment: function (e, i, r, a, s, n) {
              var h = o(s, n),
                l = 1 - h;
              return [
                t.round(
                  1e3 *
                    (l * l * l * e[0] +
                      (h * l * l + l * h * l + l * l * h) * r[0] +
                      (h * h * l + l * h * h + h * l * h) * a[0] +
                      h * h * h * i[0])
                ) / 1e3,
                t.round(
                  1e3 *
                    (l * l * l * e[1] +
                      (h * l * l + l * h * l + l * l * h) * r[1] +
                      (h * h * l + l * h * h + h * l * h) * a[1] +
                      h * h * h * i[1])
                ) / 1e3,
              ];
            },
            buildBezierData: n,
            pointOnLine2D: e,
            pointOnLine3D: function (i, r, a, s, n, o, h, l, A) {
              if (0 === a && 0 === o && 0 === A) return e(i, r, s, n, h, l);
              var d,
                u = t.sqrt(t.pow(s - i, 2) + t.pow(n - r, 2) + t.pow(o - a, 2)),
                c = t.sqrt(t.pow(h - i, 2) + t.pow(l - r, 2) + t.pow(A - a, 2)),
                g = t.sqrt(t.pow(h - s, 2) + t.pow(l - n, 2) + t.pow(A - o, 2));
              return (
                (d =
                  u > c
                    ? u > g
                      ? u - c - g
                      : g - c - u
                    : g > c
                    ? g - c - u
                    : c - u - g) > -1e-4 && d < 1e-4
              );
            },
          };
        })(),
        it = i,
        rt = Math.abs;
      function at(t, e) {
        var i,
          r = this.offsetTime;
        "multidimensional" === this.propType &&
          (i = h("float32", this.pv.length));
        for (
          var a,
            s,
            n,
            o,
            l,
            A,
            d,
            u,
            c,
            g = e.lastIndex,
            f = g,
            p = this.keyframes.length - 1,
            m = !0;
          m;

        ) {
          if (
            ((a = this.keyframes[f]),
            (s = this.keyframes[f + 1]),
            f === p - 1 && t >= s.t - r)
          ) {
            a.h && (a = s), (g = 0);
            break;
          }
          if (s.t - r > t) {
            g = f;
            break;
          }
          f < p - 1 ? (f += 1) : ((g = 0), (m = !1));
        }
        n = this.keyframesMetadata[f] || {};
        var v,
          E,
          I,
          C,
          B,
          k,
          x,
          w,
          Q,
          S,
          b,
          D,
          R,
          L,
          T,
          M,
          F,
          P,
          _,
          N,
          U,
          G,
          O,
          j,
          Y,
          H,
          V,
          K = s.t - r,
          z = a.t - r;
        if (a.to) {
          n.bezierData ||
            (n.bezierData = et.buildBezierData(a.s, s.s || a.e, a.to, a.ti));
          var q = n.bezierData;
          if (t >= K || t < z) {
            var W = t >= K ? q.points.length - 1 : 0;
            for (l = q.points[W].point.length, o = 0; o < l; o += 1)
              i[o] = q.points[W].point[o];
          } else {
            n.__fnct
              ? (c = n.__fnct)
              : ((c = J.getBezierEasing(a.o.x, a.o.y, a.i.x, a.i.y, a.n).get),
                (n.__fnct = c)),
              (A = c((t - z) / (K - z)));
            var Z,
              X = q.segmentLength * A,
              $ =
                e.lastFrame < t && e._lastKeyframeIndex === f
                  ? e._lastAddedLength
                  : 0;
            for (
              u =
                e.lastFrame < t && e._lastKeyframeIndex === f
                  ? e._lastPoint
                  : 0,
                m = !0,
                d = q.points.length;
              m;

            ) {
              if (
                (($ += q.points[u].partialLength),
                0 === X || 0 === A || u === q.points.length - 1)
              ) {
                for (l = q.points[u].point.length, o = 0; o < l; o += 1)
                  i[o] = q.points[u].point[o];
                break;
              }
              if (X >= $ && X < $ + q.points[u + 1].partialLength) {
                for (
                  Z = (X - $) / q.points[u + 1].partialLength,
                    l = q.points[u].point.length,
                    o = 0;
                  o < l;
                  o += 1
                )
                  i[o] =
                    q.points[u].point[o] +
                    (q.points[u + 1].point[o] - q.points[u].point[o]) * Z;
                break;
              }
              u < d - 1 ? (u += 1) : (m = !1);
            }
            (e._lastPoint = u),
              (e._lastAddedLength = $ - q.points[u].partialLength),
              (e._lastKeyframeIndex = f);
          }
        } else {
          var tt, it, rt, at, nt;
          if (((p = a.s.length), (v = s.s || a.e), this.sh && 1 !== a.h))
            if (t >= K) (i[0] = v[0]), (i[1] = v[1]), (i[2] = v[2]);
            else if (t <= z) (i[0] = a.s[0]), (i[1] = a.s[1]), (i[2] = a.s[2]);
            else {
              var ot = st(a.s),
                ht = st(v);
              (E = i),
                (D = ht),
                (R = (t - z) / (K - z)),
                (_ = []),
                (N = (b = ot)[0]),
                (U = b[1]),
                (G = b[2]),
                (O = b[3]),
                (j = D[0]),
                (Y = D[1]),
                (H = D[2]),
                (V = D[3]),
                (T = N * j + U * Y + G * H + O * V) < 0 &&
                  ((T = -T), (j = -j), (Y = -Y), (H = -H), (V = -V)),
                1 - T > 1e-6
                  ? ((L = Math.acos(T)),
                    (M = Math.sin(L)),
                    (F = Math.sin((1 - R) * L) / M),
                    (P = Math.sin(R * L) / M))
                  : ((F = 1 - R), (P = R)),
                (_[0] = F * N + P * j),
                (_[1] = F * U + P * Y),
                (_[2] = F * G + P * H),
                (_[3] = F * O + P * V),
                (C = (I = _)[0]),
                (B = I[1]),
                (k = I[2]),
                (x = I[3]),
                (w = Math.atan2(
                  2 * B * x - 2 * C * k,
                  1 - 2 * B * B - 2 * k * k
                )),
                (Q = Math.asin(2 * C * B + 2 * k * x)),
                (S = Math.atan2(
                  2 * C * x - 2 * B * k,
                  1 - 2 * C * C - 2 * k * k
                )),
                (E[0] = w / y),
                (E[1] = Q / y),
                (E[2] = S / y);
            }
          else
            for (f = 0; f < p; f += 1)
              1 !== a.h &&
                (t >= K
                  ? (A = 1)
                  : t < z
                  ? (A = 0)
                  : (a.o.x.constructor === Array
                      ? (n.__fnct || (n.__fnct = []),
                        n.__fnct[f]
                          ? (c = n.__fnct[f])
                          : ((tt = void 0 === a.o.x[f] ? a.o.x[0] : a.o.x[f]),
                            (it = void 0 === a.o.y[f] ? a.o.y[0] : a.o.y[f]),
                            (rt = void 0 === a.i.x[f] ? a.i.x[0] : a.i.x[f]),
                            (at = void 0 === a.i.y[f] ? a.i.y[0] : a.i.y[f]),
                            (c = J.getBezierEasing(tt, it, rt, at).get),
                            (n.__fnct[f] = c)))
                      : n.__fnct
                      ? (c = n.__fnct)
                      : ((tt = a.o.x),
                        (it = a.o.y),
                        (rt = a.i.x),
                        (at = a.i.y),
                        (c = J.getBezierEasing(tt, it, rt, at).get),
                        (a.keyframeMetadata = c)),
                    (A = c((t - z) / (K - z))))),
                (v = s.s || a.e),
                (nt = 1 === a.h ? a.s[f] : a.s[f] + (v[f] - a.s[f]) * A),
                "multidimensional" === this.propType ? (i[f] = nt) : (i = nt);
        }
        return (e.lastIndex = g), i;
      }
      function st(t) {
        var e = t[0] * y,
          i = t[1] * y,
          r = t[2] * y,
          a = Math.cos(e / 2),
          s = Math.cos(i / 2),
          n = Math.cos(r / 2),
          o = Math.sin(e / 2),
          h = Math.sin(i / 2),
          l = Math.sin(r / 2);
        return [
          o * h * n + a * s * l,
          o * s * n + a * h * l,
          a * h * n - o * s * l,
          a * s * n - o * h * l,
        ];
      }
      function nt() {
        var t = this.comp.renderedFrame - this.offsetTime,
          e = this.keyframes[0].t - this.offsetTime,
          i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        if (
          !(
            t === this._caching.lastFrame ||
            (this._caching.lastFrame !== it &&
              ((this._caching.lastFrame >= i && t >= i) ||
                (this._caching.lastFrame < e && t < e)))
          )
        ) {
          this._caching.lastFrame >= t &&
            ((this._caching._lastKeyframeIndex = -1),
            (this._caching.lastIndex = 0));
          var r = this.interpolateValue(t, this._caching);
          this.pv = r;
        }
        return (this._caching.lastFrame = t), this.pv;
      }
      function ot(t) {
        var e;
        if ("unidimensional" === this.propType)
          (e = t * this.mult),
            rt(this.v - e) > 1e-5 && ((this.v = e), (this._mdf = !0));
        else
          for (var i = 0, r = this.v.length; i < r; )
            (e = t[i] * this.mult),
              rt(this.v[i] - e) > 1e-5 && ((this.v[i] = e), (this._mdf = !0)),
              (i += 1);
      }
      function ht() {
        if (
          this.elem.globalData.frameId !== this.frameId &&
          this.effectsSequence.length
        )
          if (this.lock) this.setVValue(this.pv);
          else {
            var t;
            (this.lock = !0), (this._mdf = this._isFirstFrame);
            var e = this.effectsSequence.length,
              i = this.kf ? this.pv : this.data.k;
            for (t = 0; t < e; t += 1) i = this.effectsSequence[t](i);
            this.setVValue(i),
              (this._isFirstFrame = !1),
              (this.lock = !1),
              (this.frameId = this.elem.globalData.frameId);
          }
      }
      function lt(t) {
        this.effectsSequence.push(t), this.container.addDynamicProperty(this);
      }
      function At(t, e, i, r) {
        (this.propType = "unidimensional"),
          (this.mult = i || 1),
          (this.data = e),
          (this.v = i ? e.k * i : e.k),
          (this.pv = e.k),
          (this._mdf = !1),
          (this.elem = t),
          (this.container = r),
          (this.comp = t.comp),
          (this.k = !1),
          (this.kf = !1),
          (this.vel = 0),
          (this.effectsSequence = []),
          (this._isFirstFrame = !0),
          (this.getValue = ht),
          (this.setVValue = ot),
          (this.addEffect = lt);
      }
      function dt(t, e, i, r) {
        var a;
        (this.propType = "multidimensional"),
          (this.mult = i || 1),
          (this.data = e),
          (this._mdf = !1),
          (this.elem = t),
          (this.container = r),
          (this.comp = t.comp),
          (this.k = !1),
          (this.kf = !1),
          (this.frameId = -1);
        var s = e.k.length;
        for (
          this.v = h("float32", s),
            this.pv = h("float32", s),
            this.vel = h("float32", s),
            a = 0;
          a < s;
          a += 1
        )
          (this.v[a] = e.k[a] * this.mult), (this.pv[a] = e.k[a]);
        (this._isFirstFrame = !0),
          (this.effectsSequence = []),
          (this.getValue = ht),
          (this.setVValue = ot),
          (this.addEffect = lt);
      }
      function ut(t, e, i, r) {
        (this.propType = "unidimensional"),
          (this.keyframes = e.k),
          (this.keyframesMetadata = []),
          (this.offsetTime = t.data.st),
          (this.frameId = -1),
          (this._caching = {
            lastFrame: it,
            lastIndex: 0,
            value: 0,
            _lastKeyframeIndex: -1,
          }),
          (this.k = !0),
          (this.kf = !0),
          (this.data = e),
          (this.mult = i || 1),
          (this.elem = t),
          (this.container = r),
          (this.comp = t.comp),
          (this.v = it),
          (this.pv = it),
          (this._isFirstFrame = !0),
          (this.getValue = ht),
          (this.setVValue = ot),
          (this.interpolateValue = at),
          (this.effectsSequence = [nt.bind(this)]),
          (this.addEffect = lt);
      }
      function ct(t, e, i, r) {
        var a;
        this.propType = "multidimensional";
        var s,
          n,
          o,
          l,
          A = e.k.length;
        for (a = 0; a < A - 1; a += 1)
          e.k[a].to &&
            e.k[a].s &&
            e.k[a + 1] &&
            e.k[a + 1].s &&
            ((s = e.k[a].s),
            (n = e.k[a + 1].s),
            (o = e.k[a].to),
            (l = e.k[a].ti),
            ((2 === s.length &&
              (s[0] !== n[0] || s[1] !== n[1]) &&
              et.pointOnLine2D(
                s[0],
                s[1],
                n[0],
                n[1],
                s[0] + o[0],
                s[1] + o[1]
              ) &&
              et.pointOnLine2D(
                s[0],
                s[1],
                n[0],
                n[1],
                n[0] + l[0],
                n[1] + l[1]
              )) ||
              (3 === s.length &&
                (s[0] !== n[0] || s[1] !== n[1] || s[2] !== n[2]) &&
                et.pointOnLine3D(
                  s[0],
                  s[1],
                  s[2],
                  n[0],
                  n[1],
                  n[2],
                  s[0] + o[0],
                  s[1] + o[1],
                  s[2] + o[2]
                ) &&
                et.pointOnLine3D(
                  s[0],
                  s[1],
                  s[2],
                  n[0],
                  n[1],
                  n[2],
                  n[0] + l[0],
                  n[1] + l[1],
                  n[2] + l[2]
                ))) &&
              ((e.k[a].to = null), (e.k[a].ti = null)),
            s[0] === n[0] &&
              s[1] === n[1] &&
              0 === o[0] &&
              0 === o[1] &&
              0 === l[0] &&
              0 === l[1] &&
              (2 === s.length || (s[2] === n[2] && 0 === o[2] && 0 === l[2])) &&
              ((e.k[a].to = null), (e.k[a].ti = null)));
        (this.effectsSequence = [nt.bind(this)]),
          (this.data = e),
          (this.keyframes = e.k),
          (this.keyframesMetadata = []),
          (this.offsetTime = t.data.st),
          (this.k = !0),
          (this.kf = !0),
          (this._isFirstFrame = !0),
          (this.mult = i || 1),
          (this.elem = t),
          (this.container = r),
          (this.comp = t.comp),
          (this.getValue = ht),
          (this.setVValue = ot),
          (this.interpolateValue = at),
          (this.frameId = -1);
        var d = e.k[0].s.length;
        for (
          this.v = h("float32", d), this.pv = h("float32", d), a = 0;
          a < d;
          a += 1
        )
          (this.v[a] = it), (this.pv[a] = it);
        (this._caching = {
          lastFrame: it,
          lastIndex: 0,
          value: h("float32", d),
        }),
          (this.addEffect = lt);
      }
      var gt = {
        getProp: function (t, e, i, r, a) {
          var s;
          if ((e.sid && (e = t.globalData.slotManager.getProp(e)), e.k.length))
            if ("number" == typeof e.k[0]) s = new dt(t, e, r, a);
            else
              switch (i) {
                case 0:
                  s = new ut(t, e, r, a);
                  break;
                case 1:
                  s = new ct(t, e, r, a);
              }
          else s = new At(t, e, r, a);
          return s.effectsSequence.length && a.addDynamicProperty(s), s;
        },
      };
      function ft() {}
      ft.prototype = {
        addDynamicProperty: function (t) {
          -1 === this.dynamicProperties.indexOf(t) &&
            (this.dynamicProperties.push(t),
            this.container.addDynamicProperty(this),
            (this._isAnimated = !0));
        },
        iterateDynamicProperties: function () {
          var t;
          this._mdf = !1;
          var e = this.dynamicProperties.length;
          for (t = 0; t < e; t += 1)
            this.dynamicProperties[t].getValue(),
              this.dynamicProperties[t]._mdf && (this._mdf = !0);
        },
        initDynamicPropertyContainer: function (t) {
          (this.container = t),
            (this.dynamicProperties = []),
            (this._mdf = !1),
            (this._isAnimated = !1);
        },
      };
      var pt = X(8, function () {
        return h("float32", 2);
      });
      function mt() {
        (this.c = !1),
          (this._length = 0),
          (this._maxLength = 8),
          (this.v = l(this._maxLength)),
          (this.o = l(this._maxLength)),
          (this.i = l(this._maxLength));
      }
      (mt.prototype.setPathData = function (t, e) {
        (this.c = t), this.setLength(e);
        for (var i = 0; i < e; )
          (this.v[i] = pt.newElement()),
            (this.o[i] = pt.newElement()),
            (this.i[i] = pt.newElement()),
            (i += 1);
      }),
        (mt.prototype.setLength = function (t) {
          for (; this._maxLength < t; ) this.doubleArrayLength();
          this._length = t;
        }),
        (mt.prototype.doubleArrayLength = function () {
          (this.v = this.v.concat(l(this._maxLength))),
            (this.i = this.i.concat(l(this._maxLength))),
            (this.o = this.o.concat(l(this._maxLength))),
            (this._maxLength *= 2);
        }),
        (mt.prototype.setXYAt = function (t, e, i, r, a) {
          var s;
          switch (
            ((this._length = Math.max(this._length, r + 1)),
            this._length >= this._maxLength && this.doubleArrayLength(),
            i)
          ) {
            case "v":
              s = this.v;
              break;
            case "i":
              s = this.i;
              break;
            case "o":
              s = this.o;
              break;
            default:
              s = [];
          }
          (!s[r] || (s[r] && !a)) && (s[r] = pt.newElement()),
            (s[r][0] = t),
            (s[r][1] = e);
        }),
        (mt.prototype.setTripleAt = function (t, e, i, r, a, s, n, o) {
          this.setXYAt(t, e, "v", n, o),
            this.setXYAt(i, r, "o", n, o),
            this.setXYAt(a, s, "i", n, o);
        }),
        (mt.prototype.reverse = function () {
          var t = new mt();
          t.setPathData(this.c, this._length);
          var e = this.v,
            i = this.o,
            r = this.i,
            a = 0;
          this.c &&
            (t.setTripleAt(
              e[0][0],
              e[0][1],
              r[0][0],
              r[0][1],
              i[0][0],
              i[0][1],
              0,
              !1
            ),
            (a = 1));
          var s,
            n = this._length - 1,
            o = this._length;
          for (s = a; s < o; s += 1)
            t.setTripleAt(
              e[n][0],
              e[n][1],
              r[n][0],
              r[n][1],
              i[n][0],
              i[n][1],
              s,
              !1
            ),
              (n -= 1);
          return t;
        }),
        (mt.prototype.length = function () {
          return this._length;
        });
      var vt,
        Et =
          (((vt = X(
            4,
            function () {
              return new mt();
            },
            function (t) {
              var e,
                i = t._length;
              for (e = 0; e < i; e += 1)
                pt.release(t.v[e]),
                  pt.release(t.i[e]),
                  pt.release(t.o[e]),
                  (t.v[e] = null),
                  (t.i[e] = null),
                  (t.o[e] = null);
              (t._length = 0), (t.c = !1);
            }
          )).clone = function (t) {
            var e,
              i = vt.newElement(),
              r = void 0 === t._length ? t.v.length : t._length;
            for (i.setLength(r), i.c = t.c, e = 0; e < r; e += 1)
              i.setTripleAt(
                t.v[e][0],
                t.v[e][1],
                t.o[e][0],
                t.o[e][1],
                t.i[e][0],
                t.i[e][1],
                e
              );
            return i;
          }),
          vt);
      function yt() {
        (this._length = 0),
          (this._maxLength = 4),
          (this.shapes = l(this._maxLength));
      }
      (yt.prototype.addShape = function (t) {
        this._length === this._maxLength &&
          ((this.shapes = this.shapes.concat(l(this._maxLength))),
          (this._maxLength *= 2)),
          (this.shapes[this._length] = t),
          (this._length += 1);
      }),
        (yt.prototype.releaseShapes = function () {
          var t;
          for (t = 0; t < this._length; t += 1) Et.release(this.shapes[t]);
          this._length = 0;
        });
      var It,
        Ct,
        Bt,
        kt,
        xt =
          ((It = {
            newShapeCollection: function () {
              return Ct ? kt[(Ct -= 1)] : new yt();
            },
            release: function (t) {
              var e,
                i = t._length;
              for (e = 0; e < i; e += 1) Et.release(t.shapes[e]);
              (t._length = 0),
                Ct === Bt && ((kt = Z.double(kt)), (Bt *= 2)),
                (kt[Ct] = t),
                (Ct += 1);
            },
          }),
          (Ct = 0),
          (kt = l((Bt = 4))),
          It),
        wt = (function () {
          var t = -999999;
          function e(t, e, i) {
            var r,
              a,
              s,
              n,
              o,
              h,
              l,
              A,
              d,
              u = i.lastIndex,
              c = this.keyframes;
            if (t < c[0].t - this.offsetTime)
              (r = c[0].s[0]), (s = !0), (u = 0);
            else if (t >= c[c.length - 1].t - this.offsetTime)
              (r = c[c.length - 1].s
                ? c[c.length - 1].s[0]
                : c[c.length - 2].e[0]),
                (s = !0);
            else {
              for (
                var g, f, p, m = u, v = c.length - 1, E = !0;
                E && ((g = c[m]), !((f = c[m + 1]).t - this.offsetTime > t));

              )
                m < v - 1 ? (m += 1) : (E = !1);
              if (
                ((p = this.keyframesMetadata[m] || {}),
                (u = m),
                !(s = 1 === g.h))
              ) {
                if (t >= f.t - this.offsetTime) A = 1;
                else if (t < g.t - this.offsetTime) A = 0;
                else {
                  var y;
                  p.__fnct
                    ? (y = p.__fnct)
                    : ((y = J.getBezierEasing(g.o.x, g.o.y, g.i.x, g.i.y).get),
                      (p.__fnct = y)),
                    (A = y(
                      (t - (g.t - this.offsetTime)) /
                        (f.t - this.offsetTime - (g.t - this.offsetTime))
                    ));
                }
                a = f.s ? f.s[0] : g.e[0];
              }
              r = g.s[0];
            }
            for (
              h = e._length, l = r.i[0].length, i.lastIndex = u, n = 0;
              n < h;
              n += 1
            )
              for (o = 0; o < l; o += 1)
                (d = s ? r.i[n][o] : r.i[n][o] + (a.i[n][o] - r.i[n][o]) * A),
                  (e.i[n][o] = d),
                  (d = s ? r.o[n][o] : r.o[n][o] + (a.o[n][o] - r.o[n][o]) * A),
                  (e.o[n][o] = d),
                  (d = s ? r.v[n][o] : r.v[n][o] + (a.v[n][o] - r.v[n][o]) * A),
                  (e.v[n][o] = d);
          }
          function i() {
            var e = this.comp.renderedFrame - this.offsetTime,
              i = this.keyframes[0].t - this.offsetTime,
              r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
              a = this._caching.lastFrame;
            return (
              (a !== t && ((a < i && e < i) || (a > r && e > r))) ||
                ((this._caching.lastIndex =
                  a < e ? this._caching.lastIndex : 0),
                this.interpolateShape(e, this.pv, this._caching)),
              (this._caching.lastFrame = e),
              this.pv
            );
          }
          function r() {
            this.paths = this.localShapeCollection;
          }
          function a(t) {
            (function (t, e) {
              if (t._length !== e._length || t.c !== e.c) return !1;
              var i,
                r = t._length;
              for (i = 0; i < r; i += 1)
                if (
                  t.v[i][0] !== e.v[i][0] ||
                  t.v[i][1] !== e.v[i][1] ||
                  t.o[i][0] !== e.o[i][0] ||
                  t.o[i][1] !== e.o[i][1] ||
                  t.i[i][0] !== e.i[i][0] ||
                  t.i[i][1] !== e.i[i][1]
                )
                  return !1;
              return !0;
            })(this.v, t) ||
              ((this.v = Et.clone(t)),
              this.localShapeCollection.releaseShapes(),
              this.localShapeCollection.addShape(this.v),
              (this._mdf = !0),
              (this.paths = this.localShapeCollection));
          }
          function n() {
            if (this.elem.globalData.frameId !== this.frameId)
              if (this.effectsSequence.length)
                if (this.lock) this.setVValue(this.pv);
                else {
                  var t, e;
                  (this.lock = !0),
                    (this._mdf = !1),
                    (t = this.kf
                      ? this.pv
                      : this.data.ks
                      ? this.data.ks.k
                      : this.data.pt.k);
                  var i = this.effectsSequence.length;
                  for (e = 0; e < i; e += 1) t = this.effectsSequence[e](t);
                  this.setVValue(t),
                    (this.lock = !1),
                    (this.frameId = this.elem.globalData.frameId);
                }
              else this._mdf = !1;
          }
          function o(t, e, i) {
            (this.propType = "shape"),
              (this.comp = t.comp),
              (this.container = t),
              (this.elem = t),
              (this.data = e),
              (this.k = !1),
              (this.kf = !1),
              (this._mdf = !1);
            var a = 3 === i ? e.pt.k : e.ks.k;
            (this.v = Et.clone(a)),
              (this.pv = Et.clone(this.v)),
              (this.localShapeCollection = xt.newShapeCollection()),
              (this.paths = this.localShapeCollection),
              this.paths.addShape(this.v),
              (this.reset = r),
              (this.effectsSequence = []);
          }
          function h(t) {
            this.effectsSequence.push(t),
              this.container.addDynamicProperty(this);
          }
          function l(e, a, s) {
            (this.propType = "shape"),
              (this.comp = e.comp),
              (this.elem = e),
              (this.container = e),
              (this.offsetTime = e.data.st),
              (this.keyframes = 3 === s ? a.pt.k : a.ks.k),
              (this.keyframesMetadata = []),
              (this.k = !0),
              (this.kf = !0);
            var n = this.keyframes[0].s[0].i.length;
            (this.v = Et.newElement()),
              this.v.setPathData(this.keyframes[0].s[0].c, n),
              (this.pv = Et.clone(this.v)),
              (this.localShapeCollection = xt.newShapeCollection()),
              (this.paths = this.localShapeCollection),
              this.paths.addShape(this.v),
              (this.lastFrame = t),
              (this.reset = r),
              (this._caching = { lastFrame: t, lastIndex: 0 }),
              (this.effectsSequence = [i.bind(this)]);
          }
          (o.prototype.interpolateShape = e),
            (o.prototype.getValue = n),
            (o.prototype.setVValue = a),
            (o.prototype.addEffect = h),
            (l.prototype.getValue = n),
            (l.prototype.interpolateShape = e),
            (l.prototype.setVValue = a),
            (l.prototype.addEffect = h);
          var A = (function () {
              var t = I;
              function e(t, e) {
                (this.v = Et.newElement()),
                  this.v.setPathData(!0, 4),
                  (this.localShapeCollection = xt.newShapeCollection()),
                  (this.paths = this.localShapeCollection),
                  this.localShapeCollection.addShape(this.v),
                  (this.d = e.d),
                  (this.elem = t),
                  (this.comp = t.comp),
                  (this.frameId = -1),
                  this.initDynamicPropertyContainer(t),
                  (this.p = gt.getProp(t, e.p, 1, 0, this)),
                  (this.s = gt.getProp(t, e.s, 1, 0, this)),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertEllToPath());
              }
              return (
                (e.prototype = {
                  reset: r,
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertEllToPath());
                  },
                  convertEllToPath: function () {
                    var e = this.p.v[0],
                      i = this.p.v[1],
                      r = this.s.v[0] / 2,
                      a = this.s.v[1] / 2,
                      s = 3 !== this.d,
                      n = this.v;
                    (n.v[0][0] = e),
                      (n.v[0][1] = i - a),
                      (n.v[1][0] = s ? e + r : e - r),
                      (n.v[1][1] = i),
                      (n.v[2][0] = e),
                      (n.v[2][1] = i + a),
                      (n.v[3][0] = s ? e - r : e + r),
                      (n.v[3][1] = i),
                      (n.i[0][0] = s ? e - r * t : e + r * t),
                      (n.i[0][1] = i - a),
                      (n.i[1][0] = s ? e + r : e - r),
                      (n.i[1][1] = i - a * t),
                      (n.i[2][0] = s ? e + r * t : e - r * t),
                      (n.i[2][1] = i + a),
                      (n.i[3][0] = s ? e - r : e + r),
                      (n.i[3][1] = i + a * t),
                      (n.o[0][0] = s ? e + r * t : e - r * t),
                      (n.o[0][1] = i - a),
                      (n.o[1][0] = s ? e + r : e - r),
                      (n.o[1][1] = i + a * t),
                      (n.o[2][0] = s ? e - r * t : e + r * t),
                      (n.o[2][1] = i + a),
                      (n.o[3][0] = s ? e - r : e + r),
                      (n.o[3][1] = i - a * t);
                  },
                }),
                s([ft], e),
                e
              );
            })(),
            d = (function () {
              function t(t, e) {
                (this.v = Et.newElement()),
                  this.v.setPathData(!0, 0),
                  (this.elem = t),
                  (this.comp = t.comp),
                  (this.data = e),
                  (this.frameId = -1),
                  (this.d = e.d),
                  this.initDynamicPropertyContainer(t),
                  1 === e.sy
                    ? ((this.ir = gt.getProp(t, e.ir, 0, 0, this)),
                      (this.is = gt.getProp(t, e.is, 0, 0.01, this)),
                      (this.convertToPath = this.convertStarToPath))
                    : (this.convertToPath = this.convertPolygonToPath),
                  (this.pt = gt.getProp(t, e.pt, 0, 0, this)),
                  (this.p = gt.getProp(t, e.p, 1, 0, this)),
                  (this.r = gt.getProp(t, e.r, 0, y, this)),
                  (this.or = gt.getProp(t, e.or, 0, 0, this)),
                  (this.os = gt.getProp(t, e.os, 0, 0.01, this)),
                  (this.localShapeCollection = xt.newShapeCollection()),
                  this.localShapeCollection.addShape(this.v),
                  (this.paths = this.localShapeCollection),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertToPath());
              }
              return (
                (t.prototype = {
                  reset: r,
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertToPath());
                  },
                  convertStarToPath: function () {
                    var t,
                      e,
                      i,
                      r,
                      a = 2 * Math.floor(this.pt.v),
                      s = (2 * Math.PI) / a,
                      n = !0,
                      o = this.or.v,
                      h = this.ir.v,
                      l = this.os.v,
                      A = this.is.v,
                      d = (2 * Math.PI * o) / (2 * a),
                      u = (2 * Math.PI * h) / (2 * a),
                      c = -Math.PI / 2;
                    c += this.r.v;
                    var g = 3 === this.data.d ? -1 : 1;
                    for (this.v._length = 0, t = 0; t < a; t += 1) {
                      (i = n ? l : A), (r = n ? d : u);
                      var f = (e = n ? o : h) * Math.cos(c),
                        p = e * Math.sin(c),
                        m =
                          0 === f && 0 === p ? 0 : p / Math.sqrt(f * f + p * p),
                        v =
                          0 === f && 0 === p
                            ? 0
                            : -f / Math.sqrt(f * f + p * p);
                      (f += +this.p.v[0]),
                        (p += +this.p.v[1]),
                        this.v.setTripleAt(
                          f,
                          p,
                          f - m * r * i * g,
                          p - v * r * i * g,
                          f + m * r * i * g,
                          p + v * r * i * g,
                          t,
                          !0
                        ),
                        (n = !n),
                        (c += s * g);
                    }
                  },
                  convertPolygonToPath: function () {
                    var t,
                      e = Math.floor(this.pt.v),
                      i = (2 * Math.PI) / e,
                      r = this.or.v,
                      a = this.os.v,
                      s = (2 * Math.PI * r) / (4 * e),
                      n = 0.5 * -Math.PI,
                      o = 3 === this.data.d ? -1 : 1;
                    for (
                      n += this.r.v, this.v._length = 0, t = 0;
                      t < e;
                      t += 1
                    ) {
                      var h = r * Math.cos(n),
                        l = r * Math.sin(n),
                        A =
                          0 === h && 0 === l ? 0 : l / Math.sqrt(h * h + l * l),
                        d =
                          0 === h && 0 === l
                            ? 0
                            : -h / Math.sqrt(h * h + l * l);
                      (h += +this.p.v[0]),
                        (l += +this.p.v[1]),
                        this.v.setTripleAt(
                          h,
                          l,
                          h - A * s * a * o,
                          l - d * s * a * o,
                          h + A * s * a * o,
                          l + d * s * a * o,
                          t,
                          !0
                        ),
                        (n += i * o);
                    }
                    (this.paths.length = 0), (this.paths[0] = this.v);
                  },
                }),
                s([ft], t),
                t
              );
            })(),
            u = (function () {
              function t(t, e) {
                (this.v = Et.newElement()),
                  (this.v.c = !0),
                  (this.localShapeCollection = xt.newShapeCollection()),
                  this.localShapeCollection.addShape(this.v),
                  (this.paths = this.localShapeCollection),
                  (this.elem = t),
                  (this.comp = t.comp),
                  (this.frameId = -1),
                  (this.d = e.d),
                  this.initDynamicPropertyContainer(t),
                  (this.p = gt.getProp(t, e.p, 1, 0, this)),
                  (this.s = gt.getProp(t, e.s, 1, 0, this)),
                  (this.r = gt.getProp(t, e.r, 0, 0, this)),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertRectToPath());
              }
              return (
                (t.prototype = {
                  convertRectToPath: function () {
                    var t = this.p.v[0],
                      e = this.p.v[1],
                      i = this.s.v[0] / 2,
                      r = this.s.v[1] / 2,
                      a = v(i, r, this.r.v),
                      s = a * (1 - I);
                    (this.v._length = 0),
                      2 === this.d || 1 === this.d
                        ? (this.v.setTripleAt(
                            t + i,
                            e - r + a,
                            t + i,
                            e - r + a,
                            t + i,
                            e - r + s,
                            0,
                            !0
                          ),
                          this.v.setTripleAt(
                            t + i,
                            e + r - a,
                            t + i,
                            e + r - s,
                            t + i,
                            e + r - a,
                            1,
                            !0
                          ),
                          0 !== a
                            ? (this.v.setTripleAt(
                                t + i - a,
                                e + r,
                                t + i - a,
                                e + r,
                                t + i - s,
                                e + r,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i + a,
                                e + r,
                                t - i + s,
                                e + r,
                                t - i + a,
                                e + r,
                                3,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i,
                                e + r - a,
                                t - i,
                                e + r - a,
                                t - i,
                                e + r - s,
                                4,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i,
                                e - r + a,
                                t - i,
                                e - r + s,
                                t - i,
                                e - r + a,
                                5,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i + a,
                                e - r,
                                t - i + a,
                                e - r,
                                t - i + s,
                                e - r,
                                6,
                                !0
                              ),
                              this.v.setTripleAt(
                                t + i - a,
                                e - r,
                                t + i - s,
                                e - r,
                                t + i - a,
                                e - r,
                                7,
                                !0
                              ))
                            : (this.v.setTripleAt(
                                t - i,
                                e + r,
                                t - i + s,
                                e + r,
                                t - i,
                                e + r,
                                2
                              ),
                              this.v.setTripleAt(
                                t - i,
                                e - r,
                                t - i,
                                e - r + s,
                                t - i,
                                e - r,
                                3
                              )))
                        : (this.v.setTripleAt(
                            t + i,
                            e - r + a,
                            t + i,
                            e - r + s,
                            t + i,
                            e - r + a,
                            0,
                            !0
                          ),
                          0 !== a
                            ? (this.v.setTripleAt(
                                t + i - a,
                                e - r,
                                t + i - a,
                                e - r,
                                t + i - s,
                                e - r,
                                1,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i + a,
                                e - r,
                                t - i + s,
                                e - r,
                                t - i + a,
                                e - r,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i,
                                e - r + a,
                                t - i,
                                e - r + a,
                                t - i,
                                e - r + s,
                                3,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i,
                                e + r - a,
                                t - i,
                                e + r - s,
                                t - i,
                                e + r - a,
                                4,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i + a,
                                e + r,
                                t - i + a,
                                e + r,
                                t - i + s,
                                e + r,
                                5,
                                !0
                              ),
                              this.v.setTripleAt(
                                t + i - a,
                                e + r,
                                t + i - s,
                                e + r,
                                t + i - a,
                                e + r,
                                6,
                                !0
                              ),
                              this.v.setTripleAt(
                                t + i,
                                e + r - a,
                                t + i,
                                e + r - a,
                                t + i,
                                e + r - s,
                                7,
                                !0
                              ))
                            : (this.v.setTripleAt(
                                t - i,
                                e - r,
                                t - i + s,
                                e - r,
                                t - i,
                                e - r,
                                1,
                                !0
                              ),
                              this.v.setTripleAt(
                                t - i,
                                e + r,
                                t - i,
                                e + r - s,
                                t - i,
                                e + r,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                t + i,
                                e + r,
                                t + i - s,
                                e + r,
                                t + i,
                                e + r,
                                3,
                                !0
                              )));
                  },
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertRectToPath());
                  },
                  reset: r,
                }),
                s([ft], t),
                t
              );
            })();
          return {
            getShapeProp: function (t, e, i) {
              var r;
              return (
                3 === i || 4 === i
                  ? (r = (3 === i ? e.pt : e.ks).k.length
                      ? new l(t, e, i)
                      : new o(t, e, i))
                  : 5 === i
                  ? (r = new u(t, e))
                  : 6 === i
                  ? (r = new A(t, e))
                  : 7 === i && (r = new d(t, e)),
                r.k && t.addDynamicProperty(r),
                r
              );
            },
            getConstructorFunction: function () {
              return o;
            },
            getKeyframedConstructorFunction: function () {
              return l;
            },
          };
        })(),
        Qt = (function () {
          var t = Math.cos,
            e = Math.sin,
            i = Math.tan,
            r = Math.round;
          function a() {
            return (
              (this.props[0] = 1),
              (this.props[1] = 0),
              (this.props[2] = 0),
              (this.props[3] = 0),
              (this.props[4] = 0),
              (this.props[5] = 1),
              (this.props[6] = 0),
              (this.props[7] = 0),
              (this.props[8] = 0),
              (this.props[9] = 0),
              (this.props[10] = 1),
              (this.props[11] = 0),
              (this.props[12] = 0),
              (this.props[13] = 0),
              (this.props[14] = 0),
              (this.props[15] = 1),
              this
            );
          }
          function s(i) {
            if (0 === i) return this;
            var r = t(i),
              a = e(i);
            return this._t(r, -a, 0, 0, a, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          }
          function n(i) {
            if (0 === i) return this;
            var r = t(i),
              a = e(i);
            return this._t(1, 0, 0, 0, 0, r, -a, 0, 0, a, r, 0, 0, 0, 0, 1);
          }
          function o(i) {
            if (0 === i) return this;
            var r = t(i),
              a = e(i);
            return this._t(r, 0, a, 0, 0, 1, 0, 0, -a, 0, r, 0, 0, 0, 0, 1);
          }
          function l(i) {
            if (0 === i) return this;
            var r = t(i),
              a = e(i);
            return this._t(r, -a, 0, 0, a, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          }
          function A(t, e) {
            return this._t(1, e, t, 1, 0, 0);
          }
          function d(t, e) {
            return this.shear(i(t), i(e));
          }
          function u(r, a) {
            var s = t(a),
              n = e(a);
            return this._t(s, n, 0, 0, -n, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
              ._t(1, 0, 0, 0, i(r), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
              ._t(s, -n, 0, 0, n, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          }
          function c(t, e, i) {
            return (
              i || 0 === i || (i = 1),
              1 === t && 1 === e && 1 === i
                ? this
                : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1)
            );
          }
          function g(t, e, i, r, a, s, n, o, h, l, A, d, u, c, g, f) {
            return (
              (this.props[0] = t),
              (this.props[1] = e),
              (this.props[2] = i),
              (this.props[3] = r),
              (this.props[4] = a),
              (this.props[5] = s),
              (this.props[6] = n),
              (this.props[7] = o),
              (this.props[8] = h),
              (this.props[9] = l),
              (this.props[10] = A),
              (this.props[11] = d),
              (this.props[12] = u),
              (this.props[13] = c),
              (this.props[14] = g),
              (this.props[15] = f),
              this
            );
          }
          function f(t, e, i) {
            return (
              (i = i || 0),
              0 !== t || 0 !== e || 0 !== i
                ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, i, 1)
                : this
            );
          }
          function p(t, e, i, r, a, s, n, o, h, l, A, d, u, c, g, f) {
            var p = this.props;
            if (
              1 === t &&
              0 === e &&
              0 === i &&
              0 === r &&
              0 === a &&
              1 === s &&
              0 === n &&
              0 === o &&
              0 === h &&
              0 === l &&
              1 === A &&
              0 === d
            )
              return (
                (p[12] = p[12] * t + p[15] * u),
                (p[13] = p[13] * s + p[15] * c),
                (p[14] = p[14] * A + p[15] * g),
                (p[15] *= f),
                (this._identityCalculated = !1),
                this
              );
            var m = p[0],
              v = p[1],
              E = p[2],
              y = p[3],
              I = p[4],
              C = p[5],
              B = p[6],
              k = p[7],
              x = p[8],
              w = p[9],
              Q = p[10],
              S = p[11],
              b = p[12],
              D = p[13],
              R = p[14],
              L = p[15];
            return (
              (p[0] = m * t + v * a + E * h + y * u),
              (p[1] = m * e + v * s + E * l + y * c),
              (p[2] = m * i + v * n + E * A + y * g),
              (p[3] = m * r + v * o + E * d + y * f),
              (p[4] = I * t + C * a + B * h + k * u),
              (p[5] = I * e + C * s + B * l + k * c),
              (p[6] = I * i + C * n + B * A + k * g),
              (p[7] = I * r + C * o + B * d + k * f),
              (p[8] = x * t + w * a + Q * h + S * u),
              (p[9] = x * e + w * s + Q * l + S * c),
              (p[10] = x * i + w * n + Q * A + S * g),
              (p[11] = x * r + w * o + Q * d + S * f),
              (p[12] = b * t + D * a + R * h + L * u),
              (p[13] = b * e + D * s + R * l + L * c),
              (p[14] = b * i + D * n + R * A + L * g),
              (p[15] = b * r + D * o + R * d + L * f),
              (this._identityCalculated = !1),
              this
            );
          }
          function m(t) {
            var e = t.props;
            return this.transform(
              e[0],
              e[1],
              e[2],
              e[3],
              e[4],
              e[5],
              e[6],
              e[7],
              e[8],
              e[9],
              e[10],
              e[11],
              e[12],
              e[13],
              e[14],
              e[15]
            );
          }
          function v() {
            return (
              this._identityCalculated ||
                ((this._identity = !(
                  1 !== this.props[0] ||
                  0 !== this.props[1] ||
                  0 !== this.props[2] ||
                  0 !== this.props[3] ||
                  0 !== this.props[4] ||
                  1 !== this.props[5] ||
                  0 !== this.props[6] ||
                  0 !== this.props[7] ||
                  0 !== this.props[8] ||
                  0 !== this.props[9] ||
                  1 !== this.props[10] ||
                  0 !== this.props[11] ||
                  0 !== this.props[12] ||
                  0 !== this.props[13] ||
                  0 !== this.props[14] ||
                  1 !== this.props[15]
                )),
                (this._identityCalculated = !0)),
              this._identity
            );
          }
          function E(t) {
            for (var e = 0; e < 16; ) {
              if (t.props[e] !== this.props[e]) return !1;
              e += 1;
            }
            return !0;
          }
          function y(t) {
            var e;
            for (e = 0; e < 16; e += 1) t.props[e] = this.props[e];
            return t;
          }
          function I(t) {
            var e;
            for (e = 0; e < 16; e += 1) this.props[e] = t[e];
          }
          function C(t, e, i) {
            return {
              x:
                t * this.props[0] +
                e * this.props[4] +
                i * this.props[8] +
                this.props[12],
              y:
                t * this.props[1] +
                e * this.props[5] +
                i * this.props[9] +
                this.props[13],
              z:
                t * this.props[2] +
                e * this.props[6] +
                i * this.props[10] +
                this.props[14],
            };
          }
          function B(t, e, i) {
            return (
              t * this.props[0] +
              e * this.props[4] +
              i * this.props[8] +
              this.props[12]
            );
          }
          function k(t, e, i) {
            return (
              t * this.props[1] +
              e * this.props[5] +
              i * this.props[9] +
              this.props[13]
            );
          }
          function x(t, e, i) {
            return (
              t * this.props[2] +
              e * this.props[6] +
              i * this.props[10] +
              this.props[14]
            );
          }
          function w() {
            var t =
                this.props[0] * this.props[5] - this.props[1] * this.props[4],
              e = this.props[5] / t,
              i = -this.props[1] / t,
              r = -this.props[4] / t,
              a = this.props[0] / t,
              s =
                (this.props[4] * this.props[13] -
                  this.props[5] * this.props[12]) /
                t,
              n =
                -(
                  this.props[0] * this.props[13] -
                  this.props[1] * this.props[12]
                ) / t,
              o = new Qt();
            return (
              (o.props[0] = e),
              (o.props[1] = i),
              (o.props[4] = r),
              (o.props[5] = a),
              (o.props[12] = s),
              (o.props[13] = n),
              o
            );
          }
          function Q(t) {
            return this.getInverseMatrix().applyToPointArray(
              t[0],
              t[1],
              t[2] || 0
            );
          }
          function S(t) {
            var e,
              i = t.length,
              r = [];
            for (e = 0; e < i; e += 1) r[e] = Q(t[e]);
            return r;
          }
          function b(t, e, i) {
            var r = h("float32", 6);
            if (this.isIdentity())
              (r[0] = t[0]),
                (r[1] = t[1]),
                (r[2] = e[0]),
                (r[3] = e[1]),
                (r[4] = i[0]),
                (r[5] = i[1]);
            else {
              var a = this.props[0],
                s = this.props[1],
                n = this.props[4],
                o = this.props[5],
                l = this.props[12],
                A = this.props[13];
              (r[0] = t[0] * a + t[1] * n + l),
                (r[1] = t[0] * s + t[1] * o + A),
                (r[2] = e[0] * a + e[1] * n + l),
                (r[3] = e[0] * s + e[1] * o + A),
                (r[4] = i[0] * a + i[1] * n + l),
                (r[5] = i[0] * s + i[1] * o + A);
            }
            return r;
          }
          function D(t, e, i) {
            return this.isIdentity()
              ? [t, e, i]
              : [
                  t * this.props[0] +
                    e * this.props[4] +
                    i * this.props[8] +
                    this.props[12],
                  t * this.props[1] +
                    e * this.props[5] +
                    i * this.props[9] +
                    this.props[13],
                  t * this.props[2] +
                    e * this.props[6] +
                    i * this.props[10] +
                    this.props[14],
                ];
          }
          function R(t, e) {
            if (this.isIdentity()) return t + "," + e;
            var i = this.props;
            return (
              Math.round(100 * (t * i[0] + e * i[4] + i[12])) / 100 +
              "," +
              Math.round(100 * (t * i[1] + e * i[5] + i[13])) / 100
            );
          }
          function L() {
            for (var t = 0, e = this.props, i = "matrix3d("; t < 16; )
              (i += r(1e4 * e[t]) / 1e4), (i += 15 === t ? ")" : ","), (t += 1);
            return i;
          }
          function T(t) {
            return (t < 1e-6 && t > 0) || (t > -1e-6 && t < 0)
              ? r(1e4 * t) / 1e4
              : t;
          }
          function M() {
            var t = this.props;
            return (
              "matrix(" +
              T(t[0]) +
              "," +
              T(t[1]) +
              "," +
              T(t[4]) +
              "," +
              T(t[5]) +
              "," +
              T(t[12]) +
              "," +
              T(t[13]) +
              ")"
            );
          }
          return function () {
            (this.reset = a),
              (this.rotate = s),
              (this.rotateX = n),
              (this.rotateY = o),
              (this.rotateZ = l),
              (this.skew = d),
              (this.skewFromAxis = u),
              (this.shear = A),
              (this.scale = c),
              (this.setTransform = g),
              (this.translate = f),
              (this.transform = p),
              (this.multiply = m),
              (this.applyToPoint = C),
              (this.applyToX = B),
              (this.applyToY = k),
              (this.applyToZ = x),
              (this.applyToPointArray = D),
              (this.applyToTriplePoints = b),
              (this.applyToPointStringified = R),
              (this.toCSS = L),
              (this.to2dCSS = M),
              (this.clone = y),
              (this.cloneFromProps = I),
              (this.equals = E),
              (this.inversePoints = S),
              (this.inversePoint = Q),
              (this.getInverseMatrix = w),
              (this._t = this.transform),
              (this.isIdentity = v),
              (this._identity = !0),
              (this._identityCalculated = !1),
              (this.props = h("float32", 16)),
              this.reset();
          };
        })();
      function St(t) {
        return (St =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (t) {
                return typeof t;
              }
            : function (t) {
                return t &&
                  "function" == typeof Symbol &&
                  t.constructor === Symbol &&
                  t !== Symbol.prototype
                  ? "symbol"
                  : typeof t;
              })(t);
      }
      var bt = {};
      function Dt() {
        W.searchAnimations();
      }
      (bt.play = W.play),
        (bt.pause = W.pause),
        (bt.setLocationHref = function (e) {
          t = e;
        }),
        (bt.togglePause = W.togglePause),
        (bt.setSpeed = W.setSpeed),
        (bt.setDirection = W.setDirection),
        (bt.stop = W.stop),
        (bt.searchAnimations = Dt),
        (bt.registerAnimation = W.registerAnimation),
        (bt.loadAnimation = function (t) {
          return W.loadAnimation(t);
        }),
        (bt.setSubframeRendering = function (t) {
          A = !!t;
        }),
        (bt.resize = W.resize),
        (bt.goToAndStop = W.goToAndStop),
        (bt.destroy = W.destroy),
        (bt.setQuality = function (t) {
          if ("string" == typeof t)
            switch (t) {
              case "high":
                _(200);
                break;
              default:
              case "medium":
                _(50);
                break;
              case "low":
                _(10);
            }
          else !isNaN(t) && t > 1 && _(t);
        }),
        (bt.inBrowser = function () {
          return "undefined" != typeof navigator;
        }),
        (bt.installPlugin = function (t, e) {
          "expressions" === t && (u = e);
        }),
        (bt.freeze = W.freeze),
        (bt.unfreeze = W.unfreeze),
        (bt.setVolume = W.setVolume),
        (bt.mute = W.mute),
        (bt.unmute = W.unmute),
        (bt.getRegisteredAnimations = W.getRegisteredAnimations),
        (bt.useWebWorker = function (t) {
          e = !!t;
        }),
        (bt.setIDPrefix = function (t) {
          c = t;
        }),
        (bt.__getFactory = function (t) {
          switch (t) {
            case "propertyFactory":
              return gt;
            case "shapePropertyFactory":
              return wt;
            case "matrix":
              return Qt;
            default:
              return null;
          }
        }),
        (bt.version = "5.12.2");
      var Rt = "",
        Lt = document.getElementsByTagName("script"),
        Tt = Lt[Lt.length - 1] || { src: "" };
      (Rt = Tt.src ? Tt.src.replace(/^[^\?]+\??/, "") : ""),
        (function (t) {
          for (var e = Rt.split("&"), i = 0; i < e.length; i += 1) {
            var r = e[i].split("=");
            if (decodeURIComponent(r[0]) == t) return decodeURIComponent(r[1]);
          }
        })("renderer");
      var Mt = setInterval(function () {
        "complete" === document.readyState && (clearInterval(Mt), Dt());
      }, 100);
      try {
        "object" === St(d) || (window.bodymovin = bt);
      } catch (Ft) {}
      var Ft,
        Pt,
        _t =
          ((Pt = {}),
          ((Ft = {}).registerModifier = function (t, e) {
            Pt[t] || (Pt[t] = e);
          }),
          (Ft.getModifier = function (t, e, i) {
            return new Pt[t](e, i);
          }),
          Ft);
      function Nt() {}
      function Ut() {}
      function Gt() {}
      (Nt.prototype.initModifierProperties = function () {}),
        (Nt.prototype.addShapeToModifier = function () {}),
        (Nt.prototype.addShape = function (t) {
          if (!this.closed) {
            t.sh.container.addDynamicProperty(t.sh);
            var e = {
              shape: t.sh,
              data: t,
              localShapeCollection: xt.newShapeCollection(),
            };
            this.shapes.push(e),
              this.addShapeToModifier(e),
              this._isAnimated && t.setAsAnimated();
          }
        }),
        (Nt.prototype.init = function (t, e) {
          (this.shapes = []),
            (this.elem = t),
            this.initDynamicPropertyContainer(t),
            this.initModifierProperties(t, e),
            (this.frameId = i),
            (this.closed = !1),
            (this.k = !1),
            this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
        }),
        (Nt.prototype.processKeys = function () {
          this.elem.globalData.frameId !== this.frameId &&
            ((this.frameId = this.elem.globalData.frameId),
            this.iterateDynamicProperties());
        }),
        s([ft], Nt),
        s([Nt], Ut),
        (Ut.prototype.initModifierProperties = function (t, e) {
          (this.s = gt.getProp(t, e.s, 0, 0.01, this)),
            (this.e = gt.getProp(t, e.e, 0, 0.01, this)),
            (this.o = gt.getProp(t, e.o, 0, 0, this)),
            (this.sValue = 0),
            (this.eValue = 0),
            (this.getValue = this.processKeys),
            (this.m = e.m),
            (this._isAnimated =
              !!this.s.effectsSequence.length ||
              !!this.e.effectsSequence.length ||
              !!this.o.effectsSequence.length);
        }),
        (Ut.prototype.addShapeToModifier = function (t) {
          t.pathsData = [];
        }),
        (Ut.prototype.calculateShapeEdges = function (t, e, i, r, a) {
          var s = [];
          e <= 1
            ? s.push({ s: t, e: e })
            : t >= 1
            ? s.push({ s: t - 1, e: e - 1 })
            : (s.push({ s: t, e: 1 }), s.push({ s: 0, e: e - 1 }));
          var n,
            o,
            h = [],
            l = s.length;
          for (n = 0; n < l; n += 1) {
            var A, d;
            (o = s[n]).e * a < r ||
              o.s * a > r + i ||
              ((A = o.s * a <= r ? 0 : (o.s * a - r) / i),
              (d = o.e * a >= r + i ? 1 : (o.e * a - r) / i),
              h.push([A, d]));
          }
          return h.length || h.push([0, 0]), h;
        }),
        (Ut.prototype.releasePathsData = function (t) {
          var e,
            i = t.length;
          for (e = 0; e < i; e += 1) tt.release(t[e]);
          return (t.length = 0), t;
        }),
        (Ut.prototype.processShapes = function (t) {
          var e, i, r, a;
          if (this._mdf || t) {
            var s = (this.o.v % 360) / 360;
            if (
              (s < 0 && (s += 1),
              (e = this.s.v > 1 ? 1 + s : this.s.v < 0 ? 0 + s : this.s.v + s) >
                (i =
                  this.e.v > 1 ? 1 + s : this.e.v < 0 ? 0 + s : this.e.v + s))
            ) {
              var n = e;
              (e = i), (i = n);
            }
            (e = 1e-4 * Math.round(1e4 * e)),
              (i = 1e-4 * Math.round(1e4 * i)),
              (this.sValue = e),
              (this.eValue = i);
          } else (e = this.sValue), (i = this.eValue);
          var o,
            h,
            l,
            A,
            d,
            u = this.shapes.length,
            c = 0;
          if (i === e)
            for (a = 0; a < u; a += 1)
              this.shapes[a].localShapeCollection.releaseShapes(),
                (this.shapes[a].shape._mdf = !0),
                (this.shapes[a].shape.paths =
                  this.shapes[a].localShapeCollection),
                this._mdf && (this.shapes[a].pathsData.length = 0);
          else if ((1 === i && 0 === e) || (0 === i && 1 === e)) {
            if (this._mdf)
              for (a = 0; a < u; a += 1)
                (this.shapes[a].pathsData.length = 0),
                  (this.shapes[a].shape._mdf = !0);
          } else {
            var g,
              f,
              p = [];
            for (a = 0; a < u; a += 1)
              if (
                (g = this.shapes[a]).shape._mdf ||
                this._mdf ||
                t ||
                2 === this.m
              ) {
                if (
                  ((h = (r = g.shape.paths)._length),
                  (d = 0),
                  !g.shape._mdf && g.pathsData.length)
                )
                  d = g.totalShapeLength;
                else {
                  for (
                    l = this.releasePathsData(g.pathsData), o = 0;
                    o < h;
                    o += 1
                  )
                    (A = et.getSegmentsLength(r.shapes[o])),
                      l.push(A),
                      (d += A.totalLength);
                  (g.totalShapeLength = d), (g.pathsData = l);
                }
                (c += d), (g.shape._mdf = !0);
              } else g.shape.paths = g.localShapeCollection;
            var m,
              v = e,
              E = i,
              y = 0;
            for (a = u - 1; a >= 0; a -= 1)
              if ((g = this.shapes[a]).shape._mdf) {
                for (
                  (f = g.localShapeCollection).releaseShapes(),
                    2 === this.m && u > 1
                      ? ((m = this.calculateShapeEdges(
                          e,
                          i,
                          g.totalShapeLength,
                          y,
                          c
                        )),
                        (y += g.totalShapeLength))
                      : (m = [[v, E]]),
                    h = m.length,
                    o = 0;
                  o < h;
                  o += 1
                ) {
                  (v = m[o][0]),
                    (E = m[o][1]),
                    (p.length = 0),
                    E <= 1
                      ? p.push({
                          s: g.totalShapeLength * v,
                          e: g.totalShapeLength * E,
                        })
                      : v >= 1
                      ? p.push({
                          s: g.totalShapeLength * (v - 1),
                          e: g.totalShapeLength * (E - 1),
                        })
                      : (p.push({
                          s: g.totalShapeLength * v,
                          e: g.totalShapeLength,
                        }),
                        p.push({ s: 0, e: g.totalShapeLength * (E - 1) }));
                  var I = this.addShapes(g, p[0]);
                  if (p[0].s !== p[0].e) {
                    if (p.length > 1)
                      if (g.shape.paths.shapes[g.shape.paths._length - 1].c) {
                        var C = I.pop();
                        this.addPaths(I, f), (I = this.addShapes(g, p[1], C));
                      } else this.addPaths(I, f), (I = this.addShapes(g, p[1]));
                    this.addPaths(I, f);
                  }
                }
                g.shape.paths = f;
              }
          }
        }),
        (Ut.prototype.addPaths = function (t, e) {
          var i,
            r = t.length;
          for (i = 0; i < r; i += 1) e.addShape(t[i]);
        }),
        (Ut.prototype.addSegment = function (t, e, i, r, a, s, n) {
          a.setXYAt(e[0], e[1], "o", s),
            a.setXYAt(i[0], i[1], "i", s + 1),
            n && a.setXYAt(t[0], t[1], "v", s),
            a.setXYAt(r[0], r[1], "v", s + 1);
        }),
        (Ut.prototype.addSegmentFromArray = function (t, e, i, r) {
          e.setXYAt(t[1], t[5], "o", i),
            e.setXYAt(t[2], t[6], "i", i + 1),
            r && e.setXYAt(t[0], t[4], "v", i),
            e.setXYAt(t[3], t[7], "v", i + 1);
        }),
        (Ut.prototype.addShapes = function (t, e, i) {
          var r,
            a,
            s,
            n,
            o,
            h,
            l,
            A,
            d = t.pathsData,
            u = t.shape.paths.shapes,
            c = t.shape.paths._length,
            g = 0,
            f = [],
            p = !0;
          for (
            i
              ? ((o = i._length), (A = i._length))
              : ((i = Et.newElement()), (o = 0), (A = 0)),
              f.push(i),
              r = 0;
            r < c;
            r += 1
          ) {
            for (
              h = d[r].lengths,
                i.c = u[r].c,
                s = u[r].c ? h.length : h.length + 1,
                a = 1;
              a < s;
              a += 1
            )
              if (g + (n = h[a - 1]).addedLength < e.s)
                (g += n.addedLength), (i.c = !1);
              else {
                if (g > e.e) {
                  i.c = !1;
                  break;
                }
                e.s <= g && e.e >= g + n.addedLength
                  ? (this.addSegment(
                      u[r].v[a - 1],
                      u[r].o[a - 1],
                      u[r].i[a],
                      u[r].v[a],
                      i,
                      o,
                      p
                    ),
                    (p = !1))
                  : ((l = et.getNewSegment(
                      u[r].v[a - 1],
                      u[r].v[a],
                      u[r].o[a - 1],
                      u[r].i[a],
                      (e.s - g) / n.addedLength,
                      (e.e - g) / n.addedLength,
                      h[a - 1]
                    )),
                    this.addSegmentFromArray(l, i, o, p),
                    (p = !1),
                    (i.c = !1)),
                  (g += n.addedLength),
                  (o += 1);
              }
            if (u[r].c && h.length) {
              if (((n = h[a - 1]), g <= e.e)) {
                var m = h[a - 1].addedLength;
                e.s <= g && e.e >= g + m
                  ? (this.addSegment(
                      u[r].v[a - 1],
                      u[r].o[a - 1],
                      u[r].i[0],
                      u[r].v[0],
                      i,
                      o,
                      p
                    ),
                    (p = !1))
                  : ((l = et.getNewSegment(
                      u[r].v[a - 1],
                      u[r].v[0],
                      u[r].o[a - 1],
                      u[r].i[0],
                      (e.s - g) / m,
                      (e.e - g) / m,
                      h[a - 1]
                    )),
                    this.addSegmentFromArray(l, i, o, p),
                    (p = !1),
                    (i.c = !1));
              } else i.c = !1;
              (g += n.addedLength), (o += 1);
            }
            if (
              (i._length &&
                (i.setXYAt(i.v[A][0], i.v[A][1], "i", A),
                i.setXYAt(
                  i.v[i._length - 1][0],
                  i.v[i._length - 1][1],
                  "o",
                  i._length - 1
                )),
              g > e.e)
            )
              break;
            r < c - 1 && ((i = Et.newElement()), (p = !0), f.push(i), (o = 0));
          }
          return f;
        }),
        s([Nt], Gt),
        (Gt.prototype.initModifierProperties = function (t, e) {
          (this.getValue = this.processKeys),
            (this.amount = gt.getProp(t, e.a, 0, null, this)),
            (this._isAnimated = !!this.amount.effectsSequence.length);
        }),
        (Gt.prototype.processPath = function (t, e) {
          var i = e / 100,
            r = [0, 0],
            a = t._length,
            s = 0;
          for (s = 0; s < a; s += 1) (r[0] += t.v[s][0]), (r[1] += t.v[s][1]);
          (r[0] /= a), (r[1] /= a);
          var n,
            o,
            h,
            l,
            A,
            d,
            u = Et.newElement();
          for (u.c = t.c, s = 0; s < a; s += 1)
            (n = t.v[s][0] + (r[0] - t.v[s][0]) * i),
              (o = t.v[s][1] + (r[1] - t.v[s][1]) * i),
              (h = t.o[s][0] + (r[0] - t.o[s][0]) * -i),
              (l = t.o[s][1] + (r[1] - t.o[s][1]) * -i),
              (A = t.i[s][0] + (r[0] - t.i[s][0]) * -i),
              (d = t.i[s][1] + (r[1] - t.i[s][1]) * -i),
              u.setTripleAt(n, o, h, l, A, d, s);
          return u;
        }),
        (Gt.prototype.processShapes = function (t) {
          var e,
            i,
            r,
            a,
            s,
            n,
            o = this.shapes.length,
            h = this.amount.v;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (
                ((n = (s = this.shapes[i]).localShapeCollection),
                s.shape._mdf || this._mdf || t)
              )
                for (
                  n.releaseShapes(),
                    s.shape._mdf = !0,
                    e = s.shape.paths.shapes,
                    a = s.shape.paths._length,
                    r = 0;
                  r < a;
                  r += 1
                )
                  n.addShape(this.processPath(e[r], h));
              s.shape.paths = s.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      var Ot = (function () {
        var t = [0, 0];
        function e(t, e, i) {
          if (
            ((this.elem = t),
            (this.frameId = -1),
            (this.propType = "transform"),
            (this.data = e),
            (this.v = new Qt()),
            (this.pre = new Qt()),
            (this.appliedTransformations = 0),
            this.initDynamicPropertyContainer(i || t),
            e.p && e.p.s
              ? ((this.px = gt.getProp(t, e.p.x, 0, 0, this)),
                (this.py = gt.getProp(t, e.p.y, 0, 0, this)),
                e.p.z && (this.pz = gt.getProp(t, e.p.z, 0, 0, this)))
              : (this.p = gt.getProp(t, e.p || { k: [0, 0, 0] }, 1, 0, this)),
            e.rx)
          ) {
            if (
              ((this.rx = gt.getProp(t, e.rx, 0, y, this)),
              (this.ry = gt.getProp(t, e.ry, 0, y, this)),
              (this.rz = gt.getProp(t, e.rz, 0, y, this)),
              e.or.k[0].ti)
            ) {
              var r,
                a = e.or.k.length;
              for (r = 0; r < a; r += 1)
                (e.or.k[r].to = null), (e.or.k[r].ti = null);
            }
            (this.or = gt.getProp(t, e.or, 1, y, this)), (this.or.sh = !0);
          } else this.r = gt.getProp(t, e.r || { k: 0 }, 0, y, this);
          e.sk &&
            ((this.sk = gt.getProp(t, e.sk, 0, y, this)),
            (this.sa = gt.getProp(t, e.sa, 0, y, this))),
            (this.a = gt.getProp(t, e.a || { k: [0, 0, 0] }, 1, 0, this)),
            (this.s = gt.getProp(
              t,
              e.s || { k: [100, 100, 100] },
              1,
              0.01,
              this
            )),
            e.o
              ? (this.o = gt.getProp(t, e.o, 0, 0.01, t))
              : (this.o = { _mdf: !1, v: 1 }),
            (this._isDirty = !0),
            this.dynamicProperties.length || this.getValue(!0);
        }
        return (
          (e.prototype = {
            applyToMatrix: function (t) {
              var e = this._mdf;
              this.iterateDynamicProperties(),
                (this._mdf = this._mdf || e),
                this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                this.sk && t.skewFromAxis(-this.sk.v, this.sa.v),
                this.r
                  ? t.rotate(-this.r.v)
                  : t
                      .rotateZ(-this.rz.v)
                      .rotateY(this.ry.v)
                      .rotateX(this.rx.v)
                      .rotateZ(-this.or.v[2])
                      .rotateY(this.or.v[1])
                      .rotateX(this.or.v[0]),
                this.data.p.s
                  ? this.data.p.z
                    ? t.translate(this.px.v, this.py.v, -this.pz.v)
                    : t.translate(this.px.v, this.py.v, 0)
                  : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            },
            getValue: function (e) {
              if (this.elem.globalData.frameId !== this.frameId) {
                if (
                  (this._isDirty &&
                    (this.precalculateMatrix(), (this._isDirty = !1)),
                  this.iterateDynamicProperties(),
                  this._mdf || e)
                ) {
                  var i;
                  if (
                    (this.v.cloneFromProps(this.pre.props),
                    this.appliedTransformations < 1 &&
                      this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                    this.appliedTransformations < 2 &&
                      this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                    this.sk &&
                      this.appliedTransformations < 3 &&
                      this.v.skewFromAxis(-this.sk.v, this.sa.v),
                    this.r && this.appliedTransformations < 4
                      ? this.v.rotate(-this.r.v)
                      : !this.r &&
                        this.appliedTransformations < 4 &&
                        this.v
                          .rotateZ(-this.rz.v)
                          .rotateY(this.ry.v)
                          .rotateX(this.rx.v)
                          .rotateZ(-this.or.v[2])
                          .rotateY(this.or.v[1])
                          .rotateX(this.or.v[0]),
                    this.autoOriented)
                  ) {
                    var r, a;
                    if (
                      ((i = this.elem.globalData.frameRate),
                      this.p && this.p.keyframes && this.p.getValueAtTime)
                    )
                      this.p._caching.lastFrame + this.p.offsetTime <=
                      this.p.keyframes[0].t
                        ? ((r = this.p.getValueAtTime(
                            (this.p.keyframes[0].t + 0.01) / i,
                            0
                          )),
                          (a = this.p.getValueAtTime(
                            this.p.keyframes[0].t / i,
                            0
                          )))
                        : this.p._caching.lastFrame + this.p.offsetTime >=
                          this.p.keyframes[this.p.keyframes.length - 1].t
                        ? ((r = this.p.getValueAtTime(
                            this.p.keyframes[this.p.keyframes.length - 1].t / i,
                            0
                          )),
                          (a = this.p.getValueAtTime(
                            (this.p.keyframes[this.p.keyframes.length - 1].t -
                              0.05) /
                              i,
                            0
                          )))
                        : ((r = this.p.pv),
                          (a = this.p.getValueAtTime(
                            (this.p._caching.lastFrame +
                              this.p.offsetTime -
                              0.01) /
                              i,
                            this.p.offsetTime
                          )));
                    else if (
                      this.px &&
                      this.px.keyframes &&
                      this.py.keyframes &&
                      this.px.getValueAtTime &&
                      this.py.getValueAtTime
                    ) {
                      (r = []), (a = []);
                      var s = this.px,
                        n = this.py;
                      s._caching.lastFrame + s.offsetTime <= s.keyframes[0].t
                        ? ((r[0] = s.getValueAtTime(
                            (s.keyframes[0].t + 0.01) / i,
                            0
                          )),
                          (r[1] = n.getValueAtTime(
                            (n.keyframes[0].t + 0.01) / i,
                            0
                          )),
                          (a[0] = s.getValueAtTime(s.keyframes[0].t / i, 0)),
                          (a[1] = n.getValueAtTime(n.keyframes[0].t / i, 0)))
                        : s._caching.lastFrame + s.offsetTime >=
                          s.keyframes[s.keyframes.length - 1].t
                        ? ((r[0] = s.getValueAtTime(
                            s.keyframes[s.keyframes.length - 1].t / i,
                            0
                          )),
                          (r[1] = n.getValueAtTime(
                            n.keyframes[n.keyframes.length - 1].t / i,
                            0
                          )),
                          (a[0] = s.getValueAtTime(
                            (s.keyframes[s.keyframes.length - 1].t - 0.01) / i,
                            0
                          )),
                          (a[1] = n.getValueAtTime(
                            (n.keyframes[n.keyframes.length - 1].t - 0.01) / i,
                            0
                          )))
                        : ((r = [s.pv, n.pv]),
                          (a[0] = s.getValueAtTime(
                            (s._caching.lastFrame + s.offsetTime - 0.01) / i,
                            s.offsetTime
                          )),
                          (a[1] = n.getValueAtTime(
                            (n._caching.lastFrame + n.offsetTime - 0.01) / i,
                            n.offsetTime
                          )));
                    } else r = a = t;
                    this.v.rotate(-Math.atan2(r[1] - a[1], r[0] - a[0]));
                  }
                  this.data.p && this.data.p.s
                    ? this.data.p.z
                      ? this.v.translate(this.px.v, this.py.v, -this.pz.v)
                      : this.v.translate(this.px.v, this.py.v, 0)
                    : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                }
                this.frameId = this.elem.globalData.frameId;
              }
            },
            precalculateMatrix: function () {
              if (
                ((this.appliedTransformations = 0),
                this.pre.reset(),
                !this.a.effectsSequence.length &&
                  (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                  (this.appliedTransformations = 1),
                  !this.s.effectsSequence.length))
              ) {
                if (
                  (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                  (this.appliedTransformations = 2),
                  this.sk)
                ) {
                  if (
                    this.sk.effectsSequence.length ||
                    this.sa.effectsSequence.length
                  )
                    return;
                  this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                    (this.appliedTransformations = 3);
                }
                this.r
                  ? this.r.effectsSequence.length ||
                    (this.pre.rotate(-this.r.v),
                    (this.appliedTransformations = 4))
                  : this.rz.effectsSequence.length ||
                    this.ry.effectsSequence.length ||
                    this.rx.effectsSequence.length ||
                    this.or.effectsSequence.length ||
                    (this.pre
                      .rotateZ(-this.rz.v)
                      .rotateY(this.ry.v)
                      .rotateX(this.rx.v)
                      .rotateZ(-this.or.v[2])
                      .rotateY(this.or.v[1])
                      .rotateX(this.or.v[0]),
                    (this.appliedTransformations = 4));
              }
            },
            autoOrient: function () {},
          }),
          s([ft], e),
          (e.prototype.addDynamicProperty = function (t) {
            this._addDynamicProperty(t),
              this.elem.addDynamicProperty(t),
              (this._isDirty = !0);
          }),
          (e.prototype._addDynamicProperty = ft.prototype.addDynamicProperty),
          {
            getTransformProperty: function (t, i, r) {
              return new e(t, i, r);
            },
          }
        );
      })();
      function jt() {}
      function Yt() {}
      function Ht(t, e) {
        return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e));
      }
      function Vt(t) {
        return Math.abs(t) <= 1e-5;
      }
      function Kt(t, e, i) {
        return t * (1 - i) + e * i;
      }
      function zt(t, e, i) {
        return [Kt(t[0], e[0], i), Kt(t[1], e[1], i)];
      }
      function qt(t, e, i, r) {
        return [
          3 * e - t - 3 * i + r,
          3 * t - 6 * e + 3 * i,
          -3 * t + 3 * e,
          t,
        ];
      }
      function Wt(t) {
        return new Jt(t, t, t, t, !1);
      }
      function Jt(t, e, i, r, a) {
        a && se(t, e) && (e = zt(t, r, 1 / 3)),
          a && se(i, r) && (i = zt(t, r, 2 / 3));
        var s = qt(t[0], e[0], i[0], r[0]),
          n = qt(t[1], e[1], i[1], r[1]);
        (this.a = [s[0], n[0]]),
          (this.b = [s[1], n[1]]),
          (this.c = [s[2], n[2]]),
          (this.d = [s[3], n[3]]),
          (this.points = [t, e, i, r]);
      }
      function Zt(t, e) {
        var i = t.points[0][e],
          r = t.points[t.points.length - 1][e];
        if (i > r) {
          var a = r;
          (r = i), (i = a);
        }
        for (
          var s = (function (t, e, i) {
              if (0 === t) return [];
              var r = e * e - 4 * t * i;
              if (r < 0) return [];
              var a = -e / (2 * t);
              if (0 === r) return [a];
              var s = Math.sqrt(r) / (2 * t);
              return [a - s, a + s];
            })(3 * t.a[e], 2 * t.b[e], t.c[e]),
            n = 0;
          n < s.length;
          n += 1
        )
          if (s[n] > 0 && s[n] < 1) {
            var o = t.point(s[n])[e];
            o < i ? (i = o) : o > r && (r = o);
          }
        return { min: i, max: r };
      }
      function Xt(t, e, i) {
        var r = t.boundingBox();
        return {
          cx: r.cx,
          cy: r.cy,
          width: r.width,
          height: r.height,
          bez: t,
          t: (e + i) / 2,
          t1: e,
          t2: i,
        };
      }
      function $t(t) {
        var e = t.bez.split(0.5);
        return [Xt(e[0], t.t1, t.t), Xt(e[1], t.t, t.t2)];
      }
      function te(t, e, i, r, a, s) {
        var n, o;
        if (
          ((n = t),
          (o = e),
          2 * Math.abs(n.cx - o.cx) < n.width + o.width &&
            2 * Math.abs(n.cy - o.cy) < n.height + o.height)
        )
          if (
            i >= s ||
            (t.width <= r && t.height <= r && e.width <= r && e.height <= r)
          )
            a.push([t.t, e.t]);
          else {
            var h = $t(t),
              l = $t(e);
            te(h[0], l[0], i + 1, r, a, s),
              te(h[0], l[1], i + 1, r, a, s),
              te(h[1], l[0], i + 1, r, a, s),
              te(h[1], l[1], i + 1, r, a, s);
          }
      }
      function ee(t, e) {
        return [
          t[1] * e[2] - t[2] * e[1],
          t[2] * e[0] - t[0] * e[2],
          t[0] * e[1] - t[1] * e[0],
        ];
      }
      function ie(t, e, i, r) {
        var a = [t[0], t[1], 1],
          s = [e[0], e[1], 1],
          n = [i[0], i[1], 1],
          o = [r[0], r[1], 1],
          h = ee(ee(a, s), ee(n, o));
        return Vt(h[2]) ? null : [h[0] / h[2], h[1] / h[2]];
      }
      function re(t, e, i) {
        return [t[0] + Math.cos(e) * i, t[1] - Math.sin(e) * i];
      }
      function ae(t, e) {
        return Math.hypot(t[0] - e[0], t[1] - e[1]);
      }
      function se(t, e) {
        return Ht(t[0], e[0]) && Ht(t[1], e[1]);
      }
      function ne() {}
      function oe(t, e, i, r, a, s, n) {
        var o = i - Math.PI / 2,
          h = i + Math.PI / 2,
          l = e[0] + Math.cos(i) * r * a,
          A = e[1] - Math.sin(i) * r * a;
        t.setTripleAt(
          l,
          A,
          l + Math.cos(o) * s,
          A - Math.sin(o) * s,
          l + Math.cos(h) * n,
          A - Math.sin(h) * n,
          t.length()
        );
      }
      function he(t, e) {
        var i,
          r,
          a,
          s,
          n = 0 === e ? t.length() - 1 : e - 1,
          o = (e + 1) % t.length(),
          h =
            ((i = t.v[n]),
            (a = [(r = t.v[o])[0] - i[0], r[1] - i[1]]),
            (s = 0.5 * -Math.PI),
            [
              Math.cos(s) * a[0] - Math.sin(s) * a[1],
              Math.sin(s) * a[0] + Math.cos(s) * a[1],
            ]);
        return Math.atan2(0, 1) - Math.atan2(h[1], h[0]);
      }
      function le(t, e, i, r, a, s, n) {
        var o = he(e, i),
          h = e.v[i % e._length],
          l = e.v[0 === i ? e._length - 1 : i - 1],
          A = e.v[(i + 1) % e._length],
          d =
            2 === s
              ? Math.sqrt(Math.pow(h[0] - l[0], 2) + Math.pow(h[1] - l[1], 2))
              : 0,
          u =
            2 === s
              ? Math.sqrt(Math.pow(h[0] - A[0], 2) + Math.pow(h[1] - A[1], 2))
              : 0;
        oe(
          t,
          e.v[i % e._length],
          o,
          n,
          r,
          u / (2 * (a + 1)),
          d / (2 * (a + 1))
        );
      }
      function Ae(t, e, i, r, a, s) {
        for (var n = 0; n < r; n += 1) {
          var o = (n + 1) / (r + 1),
            h =
              2 === a
                ? Math.sqrt(
                    Math.pow(e.points[3][0] - e.points[0][0], 2) +
                      Math.pow(e.points[3][1] - e.points[0][1], 2)
                  )
                : 0,
            l = e.normalAngle(o);
          oe(t, e.point(o), l, s, i, h / (2 * (r + 1)), h / (2 * (r + 1))),
            (s = -s);
        }
        return s;
      }
      function de(t, e, i) {
        var r = Math.atan2(e[0] - t[0], e[1] - t[1]);
        return [re(t, r, i), re(e, r, i)];
      }
      function ue(t, e) {
        var i, r, a, s, n, o, h;
        (i = (h = de(t.points[0], t.points[1], e))[0]),
          (r = h[1]),
          (a = (h = de(t.points[1], t.points[2], e))[0]),
          (s = h[1]),
          (n = (h = de(t.points[2], t.points[3], e))[0]),
          (o = h[1]);
        var l = ie(i, r, a, s);
        null === l && (l = r);
        var A = ie(n, o, a, s);
        return null === A && (A = n), new Jt(i, l, A, o);
      }
      function ce(t, e, i, r, a) {
        var s = e.points[3],
          n = i.points[0];
        if (3 === r) return s;
        if (se(s, n)) return s;
        if (2 === r) {
          var o = -e.tangentAngle(1),
            h = -i.tangentAngle(0) + Math.PI,
            l = ie(
              s,
              re(s, o + Math.PI / 2, 100),
              n,
              re(n, o + Math.PI / 2, 100)
            ),
            A = l ? ae(l, s) : ae(s, n) / 2,
            d = re(s, o, 2 * A * I);
          return (
            t.setXYAt(d[0], d[1], "o", t.length() - 1),
            (d = re(n, h, 2 * A * I)),
            t.setTripleAt(n[0], n[1], n[0], n[1], d[0], d[1], t.length()),
            n
          );
        }
        var u = ie(
          se(s, e.points[2]) ? e.points[0] : e.points[2],
          s,
          n,
          se(n, i.points[1]) ? i.points[3] : i.points[1]
        );
        return u && ae(u, s) < a
          ? (t.setTripleAt(u[0], u[1], u[0], u[1], u[0], u[1], t.length()), u)
          : s;
      }
      function ge(t, e) {
        var i = t.intersections(e);
        return i.length && Ht(i[0][0], 1) && i.shift(), i.length ? i[0] : null;
      }
      function fe(t, e) {
        var i = t.slice(),
          r = e.slice(),
          a = ge(t[t.length - 1], e[0]);
        return (
          a &&
            ((i[t.length - 1] = t[t.length - 1].split(a[0])[0]),
            (r[0] = e[0].split(a[1])[1])),
          t.length > 1 && e.length > 1 && (a = ge(t[0], e[e.length - 1]))
            ? [[t[0].split(a[0])[0]], [e[e.length - 1].split(a[1])[1]]]
            : [i, r]
        );
      }
      function pe(t, e) {
        var i,
          r,
          a,
          s,
          n = t.inflectionPoints();
        if (0 === n.length) return [ue(t, e)];
        if (1 === n.length || Ht(n[1], 1))
          return (i = (a = t.split(n[0]))[0]), (r = a[1]), [ue(i, e), ue(r, e)];
        i = (a = t.split(n[0]))[0];
        var o = (n[1] - n[0]) / (1 - n[0]);
        return (
          (s = (a = a[1].split(o))[0]),
          (r = a[1]),
          [ue(i, e), ue(s, e), ue(r, e)]
        );
      }
      function me() {}
      function ve(t) {
        for (
          var e = t.fStyle ? t.fStyle.split(" ") : [],
            i = "normal",
            r = "normal",
            a = e.length,
            s = 0;
          s < a;
          s += 1
        )
          switch (e[s].toLowerCase()) {
            case "italic":
              r = "italic";
              break;
            case "bold":
              i = "700";
              break;
            case "black":
              i = "900";
              break;
            case "medium":
              i = "500";
              break;
            case "regular":
            case "normal":
              i = "400";
              break;
            case "light":
            case "thin":
              i = "200";
          }
        return { style: r, weight: t.fWeight || i };
      }
      s([Nt], jt),
        (jt.prototype.initModifierProperties = function (t, e) {
          (this.getValue = this.processKeys),
            (this.c = gt.getProp(t, e.c, 0, null, this)),
            (this.o = gt.getProp(t, e.o, 0, null, this)),
            (this.tr = Ot.getTransformProperty(t, e.tr, this)),
            (this.so = gt.getProp(t, e.tr.so, 0, 0.01, this)),
            (this.eo = gt.getProp(t, e.tr.eo, 0, 0.01, this)),
            (this.data = e),
            this.dynamicProperties.length || this.getValue(!0),
            (this._isAnimated = !!this.dynamicProperties.length),
            (this.pMatrix = new Qt()),
            (this.rMatrix = new Qt()),
            (this.sMatrix = new Qt()),
            (this.tMatrix = new Qt()),
            (this.matrix = new Qt());
        }),
        (jt.prototype.applyTransforms = function (t, e, i, r, a, s) {
          var n = s ? -1 : 1,
            o = r.s.v[0] + (1 - r.s.v[0]) * (1 - a),
            h = r.s.v[1] + (1 - r.s.v[1]) * (1 - a);
          t.translate(r.p.v[0] * n * a, r.p.v[1] * n * a, r.p.v[2]),
            e.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]),
            e.rotate(-r.r.v * n * a),
            e.translate(r.a.v[0], r.a.v[1], r.a.v[2]),
            i.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]),
            i.scale(s ? 1 / o : o, s ? 1 / h : h),
            i.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
        }),
        (jt.prototype.init = function (t, e, i, r) {
          for (
            this.elem = t,
              this.arr = e,
              this.pos = i,
              this.elemsData = r,
              this._currentCopies = 0,
              this._elements = [],
              this._groups = [],
              this.frameId = -1,
              this.initDynamicPropertyContainer(t),
              this.initModifierProperties(t, e[i]);
            i > 0;

          )
            (i -= 1), this._elements.unshift(e[i]);
          this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
        }),
        (jt.prototype.resetElements = function (t) {
          var e,
            i = t.length;
          for (e = 0; e < i; e += 1)
            (t[e]._processed = !1),
              "gr" === t[e].ty && this.resetElements(t[e].it);
        }),
        (jt.prototype.cloneElements = function (t) {
          var e = JSON.parse(JSON.stringify(t));
          return this.resetElements(e), e;
        }),
        (jt.prototype.changeGroupRender = function (t, e) {
          var i,
            r = t.length;
          for (i = 0; i < r; i += 1)
            (t[i]._render = e),
              "gr" === t[i].ty && this.changeGroupRender(t[i].it, e);
        }),
        (jt.prototype.processShapes = function (t) {
          var e,
            i,
            r,
            a,
            s,
            n = !1;
          if (this._mdf || t) {
            var o,
              h = Math.ceil(this.c.v);
            if (this._groups.length < h) {
              for (; this._groups.length < h; ) {
                var l = { it: this.cloneElements(this._elements), ty: "gr" };
                l.it.push({
                  a: { a: 0, ix: 1, k: [0, 0] },
                  nm: "Transform",
                  o: { a: 0, ix: 7, k: 100 },
                  p: { a: 0, ix: 2, k: [0, 0] },
                  r: {
                    a: 1,
                    ix: 6,
                    k: [
                      { s: 0, e: 0, t: 0 },
                      { s: 0, e: 0, t: 1 },
                    ],
                  },
                  s: { a: 0, ix: 3, k: [100, 100] },
                  sa: { a: 0, ix: 5, k: 0 },
                  sk: { a: 0, ix: 4, k: 0 },
                  ty: "tr",
                }),
                  this.arr.splice(0, 0, l),
                  this._groups.splice(0, 0, l),
                  (this._currentCopies += 1);
              }
              this.elem.reloadShapes(), (n = !0);
            }
            for (s = 0, r = 0; r <= this._groups.length - 1; r += 1) {
              if (
                ((o = s < h),
                (this._groups[r]._render = o),
                this.changeGroupRender(this._groups[r].it, o),
                !o)
              ) {
                var A = this.elemsData[r].it,
                  d = A[A.length - 1];
                0 !== d.transform.op.v
                  ? ((d.transform.op._mdf = !0), (d.transform.op.v = 0))
                  : (d.transform.op._mdf = !1);
              }
              s += 1;
            }
            this._currentCopies = h;
            var u = this.o.v,
              c = u % 1,
              g = u > 0 ? Math.floor(u) : Math.ceil(u),
              f = this.pMatrix.props,
              p = this.rMatrix.props,
              m = this.sMatrix.props;
            this.pMatrix.reset(),
              this.rMatrix.reset(),
              this.sMatrix.reset(),
              this.tMatrix.reset(),
              this.matrix.reset();
            var v,
              E,
              y = 0;
            if (u > 0) {
              for (; y < g; )
                this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  1,
                  !1
                ),
                  (y += 1);
              c &&
                (this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  c,
                  !1
                ),
                (y += c));
            } else if (u < 0) {
              for (; y > g; )
                this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  1,
                  !0
                ),
                  (y -= 1);
              c &&
                (this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  -c,
                  !0
                ),
                (y -= c));
            }
            for (
              r = 1 === this.data.m ? 0 : this._currentCopies - 1,
                a = 1 === this.data.m ? 1 : -1,
                s = this._currentCopies;
              s;

            ) {
              if (
                ((E = (i = (e = this.elemsData[r].it)[e.length - 1].transform
                  .mProps.v.props).length),
                (e[e.length - 1].transform.mProps._mdf = !0),
                (e[e.length - 1].transform.op._mdf = !0),
                (e[e.length - 1].transform.op.v =
                  1 === this._currentCopies
                    ? this.so.v
                    : this.so.v +
                      (this.eo.v - this.so.v) *
                        (r / (this._currentCopies - 1))),
                0 !== y)
              ) {
                for (
                  ((0 !== r && 1 === a) ||
                    (r !== this._currentCopies - 1 && -1 === a)) &&
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      1,
                      !1
                    ),
                    this.matrix.transform(
                      p[0],
                      p[1],
                      p[2],
                      p[3],
                      p[4],
                      p[5],
                      p[6],
                      p[7],
                      p[8],
                      p[9],
                      p[10],
                      p[11],
                      p[12],
                      p[13],
                      p[14],
                      p[15]
                    ),
                    this.matrix.transform(
                      m[0],
                      m[1],
                      m[2],
                      m[3],
                      m[4],
                      m[5],
                      m[6],
                      m[7],
                      m[8],
                      m[9],
                      m[10],
                      m[11],
                      m[12],
                      m[13],
                      m[14],
                      m[15]
                    ),
                    this.matrix.transform(
                      f[0],
                      f[1],
                      f[2],
                      f[3],
                      f[4],
                      f[5],
                      f[6],
                      f[7],
                      f[8],
                      f[9],
                      f[10],
                      f[11],
                      f[12],
                      f[13],
                      f[14],
                      f[15]
                    ),
                    v = 0;
                  v < E;
                  v += 1
                )
                  i[v] = this.matrix.props[v];
                this.matrix.reset();
              } else
                for (this.matrix.reset(), v = 0; v < E; v += 1)
                  i[v] = this.matrix.props[v];
              (y += 1), (s -= 1), (r += a);
            }
          } else
            for (s = this._currentCopies, r = 0, a = 1; s; )
              (i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v
                .props),
                (e[e.length - 1].transform.mProps._mdf = !1),
                (e[e.length - 1].transform.op._mdf = !1),
                (s -= 1),
                (r += a);
          return n;
        }),
        (jt.prototype.addShape = function () {}),
        s([Nt], Yt),
        (Yt.prototype.initModifierProperties = function (t, e) {
          (this.getValue = this.processKeys),
            (this.rd = gt.getProp(t, e.r, 0, null, this)),
            (this._isAnimated = !!this.rd.effectsSequence.length);
        }),
        (Yt.prototype.processPath = function (t, e) {
          var i,
            r = Et.newElement();
          r.c = t.c;
          var a,
            s,
            n,
            o,
            h,
            l,
            A,
            d,
            u,
            c,
            g,
            f,
            p = t._length,
            m = 0;
          for (i = 0; i < p; i += 1)
            (a = t.v[i]),
              (n = t.o[i]),
              (s = t.i[i]),
              a[0] === n[0] && a[1] === n[1] && a[0] === s[0] && a[1] === s[1]
                ? (0 !== i && i !== p - 1) || t.c
                  ? ((o = 0 === i ? t.v[p - 1] : t.v[i - 1]),
                    (l = (h = Math.sqrt(
                      Math.pow(a[0] - o[0], 2) + Math.pow(a[1] - o[1], 2)
                    ))
                      ? Math.min(h / 2, e) / h
                      : 0),
                    (A = g = a[0] + (o[0] - a[0]) * l),
                    (d = f = a[1] - (a[1] - o[1]) * l),
                    (u = A - (A - a[0]) * I),
                    (c = d - (d - a[1]) * I),
                    r.setTripleAt(A, d, u, c, g, f, m),
                    (m += 1),
                    (o = i === p - 1 ? t.v[0] : t.v[i + 1]),
                    (l = (h = Math.sqrt(
                      Math.pow(a[0] - o[0], 2) + Math.pow(a[1] - o[1], 2)
                    ))
                      ? Math.min(h / 2, e) / h
                      : 0),
                    (A = u = a[0] + (o[0] - a[0]) * l),
                    (d = c = a[1] + (o[1] - a[1]) * l),
                    (g = A - (A - a[0]) * I),
                    (f = d - (d - a[1]) * I),
                    r.setTripleAt(A, d, u, c, g, f, m),
                    (m += 1))
                  : (r.setTripleAt(a[0], a[1], n[0], n[1], s[0], s[1], m),
                    (m += 1))
                : (r.setTripleAt(
                    t.v[i][0],
                    t.v[i][1],
                    t.o[i][0],
                    t.o[i][1],
                    t.i[i][0],
                    t.i[i][1],
                    m
                  ),
                  (m += 1));
          return r;
        }),
        (Yt.prototype.processShapes = function (t) {
          var e,
            i,
            r,
            a,
            s,
            n,
            o = this.shapes.length,
            h = this.rd.v;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (
                ((n = (s = this.shapes[i]).localShapeCollection),
                s.shape._mdf || this._mdf || t)
              )
                for (
                  n.releaseShapes(),
                    s.shape._mdf = !0,
                    e = s.shape.paths.shapes,
                    a = s.shape.paths._length,
                    r = 0;
                  r < a;
                  r += 1
                )
                  n.addShape(this.processPath(e[r], h));
              s.shape.paths = s.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = !1);
        }),
        (Jt.prototype.point = function (t) {
          return [
            ((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0],
            ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1],
          ];
        }),
        (Jt.prototype.derivative = function (t) {
          return [
            (3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0],
            (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1],
          ];
        }),
        (Jt.prototype.tangentAngle = function (t) {
          var e = this.derivative(t);
          return Math.atan2(e[1], e[0]);
        }),
        (Jt.prototype.normalAngle = function (t) {
          var e = this.derivative(t);
          return Math.atan2(e[0], e[1]);
        }),
        (Jt.prototype.inflectionPoints = function () {
          var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];
          if (Vt(t)) return [];
          var e = (-0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1])) / t,
            i =
              e * e -
              ((1 / 3) * (this.b[1] * this.c[0] - this.b[0] * this.c[1])) / t;
          if (i < 0) return [];
          var r = Math.sqrt(i);
          return Vt(r)
            ? r > 0 && r < 1
              ? [e]
              : []
            : [e - r, e + r].filter(function (t) {
                return t > 0 && t < 1;
              });
        }),
        (Jt.prototype.split = function (t) {
          if (t <= 0) return [Wt(this.points[0]), this];
          if (t >= 1) return [this, Wt(this.points[this.points.length - 1])];
          var e = zt(this.points[0], this.points[1], t),
            i = zt(this.points[1], this.points[2], t),
            r = zt(this.points[2], this.points[3], t),
            a = zt(e, i, t),
            s = zt(i, r, t),
            n = zt(a, s, t);
          return [
            new Jt(this.points[0], e, a, n, !0),
            new Jt(n, s, r, this.points[3], !0),
          ];
        }),
        (Jt.prototype.bounds = function () {
          return { x: Zt(this, 0), y: Zt(this, 1) };
        }),
        (Jt.prototype.boundingBox = function () {
          var t = this.bounds();
          return {
            left: t.x.min,
            right: t.x.max,
            top: t.y.min,
            bottom: t.y.max,
            width: t.x.max - t.x.min,
            height: t.y.max - t.y.min,
            cx: (t.x.max + t.x.min) / 2,
            cy: (t.y.max + t.y.min) / 2,
          };
        }),
        (Jt.prototype.intersections = function (t, e, i) {
          void 0 === e && (e = 2), void 0 === i && (i = 7);
          var r = [];
          return te(Xt(this, 0, 1), Xt(t, 0, 1), 0, e, r, i), r;
        }),
        (Jt.shapeSegment = function (t, e) {
          var i = (e + 1) % t.length();
          return new Jt(t.v[e], t.o[e], t.i[i], t.v[i], !0);
        }),
        (Jt.shapeSegmentInverted = function (t, e) {
          var i = (e + 1) % t.length();
          return new Jt(t.v[i], t.i[i], t.o[e], t.v[e], !0);
        }),
        s([Nt], ne),
        (ne.prototype.initModifierProperties = function (t, e) {
          (this.getValue = this.processKeys),
            (this.amplitude = gt.getProp(t, e.s, 0, null, this)),
            (this.frequency = gt.getProp(t, e.r, 0, null, this)),
            (this.pointsType = gt.getProp(t, e.pt, 0, null, this)),
            (this._isAnimated =
              0 !== this.amplitude.effectsSequence.length ||
              0 !== this.frequency.effectsSequence.length ||
              0 !== this.pointsType.effectsSequence.length);
        }),
        (ne.prototype.processPath = function (t, e, i, r) {
          var a = t._length,
            s = Et.newElement();
          if (((s.c = t.c), t.c || (a -= 1), 0 === a)) return s;
          var n = -1,
            o = Jt.shapeSegment(t, 0);
          le(s, t, 0, e, i, r, n);
          for (var h = 0; h < a; h += 1)
            (n = Ae(s, o, e, i, r, -n)),
              (o = h !== a - 1 || t.c ? Jt.shapeSegment(t, (h + 1) % a) : null),
              le(s, t, h + 1, e, i, r, n);
          return s;
        }),
        (ne.prototype.processShapes = function (t) {
          var e,
            i,
            r,
            a,
            s,
            n,
            o = this.shapes.length,
            h = this.amplitude.v,
            l = Math.max(0, Math.round(this.frequency.v)),
            A = this.pointsType.v;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (
                ((n = (s = this.shapes[i]).localShapeCollection),
                s.shape._mdf || this._mdf || t)
              )
                for (
                  n.releaseShapes(),
                    s.shape._mdf = !0,
                    e = s.shape.paths.shapes,
                    a = s.shape.paths._length,
                    r = 0;
                  r < a;
                  r += 1
                )
                  n.addShape(this.processPath(e[r], h, l, A));
              s.shape.paths = s.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = !1);
        }),
        s([Nt], me),
        (me.prototype.initModifierProperties = function (t, e) {
          (this.getValue = this.processKeys),
            (this.amount = gt.getProp(t, e.a, 0, null, this)),
            (this.miterLimit = gt.getProp(t, e.ml, 0, null, this)),
            (this.lineJoin = e.lj),
            (this._isAnimated = 0 !== this.amount.effectsSequence.length);
        }),
        (me.prototype.processPath = function (t, e, i, r) {
          var a = Et.newElement();
          a.c = t.c;
          var s,
            n,
            o,
            h = t.length();
          t.c || (h -= 1);
          var l = [];
          for (s = 0; s < h; s += 1)
            (o = Jt.shapeSegment(t, s)), l.push(pe(o, e));
          if (!t.c)
            for (s = h - 1; s >= 0; s -= 1)
              (o = Jt.shapeSegmentInverted(t, s)), l.push(pe(o, e));
          l = (function (t) {
            for (var e, i = 1; i < t.length; i += 1)
              (e = fe(t[i - 1], t[i])), (t[i - 1] = e[0]), (t[i] = e[1]);
            return (
              t.length > 1 &&
                ((e = fe(t[t.length - 1], t[0])),
                (t[t.length - 1] = e[0]),
                (t[0] = e[1])),
              t
            );
          })(l);
          var A = null,
            d = null;
          for (s = 0; s < l.length; s += 1) {
            var u = l[s];
            for (
              d && (A = ce(a, d, u[0], i, r)), d = u[u.length - 1], n = 0;
              n < u.length;
              n += 1
            )
              (o = u[n]),
                A && se(o.points[0], A)
                  ? a.setXYAt(
                      o.points[1][0],
                      o.points[1][1],
                      "o",
                      a.length() - 1
                    )
                  : a.setTripleAt(
                      o.points[0][0],
                      o.points[0][1],
                      o.points[1][0],
                      o.points[1][1],
                      o.points[0][0],
                      o.points[0][1],
                      a.length()
                    ),
                a.setTripleAt(
                  o.points[3][0],
                  o.points[3][1],
                  o.points[3][0],
                  o.points[3][1],
                  o.points[2][0],
                  o.points[2][1],
                  a.length()
                ),
                (A = o.points[3]);
          }
          return l.length && ce(a, d, l[0][0], i, r), a;
        }),
        (me.prototype.processShapes = function (t) {
          var e,
            i,
            r,
            a,
            s,
            n,
            o = this.shapes.length,
            h = this.amount.v,
            l = this.miterLimit.v,
            A = this.lineJoin;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (
                ((n = (s = this.shapes[i]).localShapeCollection),
                s.shape._mdf || this._mdf || t)
              )
                for (
                  n.releaseShapes(),
                    s.shape._mdf = !0,
                    e = s.shape.paths.shapes,
                    a = s.shape.paths._length,
                    r = 0;
                  r < a;
                  r += 1
                )
                  n.addShape(this.processPath(e[r], h, A, l));
              s.shape.paths = s.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      var Ee = (function () {
        var t = { w: 0, size: 0, shapes: [], data: { shapes: [] } },
          e = [];
        e = e.concat([
          2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368,
          2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
          2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403,
        ]);
        var i = 127988,
          r = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
        function s(t, e) {
          var i = a("span");
          i.setAttribute("aria-hidden", !0), (i.style.fontFamily = e);
          var r = a("span");
          (r.innerText = "giItT1WQy@!-/#"),
            (i.style.position = "absolute"),
            (i.style.left = "-10000px"),
            (i.style.top = "-10000px"),
            (i.style.fontSize = "300px"),
            (i.style.fontVariant = "normal"),
            (i.style.fontStyle = "normal"),
            (i.style.fontWeight = "normal"),
            (i.style.letterSpacing = "0"),
            i.appendChild(r),
            document.body.appendChild(i);
          var s = r.offsetWidth;
          return (
            (r.style.fontFamily =
              (function (t) {
                var e,
                  i = t.split(","),
                  r = i.length,
                  a = [];
                for (e = 0; e < r; e += 1)
                  "sans-serif" !== i[e] && "monospace" !== i[e] && a.push(i[e]);
                return a.join(",");
              })(t) +
              ", " +
              e),
            { node: r, w: s, parent: i }
          );
        }
        function n(t, e) {
          var i,
            r = document.body && e ? "svg" : "canvas",
            a = ve(t);
          if ("svg" === r) {
            var s = U("text");
            (s.style.fontSize = "100px"),
              s.setAttribute("font-family", t.fFamily),
              s.setAttribute("font-style", a.style),
              s.setAttribute("font-weight", a.weight),
              (s.textContent = "1"),
              t.fClass
                ? ((s.style.fontFamily = "inherit"),
                  s.setAttribute("class", t.fClass))
                : (s.style.fontFamily = t.fFamily),
              e.appendChild(s),
              (i = s);
          } else {
            var n = new OffscreenCanvas(500, 500).getContext("2d");
            (n.font = a.style + " " + a.weight + " 100px " + t.fFamily),
              (i = n);
          }
          return {
            measureText: function (t) {
              return "svg" === r
                ? ((i.textContent = t), i.getComputedTextLength())
                : i.measureText(t).width;
            },
          };
        }
        function o(t) {
          var e = 0,
            i = t.charCodeAt(0);
          if (i >= 55296 && i <= 56319) {
            var r = t.charCodeAt(1);
            r >= 56320 &&
              r <= 57343 &&
              (e = 1024 * (i - 55296) + r - 56320 + 65536);
          }
          return e;
        }
        function h(t) {
          var e = o(t);
          return e >= 127462 && e <= 127487;
        }
        var l = function () {
          (this.fonts = []),
            (this.chars = null),
            (this.typekitLoaded = 0),
            (this.isLoaded = !1),
            (this._warned = !1),
            (this.initTime = Date.now()),
            (this.setIsLoadedBinded = this.setIsLoaded.bind(this)),
            (this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this));
        };
        (l.isModifier = function (t, e) {
          var i = t.toString(16) + e.toString(16);
          return -1 !== r.indexOf(i);
        }),
          (l.isZeroWidthJoiner = function (t) {
            return 8205 === t;
          }),
          (l.isFlagEmoji = function (t) {
            return h(t.substr(0, 2)) && h(t.substr(2, 2));
          }),
          (l.isRegionalCode = h),
          (l.isCombinedCharacter = function (t) {
            return -1 !== e.indexOf(t);
          }),
          (l.isRegionalFlag = function (t, e) {
            var r = o(t.substr(e, 2));
            if (r !== i) return !1;
            var a = 0;
            for (e += 2; a < 5; ) {
              if ((r = o(t.substr(e, 2))) < 917601 || r > 917626) return !1;
              (a += 1), (e += 2);
            }
            return 917631 === o(t.substr(e, 2));
          }),
          (l.isVariationSelector = function (t) {
            return 65039 === t;
          }),
          (l.BLACK_FLAG_CODE_POINT = i);
        var A = {
          addChars: function (t) {
            if (t) {
              var e;
              this.chars || (this.chars = []);
              var i,
                r,
                a = t.length,
                s = this.chars.length;
              for (e = 0; e < a; e += 1) {
                for (i = 0, r = !1; i < s; )
                  this.chars[i].style === t[e].style &&
                    this.chars[i].fFamily === t[e].fFamily &&
                    this.chars[i].ch === t[e].ch &&
                    (r = !0),
                    (i += 1);
                r || (this.chars.push(t[e]), (s += 1));
              }
            }
          },
          addFonts: function (t, e) {
            if (t) {
              if (this.chars)
                return (this.isLoaded = !0), void (this.fonts = t.list);
              if (!document.body)
                return (
                  (this.isLoaded = !0),
                  t.list.forEach(function (t) {
                    (t.helper = n(t)), (t.cache = {});
                  }),
                  void (this.fonts = t.list)
                );
              var i,
                r = t.list,
                o = r.length,
                h = o;
              for (i = 0; i < o; i += 1) {
                var l,
                  A,
                  d = !0;
                if (
                  ((r[i].loaded = !1),
                  (r[i].monoCase = s(r[i].fFamily, "monospace")),
                  (r[i].sansCase = s(r[i].fFamily, "sans-serif")),
                  r[i].fPath)
                ) {
                  if ("p" === r[i].fOrigin || 3 === r[i].origin) {
                    if (
                      ((l = document.querySelectorAll(
                        'style[f-forigin="p"][f-family="' +
                          r[i].fFamily +
                          '"], style[f-origin="3"][f-family="' +
                          r[i].fFamily +
                          '"]'
                      )).length > 0 && (d = !1),
                      d)
                    ) {
                      var u = a("style");
                      u.setAttribute("f-forigin", r[i].fOrigin),
                        u.setAttribute("f-origin", r[i].origin),
                        u.setAttribute("f-family", r[i].fFamily),
                        (u.type = "text/css"),
                        (u.innerText =
                          "@font-face {font-family: " +
                          r[i].fFamily +
                          "; font-style: normal; src: url('" +
                          r[i].fPath +
                          "');}"),
                        e.appendChild(u);
                    }
                  } else if ("g" === r[i].fOrigin || 1 === r[i].origin) {
                    for (
                      l = document.querySelectorAll(
                        'link[f-forigin="g"], link[f-origin="1"]'
                      ),
                        A = 0;
                      A < l.length;
                      A += 1
                    )
                      -1 !== l[A].href.indexOf(r[i].fPath) && (d = !1);
                    if (d) {
                      var c = a("link");
                      c.setAttribute("f-forigin", r[i].fOrigin),
                        c.setAttribute("f-origin", r[i].origin),
                        (c.type = "text/css"),
                        (c.rel = "stylesheet"),
                        (c.href = r[i].fPath),
                        document.body.appendChild(c);
                    }
                  } else if ("t" === r[i].fOrigin || 2 === r[i].origin) {
                    for (
                      l = document.querySelectorAll(
                        'script[f-forigin="t"], script[f-origin="2"]'
                      ),
                        A = 0;
                      A < l.length;
                      A += 1
                    )
                      r[i].fPath === l[A].src && (d = !1);
                    if (d) {
                      var g = a("link");
                      g.setAttribute("f-forigin", r[i].fOrigin),
                        g.setAttribute("f-origin", r[i].origin),
                        g.setAttribute("rel", "stylesheet"),
                        g.setAttribute("href", r[i].fPath),
                        e.appendChild(g);
                    }
                  }
                } else (r[i].loaded = !0), (h -= 1);
                (r[i].helper = n(r[i], e)),
                  (r[i].cache = {}),
                  this.fonts.push(r[i]);
              }
              0 === h
                ? (this.isLoaded = !0)
                : setTimeout(this.checkLoadedFonts.bind(this), 100);
            } else this.isLoaded = !0;
          },
          getCharData: function (e, i, r) {
            for (var a = 0, s = this.chars.length; a < s; ) {
              if (
                this.chars[a].ch === e &&
                this.chars[a].style === i &&
                this.chars[a].fFamily === r
              )
                return this.chars[a];
              a += 1;
            }
            return (
              (("string" == typeof e && 13 !== e.charCodeAt(0)) || !e) &&
                console &&
                console.warn &&
                !this._warned &&
                ((this._warned = !0),
                console.warn(
                  "Missing character from exported characters list: ",
                  e,
                  i,
                  r
                )),
              t
            );
          },
          getFontByName: function (t) {
            for (var e = 0, i = this.fonts.length; e < i; ) {
              if (this.fonts[e].fName === t) return this.fonts[e];
              e += 1;
            }
            return this.fonts[0];
          },
          measureText: function (t, e, i) {
            var r = this.getFontByName(e),
              a = t;
            if (!r.cache[a]) {
              var s = r.helper;
              if (" " === t) {
                var n = s.measureText("|" + t + "|"),
                  o = s.measureText("||");
                r.cache[a] = (n - o) / 100;
              } else r.cache[a] = s.measureText(t) / 100;
            }
            return r.cache[a] * i;
          },
          checkLoadedFonts: function () {
            var t,
              e,
              i,
              r = this.fonts.length,
              a = r;
            for (t = 0; t < r; t += 1)
              this.fonts[t].loaded
                ? (a -= 1)
                : "n" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin
                ? (this.fonts[t].loaded = !0)
                : ((e = this.fonts[t].monoCase.node),
                  (i = this.fonts[t].monoCase.w),
                  e.offsetWidth !== i
                    ? ((a -= 1), (this.fonts[t].loaded = !0))
                    : ((e = this.fonts[t].sansCase.node),
                      (i = this.fonts[t].sansCase.w),
                      e.offsetWidth !== i &&
                        ((a -= 1), (this.fonts[t].loaded = !0))),
                  this.fonts[t].loaded &&
                    (this.fonts[t].sansCase.parent.parentNode.removeChild(
                      this.fonts[t].sansCase.parent
                    ),
                    this.fonts[t].monoCase.parent.parentNode.removeChild(
                      this.fonts[t].monoCase.parent
                    )));
            0 !== a && Date.now() - this.initTime < 5e3
              ? setTimeout(this.checkLoadedFontsBinded, 20)
              : setTimeout(this.setIsLoadedBinded, 10);
          },
          setIsLoaded: function () {
            this.isLoaded = !0;
          },
        };
        return (l.prototype = A), l;
      })();
      function ye(t) {
        this.animationData = t;
      }
      function Ie() {}
      (ye.prototype.getProp = function (t) {
        return this.animationData.slots && this.animationData.slots[t.sid]
          ? Object.assign(t, this.animationData.slots[t.sid].p)
          : t;
      }),
        (Ie.prototype = {
          initRenderable: function () {
            (this.isInRange = !1),
              (this.hidden = !1),
              (this.isTransparent = !1),
              (this.renderableComponents = []);
          },
          addRenderableComponent: function (t) {
            -1 === this.renderableComponents.indexOf(t) &&
              this.renderableComponents.push(t);
          },
          removeRenderableComponent: function (t) {
            -1 !== this.renderableComponents.indexOf(t) &&
              this.renderableComponents.splice(
                this.renderableComponents.indexOf(t),
                1
              );
          },
          prepareRenderableFrame: function (t) {
            this.checkLayerLimits(t);
          },
          checkTransparency: function () {
            this.finalTransform.mProp.o.v <= 0
              ? !this.isTransparent &&
                this.globalData.renderConfig.hideOnTransparent &&
                ((this.isTransparent = !0), this.hide())
              : this.isTransparent && ((this.isTransparent = !1), this.show());
          },
          checkLayerLimits: function (t) {
            this.data.ip - this.data.st <= t && this.data.op - this.data.st > t
              ? !0 !== this.isInRange &&
                ((this.globalData._mdf = !0),
                (this._mdf = !0),
                (this.isInRange = !0),
                this.show())
              : !1 !== this.isInRange &&
                ((this.globalData._mdf = !0),
                (this.isInRange = !1),
                this.hide());
          },
          renderRenderable: function () {
            var t,
              e = this.renderableComponents.length;
            for (t = 0; t < e; t += 1)
              this.renderableComponents[t].renderFrame(this._isFirstFrame);
          },
          sourceRectAtTime: function () {
            return { top: 0, left: 0, width: 100, height: 100 };
          },
          getLayerSize: function () {
            return 5 === this.data.ty
              ? { w: this.data.textData.width, h: this.data.textData.height }
              : { w: this.data.width, h: this.data.height };
          },
        });
      var Ce,
        Be =
          ((Ce = {
            0: "source-over",
            1: "multiply",
            2: "screen",
            3: "overlay",
            4: "darken",
            5: "lighten",
            6: "color-dodge",
            7: "color-burn",
            8: "hard-light",
            9: "soft-light",
            10: "difference",
            11: "exclusion",
            12: "hue",
            13: "saturation",
            14: "color",
            15: "luminosity",
          }),
          function (t) {
            return Ce[t] || "";
          });
      function ke(t, e, i) {
        this.p = gt.getProp(e, t.v, 0, 0, i);
      }
      function xe(t, e, i) {
        this.p = gt.getProp(e, t.v, 0, 0, i);
      }
      function we(t, e, i) {
        this.p = gt.getProp(e, t.v, 1, 0, i);
      }
      function Qe(t, e, i) {
        this.p = gt.getProp(e, t.v, 1, 0, i);
      }
      function Se(t, e, i) {
        this.p = gt.getProp(e, t.v, 0, 0, i);
      }
      function be(t, e, i) {
        this.p = gt.getProp(e, t.v, 0, 0, i);
      }
      function De(t, e, i) {
        this.p = gt.getProp(e, t.v, 0, 0, i);
      }
      function Re() {
        this.p = {};
      }
      function Le(t, e) {
        var i,
          r = t.ef || [];
        this.effectElements = [];
        var a,
          s = r.length;
        for (i = 0; i < s; i += 1)
          (a = new Te(r[i], e)), this.effectElements.push(a);
      }
      function Te(t, e) {
        this.init(t, e);
      }
      function Me() {}
      function Fe() {}
      function Pe(t, e, i) {
        this.initFrame(),
          this.initRenderable(),
          (this.assetData = e.getAssetData(t.refId)),
          (this.footageData = e.imageLoader.getAsset(this.assetData)),
          this.initBaseData(t, e, i);
      }
      function _e(t, e, i) {
        this.initFrame(),
          this.initRenderable(),
          (this.assetData = e.getAssetData(t.refId)),
          this.initBaseData(t, e, i),
          (this._isPlaying = !1),
          (this._canPlay = !1);
        var r = this.globalData.getAssetsPath(this.assetData);
        (this.audio = this.globalData.audioController.createAudio(r)),
          (this._currentTime = 0),
          this.globalData.audioController.addAudio(this),
          (this._volumeMultiplier = 1),
          (this._volume = 1),
          (this._previousVolume = null),
          (this.tm = t.tm
            ? gt.getProp(this, t.tm, 0, e.frameRate, this)
            : { _placeholder: !0 }),
          (this.lv = gt.getProp(
            this,
            t.au && t.au.lv ? t.au.lv : { k: [100] },
            1,
            0.01,
            this
          ));
      }
      function Ne() {}
      s([ft], Te),
        (Te.prototype.getValue = Te.prototype.iterateDynamicProperties),
        (Te.prototype.init = function (t, e) {
          var i;
          (this.data = t),
            (this.effectElements = []),
            this.initDynamicPropertyContainer(e);
          var r,
            a = this.data.ef.length,
            s = this.data.ef;
          for (i = 0; i < a; i += 1) {
            switch (((r = null), s[i].ty)) {
              case 0:
                r = new ke(s[i], e, this);
                break;
              case 1:
                r = new xe(s[i], e, this);
                break;
              case 2:
                r = new we(s[i], e, this);
                break;
              case 3:
                r = new Qe(s[i], e, this);
                break;
              case 4:
              case 7:
                r = new De(s[i], e, this);
                break;
              case 10:
                r = new Se(s[i], e, this);
                break;
              case 11:
                r = new be(s[i], e, this);
                break;
              case 5:
                r = new Le(s[i], e);
                break;
              default:
                r = new Re(s[i]);
            }
            r && this.effectElements.push(r);
          }
        }),
        (Me.prototype = {
          checkMasks: function () {
            if (!this.data.hasMask) return !1;
            for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
              if (
                "n" !== this.data.masksProperties[t].mode &&
                !1 !== this.data.masksProperties[t].cl
              )
                return !0;
              t += 1;
            }
            return !1;
          },
          initExpressions: function () {},
          setBlendMode: function () {
            var t = Be(this.data.bm);
            (this.baseElement || this.layerElement).style["mix-blend-mode"] = t;
          },
          initBaseData: function (t, e, i) {
            (this.globalData = e),
              (this.comp = i),
              (this.data = t),
              (this.layerId = D()),
              this.data.sr || (this.data.sr = 1),
              (this.effectsManager = new Le(
                this.data,
                this,
                this.dynamicProperties
              ));
          },
          getType: function () {
            return this.type;
          },
          sourceRectAtTime: function () {},
        }),
        (Fe.prototype = {
          initFrame: function () {
            (this._isFirstFrame = !1),
              (this.dynamicProperties = []),
              (this._mdf = !1);
          },
          prepareProperties: function (t, e) {
            var i,
              r = this.dynamicProperties.length;
            for (i = 0; i < r; i += 1)
              (e ||
                (this._isParent &&
                  "transform" === this.dynamicProperties[i].propType)) &&
                (this.dynamicProperties[i].getValue(),
                this.dynamicProperties[i]._mdf &&
                  ((this.globalData._mdf = !0), (this._mdf = !0)));
          },
          addDynamicProperty: function (t) {
            -1 === this.dynamicProperties.indexOf(t) &&
              this.dynamicProperties.push(t);
          },
        }),
        (Pe.prototype.prepareFrame = function () {}),
        s([Ie, Me, Fe], Pe),
        (Pe.prototype.getBaseElement = function () {
          return null;
        }),
        (Pe.prototype.renderFrame = function () {}),
        (Pe.prototype.destroy = function () {}),
        (Pe.prototype.initExpressions = function () {}),
        (Pe.prototype.getFootageData = function () {
          return this.footageData;
        }),
        (_e.prototype.prepareFrame = function (t) {
          if (
            (this.prepareRenderableFrame(t, !0),
            this.prepareProperties(t, !0),
            this.tm._placeholder)
          )
            this._currentTime = t / this.data.sr;
          else {
            var e = this.tm.v;
            this._currentTime = e;
          }
          this._volume = this.lv.v[0];
          var i = this._volume * this._volumeMultiplier;
          this._previousVolume !== i &&
            ((this._previousVolume = i), this.audio.volume(i));
        }),
        s([Ie, Me, Fe], _e),
        (_e.prototype.renderFrame = function () {
          this.isInRange &&
            this._canPlay &&
            (this._isPlaying
              ? (!this.audio.playing() ||
                  Math.abs(
                    this._currentTime / this.globalData.frameRate -
                      this.audio.seek()
                  ) > 0.1) &&
                this.audio.seek(this._currentTime / this.globalData.frameRate)
              : (this.audio.play(),
                this.audio.seek(this._currentTime / this.globalData.frameRate),
                (this._isPlaying = !0)));
        }),
        (_e.prototype.show = function () {}),
        (_e.prototype.hide = function () {
          this.audio.pause(), (this._isPlaying = !1);
        }),
        (_e.prototype.pause = function () {
          this.audio.pause(), (this._isPlaying = !1), (this._canPlay = !1);
        }),
        (_e.prototype.resume = function () {
          this._canPlay = !0;
        }),
        (_e.prototype.setRate = function (t) {
          this.audio.rate(t);
        }),
        (_e.prototype.volume = function (t) {
          (this._volumeMultiplier = t),
            (this._previousVolume = t * this._volume),
            this.audio.volume(this._previousVolume);
        }),
        (_e.prototype.getBaseElement = function () {
          return null;
        }),
        (_e.prototype.destroy = function () {}),
        (_e.prototype.sourceRectAtTime = function () {}),
        (_e.prototype.initExpressions = function () {}),
        (Ne.prototype.checkLayers = function (t) {
          var e,
            i,
            r = this.layers.length;
          for (this.completeLayers = !0, e = r - 1; e >= 0; e -= 1)
            this.elements[e] ||
              ((i = this.layers[e]).ip - i.st <= t - this.layers[e].st &&
                i.op - i.st > t - this.layers[e].st &&
                this.buildItem(e)),
              (this.completeLayers = !!this.elements[e] && this.completeLayers);
          this.checkPendingElements();
        }),
        (Ne.prototype.createItem = function (t) {
          switch (t.ty) {
            case 2:
              return this.createImage(t);
            case 0:
              return this.createComp(t);
            case 1:
              return this.createSolid(t);
            case 3:
            default:
              return this.createNull(t);
            case 4:
              return this.createShape(t);
            case 5:
              return this.createText(t);
            case 6:
              return this.createAudio(t);
            case 13:
              return this.createCamera(t);
            case 15:
              return this.createFootage(t);
          }
        }),
        (Ne.prototype.createCamera = function () {
          throw new Error("You're using a 3d camera. Try the html renderer.");
        }),
        (Ne.prototype.createAudio = function (t) {
          return new _e(t, this.globalData, this);
        }),
        (Ne.prototype.createFootage = function (t) {
          return new Pe(t, this.globalData, this);
        }),
        (Ne.prototype.buildAllItems = function () {
          var t,
            e = this.layers.length;
          for (t = 0; t < e; t += 1) this.buildItem(t);
          this.checkPendingElements();
        }),
        (Ne.prototype.includeLayers = function (t) {
          var e;
          this.completeLayers = !1;
          var i,
            r = t.length,
            a = this.layers.length;
          for (e = 0; e < r; e += 1)
            for (i = 0; i < a; ) {
              if (this.layers[i].id === t[e].id) {
                this.layers[i] = t[e];
                break;
              }
              i += 1;
            }
        }),
        (Ne.prototype.setProjectInterface = function (t) {
          this.globalData.projectInterface = t;
        }),
        (Ne.prototype.initItems = function () {
          this.globalData.progressiveLoad || this.buildAllItems();
        }),
        (Ne.prototype.buildElementParenting = function (t, e, i) {
          for (
            var r = this.elements, a = this.layers, s = 0, n = a.length;
            s < n;

          )
            a[s].ind == e &&
              (r[s] && !0 !== r[s]
                ? (i.push(r[s]),
                  r[s].setAsParent(),
                  void 0 !== a[s].parent
                    ? this.buildElementParenting(t, a[s].parent, i)
                    : t.setHierarchy(i))
                : (this.buildItem(s), this.addPendingElement(t))),
              (s += 1);
        }),
        (Ne.prototype.addPendingElement = function (t) {
          this.pendingElements.push(t);
        }),
        (Ne.prototype.searchExtraCompositions = function (t) {
          var e,
            i = t.length;
          for (e = 0; e < i; e += 1)
            if (t[e].xt) {
              var r = this.createComp(t[e]);
              r.initExpressions(),
                this.globalData.projectInterface.registerComposition(r);
            }
        }),
        (Ne.prototype.getElementById = function (t) {
          var e,
            i = this.elements.length;
          for (e = 0; e < i; e += 1)
            if (this.elements[e].data.ind === t) return this.elements[e];
          return null;
        }),
        (Ne.prototype.getElementByPath = function (t) {
          var e,
            i = t.shift();
          if ("number" == typeof i) e = this.elements[i];
          else {
            var r,
              a = this.elements.length;
            for (r = 0; r < a; r += 1)
              if (this.elements[r].data.nm === i) {
                e = this.elements[r];
                break;
              }
          }
          return 0 === t.length ? e : e.getElementByPath(t);
        }),
        (Ne.prototype.setupGlobalData = function (t, e) {
          (this.globalData.fontManager = new Ee()),
            (this.globalData.slotManager = new ye(t)),
            this.globalData.fontManager.addChars(t.chars),
            this.globalData.fontManager.addFonts(t.fonts, e),
            (this.globalData.getAssetData =
              this.animationItem.getAssetData.bind(this.animationItem)),
            (this.globalData.getAssetsPath =
              this.animationItem.getAssetsPath.bind(this.animationItem)),
            (this.globalData.imageLoader = this.animationItem.imagePreloader),
            (this.globalData.audioController =
              this.animationItem.audioController),
            (this.globalData.frameId = 0),
            (this.globalData.frameRate = t.fr),
            (this.globalData.nm = t.nm),
            (this.globalData.compSize = { w: t.w, h: t.h });
        });
      var Ue = "transformEFfect";
      function Ge() {}
      function Oe(t, e, i) {
        (this.data = t),
          (this.element = e),
          (this.globalData = i),
          (this.storedData = []),
          (this.masksProperties = this.data.masksProperties || []),
          (this.maskElement = null);
        var a,
          s,
          n = this.globalData.defs,
          o = this.masksProperties ? this.masksProperties.length : 0;
        (this.viewData = l(o)), (this.solidPath = "");
        var h,
          A,
          d,
          u,
          c,
          g,
          f = this.masksProperties,
          p = 0,
          m = [],
          v = D(),
          E = "clipPath",
          y = "clip-path";
        for (a = 0; a < o; a += 1)
          if (
            ((("a" !== f[a].mode && "n" !== f[a].mode) ||
              f[a].inv ||
              100 !== f[a].o.k ||
              f[a].o.x) &&
              ((E = "mask"), (y = "mask")),
            ("s" !== f[a].mode && "i" !== f[a].mode) || 0 !== p
              ? (d = null)
              : ((d = U("rect")).setAttribute("fill", "#ffffff"),
                d.setAttribute("width", this.element.comp.data.w || 0),
                d.setAttribute("height", this.element.comp.data.h || 0),
                m.push(d)),
            (s = U("path")),
            "n" === f[a].mode)
          )
            (this.viewData[a] = {
              op: gt.getProp(this.element, f[a].o, 0, 0.01, this.element),
              prop: wt.getShapeProp(this.element, f[a], 3),
              elem: s,
              lastPath: "",
            }),
              n.appendChild(s);
          else {
            var I;
            if (
              ((p += 1),
              s.setAttribute("fill", "s" === f[a].mode ? "#000000" : "#ffffff"),
              s.setAttribute("clip-rule", "nonzero"),
              0 !== f[a].x.k
                ? ((E = "mask"),
                  (y = "mask"),
                  (g = gt.getProp(this.element, f[a].x, 0, null, this.element)),
                  (I = D()),
                  (u = U("filter")).setAttribute("id", I),
                  (c = U("feMorphology")).setAttribute("operator", "erode"),
                  c.setAttribute("in", "SourceGraphic"),
                  c.setAttribute("radius", "0"),
                  u.appendChild(c),
                  n.appendChild(u),
                  s.setAttribute(
                    "stroke",
                    "s" === f[a].mode ? "#000000" : "#ffffff"
                  ))
                : ((c = null), (g = null)),
              (this.storedData[a] = {
                elem: s,
                x: g,
                expan: c,
                lastPath: "",
                lastOperator: "",
                filterId: I,
                lastRadius: 0,
              }),
              "i" === f[a].mode)
            ) {
              A = m.length;
              var C = U("g");
              for (h = 0; h < A; h += 1) C.appendChild(m[h]);
              var B = U("mask");
              B.setAttribute("mask-type", "alpha"),
                B.setAttribute("id", v + "_" + p),
                B.appendChild(s),
                n.appendChild(B),
                C.setAttribute("mask", "url(" + r() + "#" + v + "_" + p + ")"),
                (m.length = 0),
                m.push(C);
            } else m.push(s);
            f[a].inv &&
              !this.solidPath &&
              (this.solidPath = this.createLayerSolidPath()),
              (this.viewData[a] = {
                elem: s,
                lastPath: "",
                op: gt.getProp(this.element, f[a].o, 0, 0.01, this.element),
                prop: wt.getShapeProp(this.element, f[a], 3),
                invRect: d,
              }),
              this.viewData[a].prop.k ||
                this.drawPath(f[a], this.viewData[a].prop.v, this.viewData[a]);
          }
        for (this.maskElement = U(E), o = m.length, a = 0; a < o; a += 1)
          this.maskElement.appendChild(m[a]);
        p > 0 &&
          (this.maskElement.setAttribute("id", v),
          this.element.maskedElement.setAttribute(
            y,
            "url(" + r() + "#" + v + ")"
          ),
          n.appendChild(this.maskElement)),
          this.viewData.length && this.element.addRenderableComponent(this);
      }
      (Ge.prototype = {
        initTransform: function () {
          var t = new Qt();
          (this.finalTransform = {
            mProp: this.data.ks
              ? Ot.getTransformProperty(this, this.data.ks, this)
              : { o: 0 },
            _matMdf: !1,
            _localMatMdf: !1,
            _opMdf: !1,
            mat: t,
            localMat: t,
            localOpacity: 1,
          }),
            this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
            this.data.ty;
        },
        renderTransform: function () {
          if (
            ((this.finalTransform._opMdf =
              this.finalTransform.mProp.o._mdf || this._isFirstFrame),
            (this.finalTransform._matMdf =
              this.finalTransform.mProp._mdf || this._isFirstFrame),
            this.hierarchy)
          ) {
            var t,
              e = this.finalTransform.mat,
              i = 0,
              r = this.hierarchy.length;
            if (!this.finalTransform._matMdf)
              for (; i < r; ) {
                if (this.hierarchy[i].finalTransform.mProp._mdf) {
                  this.finalTransform._matMdf = !0;
                  break;
                }
                i += 1;
              }
            if (this.finalTransform._matMdf)
              for (
                t = this.finalTransform.mProp.v.props,
                  e.cloneFromProps(t),
                  i = 0;
                i < r;
                i += 1
              )
                e.multiply(this.hierarchy[i].finalTransform.mProp.v);
          }
          this.finalTransform._matMdf &&
            (this.finalTransform._localMatMdf = this.finalTransform._matMdf),
            this.finalTransform._opMdf &&
              (this.finalTransform.localOpacity =
                this.finalTransform.mProp.o.v);
        },
        renderLocalTransform: function () {
          if (this.localTransforms) {
            var t = 0,
              e = this.localTransforms.length;
            if (
              ((this.finalTransform._localMatMdf = this.finalTransform._matMdf),
              !this.finalTransform._localMatMdf || !this.finalTransform._opMdf)
            )
              for (; t < e; )
                this.localTransforms[t]._mdf &&
                  (this.finalTransform._localMatMdf = !0),
                  this.localTransforms[t]._opMdf &&
                    !this.finalTransform._opMdf &&
                    ((this.finalTransform.localOpacity =
                      this.finalTransform.mProp.o.v),
                    (this.finalTransform._opMdf = !0)),
                  (t += 1);
            if (this.finalTransform._localMatMdf) {
              var i = this.finalTransform.localMat;
              for (
                this.localTransforms[0].matrix.clone(i), t = 1;
                t < e;
                t += 1
              ) {
                var r = this.localTransforms[t].matrix;
                i.multiply(r);
              }
              i.multiply(this.finalTransform.mat);
            }
            if (this.finalTransform._opMdf) {
              var a = this.finalTransform.localOpacity;
              for (t = 0; t < e; t += 1)
                a *= 0.01 * this.localTransforms[t].opacity;
              this.finalTransform.localOpacity = a;
            }
          }
        },
        searchEffectTransforms: function () {
          if (this.renderableEffectsManager) {
            var t = this.renderableEffectsManager.getEffects(Ue);
            if (t.length) {
              (this.localTransforms = []),
                (this.finalTransform.localMat = new Qt());
              var e = 0,
                i = t.length;
              for (e = 0; e < i; e += 1) this.localTransforms.push(t[e]);
            }
          }
        },
        globalToLocal: function (t) {
          var e = [];
          e.push(this.finalTransform);
          for (var i, r = !0, a = this.comp; r; )
            a.finalTransform
              ? (a.data.hasMask && e.splice(0, 0, a.finalTransform),
                (a = a.comp))
              : (r = !1);
          var s,
            n = e.length;
          for (i = 0; i < n; i += 1)
            (s = e[i].mat.applyToPointArray(0, 0, 0)),
              (t = [t[0] - s[0], t[1] - s[1], 0]);
          return t;
        },
        mHelper: new Qt(),
      }),
        (Oe.prototype.getMaskProperty = function (t) {
          return this.viewData[t].prop;
        }),
        (Oe.prototype.renderFrame = function (t) {
          var e,
            i = this.element.finalTransform.mat,
            a = this.masksProperties.length;
          for (e = 0; e < a; e += 1)
            if (
              ((this.viewData[e].prop._mdf || t) &&
                this.drawPath(
                  this.masksProperties[e],
                  this.viewData[e].prop.v,
                  this.viewData[e]
                ),
              (this.viewData[e].op._mdf || t) &&
                this.viewData[e].elem.setAttribute(
                  "fill-opacity",
                  this.viewData[e].op.v
                ),
              "n" !== this.masksProperties[e].mode &&
                (this.viewData[e].invRect &&
                  (this.element.finalTransform.mProp._mdf || t) &&
                  this.viewData[e].invRect.setAttribute(
                    "transform",
                    i.getInverseMatrix().to2dCSS()
                  ),
                this.storedData[e].x && (this.storedData[e].x._mdf || t)))
            ) {
              var s = this.storedData[e].expan;
              this.storedData[e].x.v < 0
                ? ("erode" !== this.storedData[e].lastOperator &&
                    ((this.storedData[e].lastOperator = "erode"),
                    this.storedData[e].elem.setAttribute(
                      "filter",
                      "url(" + r() + "#" + this.storedData[e].filterId + ")"
                    )),
                  s.setAttribute("radius", -this.storedData[e].x.v))
                : ("dilate" !== this.storedData[e].lastOperator &&
                    ((this.storedData[e].lastOperator = "dilate"),
                    this.storedData[e].elem.setAttribute("filter", null)),
                  this.storedData[e].elem.setAttribute(
                    "stroke-width",
                    2 * this.storedData[e].x.v
                  ));
            }
        }),
        (Oe.prototype.getMaskelement = function () {
          return this.maskElement;
        }),
        (Oe.prototype.createLayerSolidPath = function () {
          var t = "M0,0 ";
          return (
            (t += " h" + this.globalData.compSize.w),
            (t += " v" + this.globalData.compSize.h),
            (t += " h-" + this.globalData.compSize.w) +
              " v-" +
              this.globalData.compSize.h +
              " "
          );
        }),
        (Oe.prototype.drawPath = function (t, e, i) {
          var r,
            a,
            s = " M" + e.v[0][0] + "," + e.v[0][1];
          for (a = e._length, r = 1; r < a; r += 1)
            s +=
              " C" +
              e.o[r - 1][0] +
              "," +
              e.o[r - 1][1] +
              " " +
              e.i[r][0] +
              "," +
              e.i[r][1] +
              " " +
              e.v[r][0] +
              "," +
              e.v[r][1];
          if (
            (e.c &&
              a > 1 &&
              (s +=
                " C" +
                e.o[r - 1][0] +
                "," +
                e.o[r - 1][1] +
                " " +
                e.i[0][0] +
                "," +
                e.i[0][1] +
                " " +
                e.v[0][0] +
                "," +
                e.v[0][1]),
            i.lastPath !== s)
          ) {
            var n = "";
            i.elem &&
              (e.c && (n = t.inv ? this.solidPath + s : s),
              i.elem.setAttribute("d", n)),
              (i.lastPath = s);
          }
        }),
        (Oe.prototype.destroy = function () {
          (this.element = null),
            (this.globalData = null),
            (this.maskElement = null),
            (this.data = null),
            (this.masksProperties = null);
        });
      var je = (function () {
          var t = {
            createFilter: function (t, e) {
              var i = U("filter");
              return (
                i.setAttribute("id", t),
                !0 !== e &&
                  (i.setAttribute("filterUnits", "objectBoundingBox"),
                  i.setAttribute("x", "0%"),
                  i.setAttribute("y", "0%"),
                  i.setAttribute("width", "100%"),
                  i.setAttribute("height", "100%")),
                i
              );
            },
            createAlphaToLuminanceFilter: function () {
              var t = U("feColorMatrix");
              return (
                t.setAttribute("type", "matrix"),
                t.setAttribute("color-interpolation-filters", "sRGB"),
                t.setAttribute(
                  "values",
                  "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"
                ),
                t
              );
            },
          };
          return t;
        })(),
        Ye = (function () {
          var t = {
            maskType: !0,
            svgLumaHidden: !0,
            offscreenCanvas: "undefined" != typeof OffscreenCanvas,
          };
          return (
            (/MSIE 10/i.test(navigator.userAgent) ||
              /MSIE 9/i.test(navigator.userAgent) ||
              /rv:11.0/i.test(navigator.userAgent) ||
              /Edge\/\d./i.test(navigator.userAgent)) &&
              (t.maskType = !1),
            /firefox/i.test(navigator.userAgent) && (t.svgLumaHidden = !1),
            t
          );
        })(),
        He = {},
        Ve = "filter_result_";
      function Ke(t) {
        var e,
          i,
          a = "SourceGraphic",
          s = t.data.ef ? t.data.ef.length : 0,
          n = D(),
          o = je.createFilter(n, !0),
          h = 0;
        for (this.filters = [], e = 0; e < s; e += 1) {
          i = null;
          var l = t.data.ef[e].ty;
          He[l] &&
            ((i = new He[l].effect(
              o,
              t.effectsManager.effectElements[e],
              t,
              Ve + h,
              a
            )),
            (a = Ve + h),
            He[l].countsAsEffect && (h += 1)),
            i && this.filters.push(i);
        }
        h &&
          (t.globalData.defs.appendChild(o),
          t.layerElement.setAttribute("filter", "url(" + r() + "#" + n + ")")),
          this.filters.length && t.addRenderableComponent(this);
      }
      function ze() {}
      function qe() {}
      function We() {}
      function Je(t, e, i) {
        (this.assetData = e.getAssetData(t.refId)),
          this.assetData &&
            this.assetData.sid &&
            (this.assetData = e.slotManager.getProp(this.assetData)),
          this.initElement(t, e, i),
          (this.sourceRect = {
            top: 0,
            left: 0,
            width: this.assetData.w,
            height: this.assetData.h,
          });
      }
      function Ze(t, e) {
        (this.elem = t), (this.pos = e);
      }
      function Xe() {}
      (Ke.prototype.renderFrame = function (t) {
        var e,
          i = this.filters.length;
        for (e = 0; e < i; e += 1) this.filters[e].renderFrame(t);
      }),
        (Ke.prototype.getEffects = function (t) {
          var e,
            i = this.filters.length,
            r = [];
          for (e = 0; e < i; e += 1)
            this.filters[e].type === t && r.push(this.filters[e]);
          return r;
        }),
        (ze.prototype = {
          initRendererElement: function () {
            this.layerElement = U("g");
          },
          createContainerElements: function () {
            (this.matteElement = U("g")),
              (this.transformedElement = this.layerElement),
              (this.maskedElement = this.layerElement),
              (this._sizeChanged = !1);
            var t = null;
            if (this.data.td) {
              this.matteMasks = {};
              var e = U("g");
              e.setAttribute("id", this.layerId),
                e.appendChild(this.layerElement),
                (t = e),
                this.globalData.defs.appendChild(e);
            } else
              this.data.tt
                ? (this.matteElement.appendChild(this.layerElement),
                  (t = this.matteElement),
                  (this.baseElement = this.matteElement))
                : (this.baseElement = this.layerElement);
            if (
              (this.data.ln &&
                this.layerElement.setAttribute("id", this.data.ln),
              this.data.cl &&
                this.layerElement.setAttribute("class", this.data.cl),
              0 === this.data.ty && !this.data.hd)
            ) {
              var i = U("clipPath"),
                a = U("path");
              a.setAttribute(
                "d",
                "M0,0 L" +
                  this.data.w +
                  ",0 L" +
                  this.data.w +
                  "," +
                  this.data.h +
                  " L0," +
                  this.data.h +
                  "z"
              );
              var s = D();
              if (
                (i.setAttribute("id", s),
                i.appendChild(a),
                this.globalData.defs.appendChild(i),
                this.checkMasks())
              ) {
                var n = U("g");
                n.setAttribute("clip-path", "url(" + r() + "#" + s + ")"),
                  n.appendChild(this.layerElement),
                  (this.transformedElement = n),
                  t
                    ? t.appendChild(this.transformedElement)
                    : (this.baseElement = this.transformedElement);
              } else
                this.layerElement.setAttribute(
                  "clip-path",
                  "url(" + r() + "#" + s + ")"
                );
            }
            0 !== this.data.bm && this.setBlendMode();
          },
          renderElement: function () {
            this.finalTransform._localMatMdf &&
              this.transformedElement.setAttribute(
                "transform",
                this.finalTransform.localMat.to2dCSS()
              ),
              this.finalTransform._opMdf &&
                this.transformedElement.setAttribute(
                  "opacity",
                  this.finalTransform.localOpacity
                );
          },
          destroyBaseElement: function () {
            (this.layerElement = null),
              (this.matteElement = null),
              this.maskManager.destroy();
          },
          getBaseElement: function () {
            return this.data.hd ? null : this.baseElement;
          },
          createRenderableComponents: function () {
            (this.maskManager = new Oe(this.data, this, this.globalData)),
              (this.renderableEffectsManager = new Ke(this)),
              this.searchEffectTransforms();
          },
          getMatte: function (t) {
            if (
              (this.matteMasks || (this.matteMasks = {}), !this.matteMasks[t])
            ) {
              var e,
                i,
                a,
                s,
                n = this.layerId + "_" + t;
              if (1 === t || 3 === t) {
                var o = U("mask");
                o.setAttribute("id", n),
                  o.setAttribute("mask-type", 3 === t ? "luminance" : "alpha"),
                  (a = U("use")).setAttributeNS(
                    "http://www.w3.org/1999/xlink",
                    "href",
                    "#" + this.layerId
                  ),
                  o.appendChild(a),
                  this.globalData.defs.appendChild(o),
                  Ye.maskType ||
                    1 !== t ||
                    (o.setAttribute("mask-type", "luminance"),
                    (e = D()),
                    (i = je.createFilter(e)),
                    this.globalData.defs.appendChild(i),
                    i.appendChild(je.createAlphaToLuminanceFilter()),
                    (s = U("g")).appendChild(a),
                    o.appendChild(s),
                    s.setAttribute("filter", "url(" + r() + "#" + e + ")"));
              } else if (2 === t) {
                var h = U("mask");
                h.setAttribute("id", n), h.setAttribute("mask-type", "alpha");
                var l = U("g");
                h.appendChild(l), (e = D()), (i = je.createFilter(e));
                var A = U("feComponentTransfer");
                A.setAttribute("in", "SourceGraphic"), i.appendChild(A);
                var d = U("feFuncA");
                d.setAttribute("type", "table"),
                  d.setAttribute("tableValues", "1.0 0.0"),
                  A.appendChild(d),
                  this.globalData.defs.appendChild(i);
                var u = U("rect");
                u.setAttribute("width", this.comp.data.w),
                  u.setAttribute("height", this.comp.data.h),
                  u.setAttribute("x", "0"),
                  u.setAttribute("y", "0"),
                  u.setAttribute("fill", "#ffffff"),
                  u.setAttribute("opacity", "0"),
                  l.setAttribute("filter", "url(" + r() + "#" + e + ")"),
                  l.appendChild(u),
                  (a = U("use")).setAttributeNS(
                    "http://www.w3.org/1999/xlink",
                    "href",
                    "#" + this.layerId
                  ),
                  l.appendChild(a),
                  Ye.maskType ||
                    (h.setAttribute("mask-type", "luminance"),
                    i.appendChild(je.createAlphaToLuminanceFilter()),
                    (s = U("g")),
                    l.appendChild(u),
                    s.appendChild(this.layerElement),
                    l.appendChild(s)),
                  this.globalData.defs.appendChild(h);
              }
              this.matteMasks[t] = n;
            }
            return this.matteMasks[t];
          },
          setMatte: function (t) {
            this.matteElement &&
              this.matteElement.setAttribute(
                "mask",
                "url(" + r() + "#" + t + ")"
              );
          },
        }),
        (qe.prototype = {
          initHierarchy: function () {
            (this.hierarchy = []), (this._isParent = !1), this.checkParenting();
          },
          setHierarchy: function (t) {
            this.hierarchy = t;
          },
          setAsParent: function () {
            this._isParent = !0;
          },
          checkParenting: function () {
            void 0 !== this.data.parent &&
              this.comp.buildElementParenting(this, this.data.parent, []);
          },
        }),
        s(
          [
            Ie,
            n({
              initElement: function (t, e, i) {
                this.initFrame(),
                  this.initBaseData(t, e, i),
                  this.initTransform(t, e, i),
                  this.initHierarchy(),
                  this.initRenderable(),
                  this.initRendererElement(),
                  this.createContainerElements(),
                  this.createRenderableComponents(),
                  this.createContent(),
                  this.hide();
              },
              hide: function () {
                this.hidden ||
                  (this.isInRange && !this.isTransparent) ||
                  (((this.baseElement || this.layerElement).style.display =
                    "none"),
                  (this.hidden = !0));
              },
              show: function () {
                this.isInRange &&
                  !this.isTransparent &&
                  (this.data.hd ||
                    ((this.baseElement || this.layerElement).style.display =
                      "block"),
                  (this.hidden = !1),
                  (this._isFirstFrame = !0));
              },
              renderFrame: function () {
                this.data.hd ||
                  this.hidden ||
                  (this.renderTransform(),
                  this.renderRenderable(),
                  this.renderLocalTransform(),
                  this.renderElement(),
                  this.renderInnerContent(),
                  this._isFirstFrame && (this._isFirstFrame = !1));
              },
              renderInnerContent: function () {},
              prepareFrame: function (t) {
                (this._mdf = !1),
                  this.prepareRenderableFrame(t),
                  this.prepareProperties(t, this.isInRange),
                  this.checkTransparency();
              },
              destroy: function () {
                (this.innerElem = null), this.destroyBaseElement();
              },
            }),
          ],
          We
        ),
        s([Me, Ge, ze, qe, Fe, We], Je),
        (Je.prototype.createContent = function () {
          var t = this.globalData.getAssetsPath(this.assetData);
          (this.innerElem = U("image")),
            this.innerElem.setAttribute("width", this.assetData.w + "px"),
            this.innerElem.setAttribute("height", this.assetData.h + "px"),
            this.innerElem.setAttribute(
              "preserveAspectRatio",
              this.assetData.pr ||
                this.globalData.renderConfig.imagePreserveAspectRatio
            ),
            this.innerElem.setAttributeNS(
              "http://www.w3.org/1999/xlink",
              "href",
              t
            ),
            this.layerElement.appendChild(this.innerElem);
        }),
        (Je.prototype.sourceRectAtTime = function () {
          return this.sourceRect;
        }),
        (Xe.prototype = {
          addShapeToModifiers: function (t) {
            var e,
              i = this.shapeModifiers.length;
            for (e = 0; e < i; e += 1) this.shapeModifiers[e].addShape(t);
          },
          isShapeInAnimatedModifiers: function (t) {
            for (var e = this.shapeModifiers.length; 0 < e; )
              if (this.shapeModifiers[0].isAnimatedWithShape(t)) return !0;
            return !1;
          },
          renderModifiers: function () {
            if (this.shapeModifiers.length) {
              var t,
                e = this.shapes.length;
              for (t = 0; t < e; t += 1) this.shapes[t].sh.reset();
              for (
                t = (e = this.shapeModifiers.length) - 1;
                t >= 0 &&
                !this.shapeModifiers[t].processShapes(this._isFirstFrame);
                t -= 1
              );
            }
          },
          searchProcessedElement: function (t) {
            for (var e = this.processedElements, i = 0, r = e.length; i < r; ) {
              if (e[i].elem === t) return e[i].pos;
              i += 1;
            }
            return 0;
          },
          addProcessedElement: function (t, e) {
            for (var i = this.processedElements, r = i.length; r; )
              if (i[(r -= 1)].elem === t) return void (i[r].pos = e);
            i.push(new Ze(t, e));
          },
          prepareFrame: function (t) {
            this.prepareRenderableFrame(t),
              this.prepareProperties(t, this.isInRange);
          },
        });
      var $e = { 1: "butt", 2: "round", 3: "square" },
        ti = { 1: "miter", 2: "round", 3: "bevel" };
      function ei(t, e, i) {
        (this.caches = []),
          (this.styles = []),
          (this.transformers = t),
          (this.lStr = ""),
          (this.sh = i),
          (this.lvl = e),
          (this._isAnimated = !!i.k);
        for (var r = 0, a = t.length; r < a; ) {
          if (t[r].mProps.dynamicProperties.length) {
            this._isAnimated = !0;
            break;
          }
          r += 1;
        }
      }
      function ii(t, e) {
        (this.data = t),
          (this.type = t.ty),
          (this.d = ""),
          (this.lvl = e),
          (this._mdf = !1),
          (this.closed = !0 === t.hd),
          (this.pElem = U("path")),
          (this.msElem = null);
      }
      function ri(t, e, i, r) {
        var a;
        (this.elem = t),
          (this.frameId = -1),
          (this.dataProps = l(e.length)),
          (this.renderer = i),
          (this.k = !1),
          (this.dashStr = ""),
          (this.dashArray = h("float32", e.length ? e.length - 1 : 0)),
          (this.dashoffset = h("float32", 1)),
          this.initDynamicPropertyContainer(r);
        var s,
          n = e.length || 0;
        for (a = 0; a < n; a += 1)
          (s = gt.getProp(t, e[a].v, 0, 0, this)),
            (this.k = s.k || this.k),
            (this.dataProps[a] = { n: e[a].n, p: s });
        this.k || this.getValue(!0), (this._isAnimated = this.k);
      }
      function ai(t, e, i) {
        this.initDynamicPropertyContainer(t),
          (this.getValue = this.iterateDynamicProperties),
          (this.o = gt.getProp(t, e.o, 0, 0.01, this)),
          (this.w = gt.getProp(t, e.w, 0, null, this)),
          (this.d = new ri(t, e.d || {}, "svg", this)),
          (this.c = gt.getProp(t, e.c, 1, 255, this)),
          (this.style = i),
          (this._isAnimated = !!this._isAnimated);
      }
      function si(t, e, i) {
        this.initDynamicPropertyContainer(t),
          (this.getValue = this.iterateDynamicProperties),
          (this.o = gt.getProp(t, e.o, 0, 0.01, this)),
          (this.c = gt.getProp(t, e.c, 1, 255, this)),
          (this.style = i);
      }
      function ni(t, e, i) {
        this.initDynamicPropertyContainer(t),
          (this.getValue = this.iterateDynamicProperties),
          (this.style = i);
      }
      function oi(t, e, i) {
        (this.data = e), (this.c = h("uint8c", 4 * e.p));
        var r = e.k.k[0].s
          ? e.k.k[0].s.length - 4 * e.p
          : e.k.k.length - 4 * e.p;
        (this.o = h("float32", r)),
          (this._cmdf = !1),
          (this._omdf = !1),
          (this._collapsable = this.checkCollapsable()),
          (this._hasOpacity = r),
          this.initDynamicPropertyContainer(i),
          (this.prop = gt.getProp(t, e.k, 1, null, this)),
          (this.k = this.prop.k),
          this.getValue(!0);
      }
      function hi(t, e, i) {
        this.initDynamicPropertyContainer(t),
          (this.getValue = this.iterateDynamicProperties),
          this.initGradientData(t, e, i);
      }
      function li(t, e, i) {
        this.initDynamicPropertyContainer(t),
          (this.getValue = this.iterateDynamicProperties),
          (this.w = gt.getProp(t, e.w, 0, null, this)),
          (this.d = new ri(t, e.d || {}, "svg", this)),
          this.initGradientData(t, e, i),
          (this._isAnimated = !!this._isAnimated);
      }
      function Ai() {
        (this.it = []), (this.prevViewData = []), (this.gr = U("g"));
      }
      function di(t, e, i) {
        (this.transform = { mProps: t, op: e, container: i }),
          (this.elements = []),
          (this._isAnimated =
            this.transform.mProps.dynamicProperties.length ||
            this.transform.op.effectsSequence.length);
      }
      (ei.prototype.setAsAnimated = function () {
        this._isAnimated = !0;
      }),
        (ii.prototype.reset = function () {
          (this.d = ""), (this._mdf = !1);
        }),
        (ri.prototype.getValue = function (t) {
          if (
            (this.elem.globalData.frameId !== this.frameId || t) &&
            ((this.frameId = this.elem.globalData.frameId),
            this.iterateDynamicProperties(),
            (this._mdf = this._mdf || t),
            this._mdf)
          ) {
            var e = 0,
              i = this.dataProps.length;
            for (
              "svg" === this.renderer && (this.dashStr = ""), e = 0;
              e < i;
              e += 1
            )
              "o" !== this.dataProps[e].n
                ? "svg" === this.renderer
                  ? (this.dashStr += " " + this.dataProps[e].p.v)
                  : (this.dashArray[e] = this.dataProps[e].p.v)
                : (this.dashoffset[0] = this.dataProps[e].p.v);
          }
        }),
        s([ft], ri),
        s([ft], ai),
        s([ft], si),
        s([ft], ni),
        (oi.prototype.comparePoints = function (t, e) {
          for (var i = 0, r = this.o.length / 2; i < r; ) {
            if (Math.abs(t[4 * i] - t[4 * e + 2 * i]) > 0.01) return !1;
            i += 1;
          }
          return !0;
        }),
        (oi.prototype.checkCollapsable = function () {
          if (this.o.length / 2 != this.c.length / 4) return !1;
          if (this.data.k.k[0].s)
            for (var t = 0, e = this.data.k.k.length; t < e; ) {
              if (!this.comparePoints(this.data.k.k[t].s, this.data.p))
                return !1;
              t += 1;
            }
          else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
          return !0;
        }),
        (oi.prototype.getValue = function (t) {
          if (
            (this.prop.getValue(),
            (this._mdf = !1),
            (this._cmdf = !1),
            (this._omdf = !1),
            this.prop._mdf || t)
          ) {
            var e,
              i,
              r,
              a = 4 * this.data.p;
            for (e = 0; e < a; e += 1)
              (i = e % 4 == 0 ? 100 : 255),
                (r = Math.round(this.prop.v[e] * i)),
                this.c[e] !== r && ((this.c[e] = r), (this._cmdf = !t));
            if (this.o.length)
              for (a = this.prop.v.length, e = 4 * this.data.p; e < a; e += 1)
                (i = e % 2 == 0 ? 100 : 1),
                  (r =
                    e % 2 == 0
                      ? Math.round(100 * this.prop.v[e])
                      : this.prop.v[e]),
                  this.o[e - 4 * this.data.p] !== r &&
                    ((this.o[e - 4 * this.data.p] = r), (this._omdf = !t));
            this._mdf = !t;
          }
        }),
        s([ft], oi),
        (hi.prototype.initGradientData = function (t, e, i) {
          (this.o = gt.getProp(t, e.o, 0, 0.01, this)),
            (this.s = gt.getProp(t, e.s, 1, null, this)),
            (this.e = gt.getProp(t, e.e, 1, null, this)),
            (this.h = gt.getProp(t, e.h || { k: 0 }, 0, 0.01, this)),
            (this.a = gt.getProp(t, e.a || { k: 0 }, 0, y, this)),
            (this.g = new oi(t, e.g, this)),
            (this.style = i),
            (this.stops = []),
            this.setGradientData(i.pElem, e),
            this.setGradientOpacity(e, i),
            (this._isAnimated = !!this._isAnimated);
        }),
        (hi.prototype.setGradientData = function (t, e) {
          var i = D(),
            a = U(1 === e.t ? "linearGradient" : "radialGradient");
          a.setAttribute("id", i),
            a.setAttribute("spreadMethod", "pad"),
            a.setAttribute("gradientUnits", "userSpaceOnUse");
          var s,
            n,
            o,
            h = [];
          for (o = 4 * e.g.p, n = 0; n < o; n += 4)
            (s = U("stop")), a.appendChild(s), h.push(s);
          t.setAttribute(
            "gf" === e.ty ? "fill" : "stroke",
            "url(" + r() + "#" + i + ")"
          ),
            (this.gf = a),
            (this.cst = h);
        }),
        (hi.prototype.setGradientOpacity = function (t, e) {
          if (this.g._hasOpacity && !this.g._collapsable) {
            var i,
              a,
              s,
              n = U("mask"),
              o = U("path");
            n.appendChild(o);
            var h = D(),
              l = D();
            n.setAttribute("id", l);
            var A = U(1 === t.t ? "linearGradient" : "radialGradient");
            A.setAttribute("id", h),
              A.setAttribute("spreadMethod", "pad"),
              A.setAttribute("gradientUnits", "userSpaceOnUse"),
              (s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length);
            var d = this.stops;
            for (a = 4 * t.g.p; a < s; a += 2)
              (i = U("stop")).setAttribute("stop-color", "rgb(255,255,255)"),
                A.appendChild(i),
                d.push(i);
            o.setAttribute(
              "gf" === t.ty ? "fill" : "stroke",
              "url(" + r() + "#" + h + ")"
            ),
              "gs" === t.ty &&
                (o.setAttribute("stroke-linecap", $e[t.lc || 2]),
                o.setAttribute("stroke-linejoin", ti[t.lj || 2]),
                1 === t.lj && o.setAttribute("stroke-miterlimit", t.ml)),
              (this.of = A),
              (this.ms = n),
              (this.ost = d),
              (this.maskId = l),
              (e.msElem = o);
          }
        }),
        s([ft], hi),
        s([hi, ft], li);
      var ui = function (t, e, i, r) {
          if (0 === e) return "";
          var a,
            s = t.o,
            n = t.i,
            o = t.v,
            h = " M" + r.applyToPointStringified(o[0][0], o[0][1]);
          for (a = 1; a < e; a += 1)
            h +=
              " C" +
              r.applyToPointStringified(s[a - 1][0], s[a - 1][1]) +
              " " +
              r.applyToPointStringified(n[a][0], n[a][1]) +
              " " +
              r.applyToPointStringified(o[a][0], o[a][1]);
          return (
            i &&
              e &&
              ((h +=
                " C" +
                r.applyToPointStringified(s[a - 1][0], s[a - 1][1]) +
                " " +
                r.applyToPointStringified(n[0][0], n[0][1]) +
                " " +
                r.applyToPointStringified(o[0][0], o[0][1])),
              (h += "z")),
            h
          );
        },
        ci = (function () {
          var t = new Qt(),
            e = new Qt();
          function i(t, e, i) {
            (i || e.transform.op._mdf) &&
              e.transform.container.setAttribute("opacity", e.transform.op.v),
              (i || e.transform.mProps._mdf) &&
                e.transform.container.setAttribute(
                  "transform",
                  e.transform.mProps.v.to2dCSS()
                );
          }
          function r() {}
          function a(i, r, a) {
            var s,
              n,
              o,
              h,
              l,
              A,
              d,
              u,
              c,
              g,
              f = r.styles.length,
              p = r.lvl;
            for (A = 0; A < f; A += 1) {
              if (((h = r.sh._mdf || a), r.styles[A].lvl < p)) {
                for (
                  u = e.reset(),
                    c = p - r.styles[A].lvl,
                    g = r.transformers.length - 1;
                  !h && c > 0;

                )
                  (h = r.transformers[g].mProps._mdf || h), (c -= 1), (g -= 1);
                if (h)
                  for (
                    c = p - r.styles[A].lvl, g = r.transformers.length - 1;
                    c > 0;

                  )
                    u.multiply(r.transformers[g].mProps.v), (c -= 1), (g -= 1);
              } else u = t;
              if (((n = (d = r.sh.paths)._length), h)) {
                for (o = "", s = 0; s < n; s += 1)
                  (l = d.shapes[s]) &&
                    l._length &&
                    (o += ui(l, l._length, l.c, u));
                r.caches[A] = o;
              } else o = r.caches[A];
              (r.styles[A].d += !0 === i.hd ? "" : o),
                (r.styles[A]._mdf = h || r.styles[A]._mdf);
            }
          }
          function s(t, e, i) {
            var r = e.style;
            (e.c._mdf || i) &&
              r.pElem.setAttribute(
                "fill",
                "rgb(" +
                  m(e.c.v[0]) +
                  "," +
                  m(e.c.v[1]) +
                  "," +
                  m(e.c.v[2]) +
                  ")"
              ),
              (e.o._mdf || i) && r.pElem.setAttribute("fill-opacity", e.o.v);
          }
          function n(t, e, i) {
            o(t, e, i), h(t, e, i);
          }
          function o(t, e, i) {
            var r,
              a,
              s,
              n,
              o,
              h = e.gf,
              l = e.g._hasOpacity,
              A = e.s.v,
              d = e.e.v;
            if (e.o._mdf || i) {
              var u = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
              e.style.pElem.setAttribute(u, e.o.v);
            }
            if (e.s._mdf || i) {
              var c = 1 === t.t ? "x1" : "cx",
                g = "x1" === c ? "y1" : "cy";
              h.setAttribute(c, A[0]),
                h.setAttribute(g, A[1]),
                l &&
                  !e.g._collapsable &&
                  (e.of.setAttribute(c, A[0]), e.of.setAttribute(g, A[1]));
            }
            if (e.g._cmdf || i) {
              r = e.cst;
              var f = e.g.c;
              for (s = r.length, a = 0; a < s; a += 1)
                (n = r[a]).setAttribute("offset", f[4 * a] + "%"),
                  n.setAttribute(
                    "stop-color",
                    "rgb(" +
                      f[4 * a + 1] +
                      "," +
                      f[4 * a + 2] +
                      "," +
                      f[4 * a + 3] +
                      ")"
                  );
            }
            if (l && (e.g._omdf || i)) {
              var p = e.g.o;
              for (
                s = (r = e.g._collapsable ? e.cst : e.ost).length, a = 0;
                a < s;
                a += 1
              )
                (n = r[a]),
                  e.g._collapsable || n.setAttribute("offset", p[2 * a] + "%"),
                  n.setAttribute("stop-opacity", p[2 * a + 1]);
            }
            if (1 === t.t)
              (e.e._mdf || i) &&
                (h.setAttribute("x2", d[0]),
                h.setAttribute("y2", d[1]),
                l &&
                  !e.g._collapsable &&
                  (e.of.setAttribute("x2", d[0]),
                  e.of.setAttribute("y2", d[1])));
            else if (
              ((e.s._mdf || e.e._mdf || i) &&
                ((o = Math.sqrt(
                  Math.pow(A[0] - d[0], 2) + Math.pow(A[1] - d[1], 2)
                )),
                h.setAttribute("r", o),
                l && !e.g._collapsable && e.of.setAttribute("r", o)),
              e.e._mdf || e.h._mdf || e.a._mdf || i)
            ) {
              o ||
                (o = Math.sqrt(
                  Math.pow(A[0] - d[0], 2) + Math.pow(A[1] - d[1], 2)
                ));
              var m = Math.atan2(d[1] - A[1], d[0] - A[0]),
                v = e.h.v;
              v >= 1 ? (v = 0.99) : v <= -1 && (v = -0.99);
              var E = o * v,
                y = Math.cos(m + e.a.v) * E + A[0],
                I = Math.sin(m + e.a.v) * E + A[1];
              h.setAttribute("fx", y),
                h.setAttribute("fy", I),
                l &&
                  !e.g._collapsable &&
                  (e.of.setAttribute("fx", y), e.of.setAttribute("fy", I));
            }
          }
          function h(t, e, i) {
            var r = e.style,
              a = e.d;
            a &&
              (a._mdf || i) &&
              a.dashStr &&
              (r.pElem.setAttribute("stroke-dasharray", a.dashStr),
              r.pElem.setAttribute("stroke-dashoffset", a.dashoffset[0])),
              e.c &&
                (e.c._mdf || i) &&
                r.pElem.setAttribute(
                  "stroke",
                  "rgb(" +
                    m(e.c.v[0]) +
                    "," +
                    m(e.c.v[1]) +
                    "," +
                    m(e.c.v[2]) +
                    ")"
                ),
              (e.o._mdf || i) && r.pElem.setAttribute("stroke-opacity", e.o.v),
              (e.w._mdf || i) &&
                (r.pElem.setAttribute("stroke-width", e.w.v),
                r.msElem && r.msElem.setAttribute("stroke-width", e.w.v));
          }
          return {
            createRenderFunction: function (t) {
              switch (t.ty) {
                case "fl":
                  return s;
                case "gf":
                  return o;
                case "gs":
                  return n;
                case "st":
                  return h;
                case "sh":
                case "el":
                case "rc":
                case "sr":
                  return a;
                case "tr":
                  return i;
                case "no":
                  return r;
                default:
                  return null;
              }
            },
          };
        })();
      function gi(t, e, i) {
        (this.shapes = []),
          (this.shapesData = t.shapes),
          (this.stylesList = []),
          (this.shapeModifiers = []),
          (this.itemsData = []),
          (this.processedElements = []),
          (this.animatedContents = []),
          this.initElement(t, e, i),
          (this.prevViewData = []);
      }
      function fi(t, e, i, r, a, s) {
        (this.o = t),
          (this.sw = e),
          (this.sc = i),
          (this.fc = r),
          (this.m = a),
          (this.p = s),
          (this._mdf = { o: !0, sw: !!e, sc: !!i, fc: !!r, m: !0, p: !0 });
      }
      function pi(t, e) {
        (this._frameId = i),
          (this.pv = ""),
          (this.v = ""),
          (this.kf = !1),
          (this._isFirstFrame = !0),
          (this._mdf = !1),
          e.d && e.d.sid && (e.d = t.globalData.slotManager.getProp(e.d)),
          (this.data = e),
          (this.elem = t),
          (this.comp = this.elem.comp),
          (this.keysIndex = 0),
          (this.canResize = !1),
          (this.minimumFontSize = 1),
          (this.effectsSequence = []),
          (this.currentData = {
            ascent: 0,
            boxWidth: this.defaultBoxWidth,
            f: "",
            fStyle: "",
            fWeight: "",
            fc: "",
            j: "",
            justifyOffset: "",
            l: [],
            lh: 0,
            lineWidths: [],
            ls: "",
            of: "",
            s: "",
            sc: "",
            sw: 0,
            t: 0,
            tr: 0,
            sz: 0,
            ps: null,
            fillColorAnim: !1,
            strokeColorAnim: !1,
            strokeWidthAnim: !1,
            yOffset: 0,
            finalSize: 0,
            finalText: [],
            finalLineHeight: 0,
            __complete: !1,
          }),
          this.copyData(this.currentData, this.data.d.k[0].s),
          this.searchProperty() || this.completeTextData(this.currentData);
      }
      s([Me, Ge, ze, Xe, qe, Fe, We], gi),
        (gi.prototype.initSecondaryElement = function () {}),
        (gi.prototype.identityMatrix = new Qt()),
        (gi.prototype.buildExpressionInterface = function () {}),
        (gi.prototype.createContent = function () {
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            this.layerElement,
            0,
            [],
            !0
          ),
            this.filterUniqueShapes();
        }),
        (gi.prototype.filterUniqueShapes = function () {
          var t,
            e,
            i,
            r,
            a = this.shapes.length,
            s = this.stylesList.length,
            n = [],
            o = !1;
          for (i = 0; i < s; i += 1) {
            for (
              r = this.stylesList[i], o = !1, n.length = 0, t = 0;
              t < a;
              t += 1
            )
              -1 !== (e = this.shapes[t]).styles.indexOf(r) &&
                (n.push(e), (o = e._isAnimated || o));
            n.length > 1 && o && this.setShapesAsAnimated(n);
          }
        }),
        (gi.prototype.setShapesAsAnimated = function (t) {
          var e,
            i = t.length;
          for (e = 0; e < i; e += 1) t[e].setAsAnimated();
        }),
        (gi.prototype.createStyleElement = function (t, e) {
          var i,
            a = new ii(t, e),
            s = a.pElem;
          return (
            "st" === t.ty
              ? (i = new ai(this, t, a))
              : "fl" === t.ty
              ? (i = new si(this, t, a))
              : "gf" === t.ty || "gs" === t.ty
              ? ((i = new ("gf" === t.ty ? hi : li)(this, t, a)),
                this.globalData.defs.appendChild(i.gf),
                i.maskId &&
                  (this.globalData.defs.appendChild(i.ms),
                  this.globalData.defs.appendChild(i.of),
                  s.setAttribute("mask", "url(" + r() + "#" + i.maskId + ")")))
              : "no" === t.ty && (i = new ni(this, t, a)),
            ("st" !== t.ty && "gs" !== t.ty) ||
              (s.setAttribute("stroke-linecap", $e[t.lc || 2]),
              s.setAttribute("stroke-linejoin", ti[t.lj || 2]),
              s.setAttribute("fill-opacity", "0"),
              1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)),
            2 === t.r && s.setAttribute("fill-rule", "evenodd"),
            t.ln && s.setAttribute("id", t.ln),
            t.cl && s.setAttribute("class", t.cl),
            t.bm && (s.style["mix-blend-mode"] = Be(t.bm)),
            this.stylesList.push(a),
            this.addToAnimatedContents(t, i),
            i
          );
        }),
        (gi.prototype.createGroupElement = function (t) {
          var e = new Ai();
          return (
            t.ln && e.gr.setAttribute("id", t.ln),
            t.cl && e.gr.setAttribute("class", t.cl),
            t.bm && (e.gr.style["mix-blend-mode"] = Be(t.bm)),
            e
          );
        }),
        (gi.prototype.createTransformElement = function (t, e) {
          var i = Ot.getTransformProperty(this, t, this),
            r = new di(i, i.o, e);
          return this.addToAnimatedContents(t, r), r;
        }),
        (gi.prototype.createShapeElement = function (t, e, i) {
          var r = 4;
          "rc" === t.ty
            ? (r = 5)
            : "el" === t.ty
            ? (r = 6)
            : "sr" === t.ty && (r = 7);
          var a = new ei(e, i, wt.getShapeProp(this, t, r, this));
          return (
            this.shapes.push(a),
            this.addShapeToModifiers(a),
            this.addToAnimatedContents(t, a),
            a
          );
        }),
        (gi.prototype.addToAnimatedContents = function (t, e) {
          for (var i = 0, r = this.animatedContents.length; i < r; ) {
            if (this.animatedContents[i].element === e) return;
            i += 1;
          }
          this.animatedContents.push({
            fn: ci.createRenderFunction(t),
            element: e,
            data: t,
          });
        }),
        (gi.prototype.setElementStyles = function (t) {
          var e,
            i = t.styles,
            r = this.stylesList.length;
          for (e = 0; e < r; e += 1)
            this.stylesList[e].closed || i.push(this.stylesList[e]);
        }),
        (gi.prototype.reloadShapes = function () {
          var t;
          this._isFirstFrame = !0;
          var e = this.itemsData.length;
          for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
          for (
            this.searchShapes(
              this.shapesData,
              this.itemsData,
              this.prevViewData,
              this.layerElement,
              0,
              [],
              !0
            ),
              this.filterUniqueShapes(),
              e = this.dynamicProperties.length,
              t = 0;
            t < e;
            t += 1
          )
            this.dynamicProperties[t].getValue();
          this.renderModifiers();
        }),
        (gi.prototype.searchShapes = function (t, e, i, r, a, s, n) {
          var o,
            h,
            l,
            A,
            d,
            u,
            c = [].concat(s),
            g = t.length - 1,
            f = [],
            p = [];
          for (o = g; o >= 0; o -= 1) {
            if (
              ((u = this.searchProcessedElement(t[o]))
                ? (e[o] = i[u - 1])
                : (t[o]._render = n),
              "fl" === t[o].ty ||
                "st" === t[o].ty ||
                "gf" === t[o].ty ||
                "gs" === t[o].ty ||
                "no" === t[o].ty)
            )
              u
                ? (e[o].style.closed = !1)
                : (e[o] = this.createStyleElement(t[o], a)),
                t[o]._render &&
                  e[o].style.pElem.parentNode !== r &&
                  r.appendChild(e[o].style.pElem),
                f.push(e[o].style);
            else if ("gr" === t[o].ty) {
              if (u)
                for (l = e[o].it.length, h = 0; h < l; h += 1)
                  e[o].prevViewData[h] = e[o].it[h];
              else e[o] = this.createGroupElement(t[o]);
              this.searchShapes(
                t[o].it,
                e[o].it,
                e[o].prevViewData,
                e[o].gr,
                a + 1,
                c,
                n
              ),
                t[o]._render &&
                  e[o].gr.parentNode !== r &&
                  r.appendChild(e[o].gr);
            } else
              "tr" === t[o].ty
                ? (u || (e[o] = this.createTransformElement(t[o], r)),
                  (A = e[o].transform),
                  c.push(A))
                : "sh" === t[o].ty ||
                  "rc" === t[o].ty ||
                  "el" === t[o].ty ||
                  "sr" === t[o].ty
                ? (u || (e[o] = this.createShapeElement(t[o], c, a)),
                  this.setElementStyles(e[o]))
                : "tm" === t[o].ty ||
                  "rd" === t[o].ty ||
                  "ms" === t[o].ty ||
                  "pb" === t[o].ty ||
                  "zz" === t[o].ty ||
                  "op" === t[o].ty
                ? (u
                    ? ((d = e[o]).closed = !1)
                    : ((d = _t.getModifier(t[o].ty)).init(this, t[o]),
                      (e[o] = d),
                      this.shapeModifiers.push(d)),
                  p.push(d))
                : "rp" === t[o].ty &&
                  (u
                    ? ((d = e[o]).closed = !0)
                    : ((d = _t.getModifier(t[o].ty)),
                      (e[o] = d),
                      d.init(this, t, o, e),
                      this.shapeModifiers.push(d),
                      (n = !1)),
                  p.push(d));
            this.addProcessedElement(t[o], o + 1);
          }
          for (g = f.length, o = 0; o < g; o += 1) f[o].closed = !0;
          for (g = p.length, o = 0; o < g; o += 1) p[o].closed = !0;
        }),
        (gi.prototype.renderInnerContent = function () {
          var t;
          this.renderModifiers();
          var e = this.stylesList.length;
          for (t = 0; t < e; t += 1) this.stylesList[t].reset();
          for (this.renderShape(), t = 0; t < e; t += 1)
            (this.stylesList[t]._mdf || this._isFirstFrame) &&
              (this.stylesList[t].msElem &&
                (this.stylesList[t].msElem.setAttribute(
                  "d",
                  this.stylesList[t].d
                ),
                (this.stylesList[t].d = "M0 0" + this.stylesList[t].d)),
              this.stylesList[t].pElem.setAttribute(
                "d",
                this.stylesList[t].d || "M0 0"
              ));
        }),
        (gi.prototype.renderShape = function () {
          var t,
            e,
            i = this.animatedContents.length;
          for (t = 0; t < i; t += 1)
            (e = this.animatedContents[t]),
              (this._isFirstFrame || e.element._isAnimated) &&
                !0 !== e.data &&
                e.fn(e.data, e.element, this._isFirstFrame);
        }),
        (gi.prototype.destroy = function () {
          this.destroyBaseElement(),
            (this.shapesData = null),
            (this.itemsData = null);
        }),
        (fi.prototype.update = function (t, e, i, r, a, s) {
          (this._mdf.o = !1),
            (this._mdf.sw = !1),
            (this._mdf.sc = !1),
            (this._mdf.fc = !1),
            (this._mdf.m = !1),
            (this._mdf.p = !1);
          var n = !1;
          return (
            this.o !== t && ((this.o = t), (this._mdf.o = !0), (n = !0)),
            this.sw !== e && ((this.sw = e), (this._mdf.sw = !0), (n = !0)),
            this.sc !== i && ((this.sc = i), (this._mdf.sc = !0), (n = !0)),
            this.fc !== r && ((this.fc = r), (this._mdf.fc = !0), (n = !0)),
            this.m !== a && ((this.m = a), (this._mdf.m = !0), (n = !0)),
            !s.length ||
              (this.p[0] === s[0] &&
                this.p[1] === s[1] &&
                this.p[4] === s[4] &&
                this.p[5] === s[5] &&
                this.p[12] === s[12] &&
                this.p[13] === s[13]) ||
              ((this.p = s), (this._mdf.p = !0), (n = !0)),
            n
          );
        }),
        (pi.prototype.defaultBoxWidth = [0, 0]),
        (pi.prototype.copyData = function (t, e) {
          for (var i in e)
            Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
          return t;
        }),
        (pi.prototype.setCurrentData = function (t) {
          t.__complete || this.completeTextData(t),
            (this.currentData = t),
            (this.currentData.boxWidth =
              this.currentData.boxWidth || this.defaultBoxWidth),
            (this._mdf = !0);
        }),
        (pi.prototype.searchProperty = function () {
          return this.searchKeyframes();
        }),
        (pi.prototype.searchKeyframes = function () {
          return (
            (this.kf = this.data.d.k.length > 1),
            this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
            this.kf
          );
        }),
        (pi.prototype.addEffect = function (t) {
          this.effectsSequence.push(t), this.elem.addDynamicProperty(this);
        }),
        (pi.prototype.getValue = function (t) {
          if (
            (this.elem.globalData.frameId !== this.frameId &&
              this.effectsSequence.length) ||
            t
          ) {
            this.currentData.t = this.data.d.k[this.keysIndex].s.t;
            var e = this.currentData,
              i = this.keysIndex;
            if (this.lock) this.setCurrentData(this.currentData);
            else {
              var r;
              (this.lock = !0), (this._mdf = !1);
              var a = this.effectsSequence.length,
                s = t || this.data.d.k[this.keysIndex].s;
              for (r = 0; r < a; r += 1)
                s =
                  i !== this.keysIndex
                    ? this.effectsSequence[r](s, s.t)
                    : this.effectsSequence[r](this.currentData, s.t);
              e !== s && this.setCurrentData(s),
                (this.v = this.currentData),
                (this.pv = this.v),
                (this.lock = !1),
                (this.frameId = this.elem.globalData.frameId);
            }
          }
        }),
        (pi.prototype.getKeyframeValue = function () {
          for (
            var t = this.data.d.k,
              e = this.elem.comp.renderedFrame,
              i = 0,
              r = t.length;
            i <= r - 1 && !(i === r - 1 || t[i + 1].t > e);

          )
            i += 1;
          return (
            this.keysIndex !== i && (this.keysIndex = i),
            this.data.d.k[this.keysIndex].s
          );
        }),
        (pi.prototype.buildFinalText = function (t) {
          for (
            var e, i, r = [], a = 0, s = t.length, n = !1, o = !1, h = "";
            a < s;

          )
            (n = o),
              (o = !1),
              (e = t.charCodeAt(a)),
              (h = t.charAt(a)),
              Ee.isCombinedCharacter(e)
                ? (n = !0)
                : e >= 55296 && e <= 56319
                ? Ee.isRegionalFlag(t, a)
                  ? (h = t.substr(a, 14))
                  : (i = t.charCodeAt(a + 1)) >= 56320 &&
                    i <= 57343 &&
                    (Ee.isModifier(e, i)
                      ? ((h = t.substr(a, 2)), (n = !0))
                      : (h = Ee.isFlagEmoji(t.substr(a, 4))
                          ? t.substr(a, 4)
                          : t.substr(a, 2)))
                : e > 56319
                ? ((i = t.charCodeAt(a + 1)),
                  Ee.isVariationSelector(e) && (n = !0))
                : Ee.isZeroWidthJoiner(e) && ((n = !0), (o = !0)),
              n ? ((r[r.length - 1] += h), (n = !1)) : r.push(h),
              (a += h.length);
          return r;
        }),
        (pi.prototype.completeTextData = function (t) {
          t.__complete = !0;
          var e,
            i,
            r,
            a,
            s,
            n,
            o,
            h = this.elem.globalData.fontManager,
            l = this.data,
            A = [],
            d = 0,
            u = l.m.g,
            c = 0,
            g = 0,
            f = 0,
            p = [],
            m = 0,
            v = 0,
            E = h.getFontByName(t.f),
            y = 0,
            I = ve(E);
          (t.fWeight = I.weight),
            (t.fStyle = I.style),
            (t.finalSize = t.s),
            (t.finalText = this.buildFinalText(t.t)),
            (i = t.finalText.length),
            (t.finalLineHeight = t.lh);
          var C,
            B = (t.tr / 1e3) * t.finalSize;
          if (t.sz)
            for (var k, x, w = !0, Q = t.sz[0], S = t.sz[1]; w; ) {
              (k = 0),
                (m = 0),
                (i = (x = this.buildFinalText(t.t)).length),
                (B = (t.tr / 1e3) * t.finalSize);
              var b = -1;
              for (e = 0; e < i; e += 1)
                (C = x[e].charCodeAt(0)),
                  (r = !1),
                  " " === x[e]
                    ? (b = e)
                    : (13 !== C && 3 !== C) ||
                      ((m = 0),
                      (r = !0),
                      (k += t.finalLineHeight || 1.2 * t.finalSize)),
                  h.chars
                    ? ((o = h.getCharData(x[e], E.fStyle, E.fFamily)),
                      (y = r ? 0 : (o.w * t.finalSize) / 100))
                    : (y = h.measureText(x[e], t.f, t.finalSize)),
                  m + y > Q && " " !== x[e]
                    ? (-1 === b ? (i += 1) : (e = b),
                      (k += t.finalLineHeight || 1.2 * t.finalSize),
                      x.splice(e, b === e ? 1 : 0, "\r"),
                      (b = -1),
                      (m = 0))
                    : ((m += y), (m += B));
              (k += (E.ascent * t.finalSize) / 100),
                this.canResize && t.finalSize > this.minimumFontSize && S < k
                  ? ((t.finalSize -= 1),
                    (t.finalLineHeight = (t.finalSize * t.lh) / t.s))
                  : ((t.finalText = x), (i = t.finalText.length), (w = !1));
            }
          (m = -B), (y = 0);
          var D,
            R = 0;
          for (e = 0; e < i; e += 1)
            if (
              ((r = !1),
              13 === (C = (D = t.finalText[e]).charCodeAt(0)) || 3 === C
                ? ((R = 0),
                  p.push(m),
                  (v = m > v ? m : v),
                  (m = -2 * B),
                  (a = ""),
                  (r = !0),
                  (f += 1))
                : (a = D),
              h.chars
                ? ((o = h.getCharData(
                    D,
                    E.fStyle,
                    h.getFontByName(t.f).fFamily
                  )),
                  (y = r ? 0 : (o.w * t.finalSize) / 100))
                : (y = h.measureText(a, t.f, t.finalSize)),
              " " === D ? (R += y + B) : ((m += y + B + R), (R = 0)),
              A.push({
                l: y,
                an: y,
                add: c,
                n: r,
                anIndexes: [],
                val: a,
                line: f,
                animatorJustifyOffset: 0,
              }),
              2 == u)
            ) {
              if (((c += y), "" === a || " " === a || e === i - 1)) {
                for (("" !== a && " " !== a) || (c -= y); g <= e; )
                  (A[g].an = c), (A[g].ind = d), (A[g].extra = y), (g += 1);
                (d += 1), (c = 0);
              }
            } else if (3 == u) {
              if (((c += y), "" === a || e === i - 1)) {
                for ("" === a && (c -= y); g <= e; )
                  (A[g].an = c), (A[g].ind = d), (A[g].extra = y), (g += 1);
                (c = 0), (d += 1);
              }
            } else (A[d].ind = d), (A[d].extra = 0), (d += 1);
          if (((t.l = A), (v = m > v ? m : v), p.push(m), t.sz))
            (t.boxWidth = t.sz[0]), (t.justifyOffset = 0);
          else
            switch (((t.boxWidth = v), t.j)) {
              case 1:
                t.justifyOffset = -t.boxWidth;
                break;
              case 2:
                t.justifyOffset = -t.boxWidth / 2;
                break;
              default:
                t.justifyOffset = 0;
            }
          t.lineWidths = p;
          var L,
            T,
            M,
            F,
            P = l.a;
          n = P.length;
          var _ = [];
          for (s = 0; s < n; s += 1) {
            for (
              (L = P[s]).a.sc && (t.strokeColorAnim = !0),
                L.a.sw && (t.strokeWidthAnim = !0),
                (L.a.fc || L.a.fh || L.a.fs || L.a.fb) &&
                  (t.fillColorAnim = !0),
                F = 0,
                M = L.s.b,
                e = 0;
              e < i;
              e += 1
            )
              ((T = A[e]).anIndexes[s] = F),
                ((1 == M && "" !== T.val) ||
                  (2 == M && "" !== T.val && " " !== T.val) ||
                  (3 == M && (T.n || " " == T.val || e == i - 1)) ||
                  (4 == M && (T.n || e == i - 1))) &&
                  (1 === L.s.rn && _.push(F), (F += 1));
            l.a[s].s.totalChars = F;
            var N,
              U = -1;
            if (1 === L.s.rn)
              for (e = 0; e < i; e += 1)
                U != (T = A[e]).anIndexes[s] &&
                  ((U = T.anIndexes[s]),
                  (N = _.splice(Math.floor(Math.random() * _.length), 1)[0])),
                  (T.anIndexes[s] = N);
          }
          (t.yOffset = t.finalLineHeight || 1.2 * t.finalSize),
            (t.ls = t.ls || 0),
            (t.ascent = (E.ascent * t.finalSize) / 100);
        }),
        (pi.prototype.updateDocumentData = function (t, e) {
          e = void 0 === e ? this.keysIndex : e;
          var i = this.copyData({}, this.data.d.k[e].s);
          (i = this.copyData(i, t)),
            (this.data.d.k[e].s = i),
            this.recalculate(e),
            this.setCurrentData(i),
            this.elem.addDynamicProperty(this);
        }),
        (pi.prototype.recalculate = function (t) {
          var e = this.data.d.k[t].s;
          (e.__complete = !1),
            (this.keysIndex = 0),
            (this._isFirstFrame = !0),
            this.getValue(e);
        }),
        (pi.prototype.canResizeFont = function (t) {
          (this.canResize = t),
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this);
        }),
        (pi.prototype.setMinimumFontSize = function (t) {
          (this.minimumFontSize = Math.floor(t) || 1),
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this);
        });
      var mi = (function () {
        var t = Math.max,
          e = Math.min,
          i = Math.floor;
        function r(t, e) {
          (this._currentTextLength = -1),
            (this.k = !1),
            (this.data = e),
            (this.elem = t),
            (this.comp = t.comp),
            (this.finalS = 0),
            (this.finalE = 0),
            this.initDynamicPropertyContainer(t),
            (this.s = gt.getProp(t, e.s || { k: 0 }, 0, 0, this)),
            (this.e = "e" in e ? gt.getProp(t, e.e, 0, 0, this) : { v: 100 }),
            (this.o = gt.getProp(t, e.o || { k: 0 }, 0, 0, this)),
            (this.xe = gt.getProp(t, e.xe || { k: 0 }, 0, 0, this)),
            (this.ne = gt.getProp(t, e.ne || { k: 0 }, 0, 0, this)),
            (this.sm = gt.getProp(t, e.sm || { k: 100 }, 0, 0, this)),
            (this.a = gt.getProp(t, e.a, 0, 0.01, this)),
            this.dynamicProperties.length || this.getValue();
        }
        return (
          (r.prototype = {
            getMult: function (r) {
              this._currentTextLength !==
                this.elem.textProperty.currentData.l.length && this.getValue();
              var a = 0,
                s = 0,
                n = 1,
                o = 1;
              this.ne.v > 0 ? (a = this.ne.v / 100) : (s = -this.ne.v / 100),
                this.xe.v > 0
                  ? (n = 1 - this.xe.v / 100)
                  : (o = 1 + this.xe.v / 100);
              var h = J.getBezierEasing(a, s, n, o).get,
                l = 0,
                A = this.finalS,
                d = this.finalE,
                u = this.data.sh;
              if (2 === u)
                l = h(
                  (l =
                    d === A
                      ? r >= d
                        ? 1
                        : 0
                      : t(0, e(0.5 / (d - A) + (r - A) / (d - A), 1)))
                );
              else if (3 === u)
                l = h(
                  (l =
                    d === A
                      ? r >= d
                        ? 0
                        : 1
                      : 1 - t(0, e(0.5 / (d - A) + (r - A) / (d - A), 1)))
                );
              else if (4 === u)
                d === A
                  ? (l = 0)
                  : (l = t(0, e(0.5 / (d - A) + (r - A) / (d - A), 1))) < 0.5
                  ? (l *= 2)
                  : (l = 1 - 2 * (l - 0.5)),
                  (l = h(l));
              else if (5 === u) {
                if (d === A) l = 0;
                else {
                  var c = d - A,
                    g = -c / 2 + (r = e(t(0, r + 0.5 - A), d - A)),
                    f = c / 2;
                  l = Math.sqrt(1 - (g * g) / (f * f));
                }
                l = h(l);
              } else
                6 === u
                  ? (d === A
                      ? (l = 0)
                      : ((r = e(t(0, r + 0.5 - A), d - A)),
                        (l =
                          (1 +
                            Math.cos(Math.PI + (2 * Math.PI * r) / (d - A))) /
                          2)),
                    (l = h(l)))
                  : (r >= i(A) &&
                      (l = t(0, e(r - A < 0 ? e(d, 1) - (A - r) : d - r, 1))),
                    (l = h(l)));
              if (100 !== this.sm.v) {
                var p = 0.01 * this.sm.v;
                0 === p && (p = 1e-8);
                var m = 0.5 - 0.5 * p;
                l < m ? (l = 0) : (l = (l - m) / p) > 1 && (l = 1);
              }
              return l * this.a.v;
            },
            getValue: function (t) {
              this.iterateDynamicProperties(),
                (this._mdf = t || this._mdf),
                (this._currentTextLength =
                  this.elem.textProperty.currentData.l.length || 0),
                t && 2 === this.data.r && (this.e.v = this._currentTextLength);
              var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars,
                i = this.o.v / e,
                r = this.s.v / e + i,
                a = this.e.v / e + i;
              if (r > a) {
                var s = r;
                (r = a), (a = s);
              }
              (this.finalS = r), (this.finalE = a);
            },
          }),
          s([ft], r),
          {
            getTextSelectorProp: function (t, e, i) {
              return new r(t, e);
            },
          }
        );
      })();
      function vi(t, e, i) {
        var r = { propType: !1 },
          a = gt.getProp,
          s = e.a;
        (this.a = {
          r: s.r ? a(t, s.r, 0, y, i) : r,
          rx: s.rx ? a(t, s.rx, 0, y, i) : r,
          ry: s.ry ? a(t, s.ry, 0, y, i) : r,
          sk: s.sk ? a(t, s.sk, 0, y, i) : r,
          sa: s.sa ? a(t, s.sa, 0, y, i) : r,
          s: s.s ? a(t, s.s, 1, 0.01, i) : r,
          a: s.a ? a(t, s.a, 1, 0, i) : r,
          o: s.o ? a(t, s.o, 0, 0.01, i) : r,
          p: s.p ? a(t, s.p, 1, 0, i) : r,
          sw: s.sw ? a(t, s.sw, 0, 0, i) : r,
          sc: s.sc ? a(t, s.sc, 1, 0, i) : r,
          fc: s.fc ? a(t, s.fc, 1, 0, i) : r,
          fh: s.fh ? a(t, s.fh, 0, 0, i) : r,
          fs: s.fs ? a(t, s.fs, 0, 0.01, i) : r,
          fb: s.fb ? a(t, s.fb, 0, 0.01, i) : r,
          t: s.t ? a(t, s.t, 0, 0, i) : r,
        }),
          (this.s = mi.getTextSelectorProp(t, e.s, i)),
          (this.s.t = e.s.t);
      }
      function Ei(t, e, i) {
        (this._isFirstFrame = !0),
          (this._hasMaskedPath = !1),
          (this._frameId = -1),
          (this._textData = t),
          (this._renderType = e),
          (this._elem = i),
          (this._animatorsData = l(this._textData.a.length)),
          (this._pathData = {}),
          (this._moreOptions = { alignment: {} }),
          (this.renderedLetters = []),
          (this.lettersChangedFlag = !1),
          this.initDynamicPropertyContainer(i);
      }
      function yi() {}
      (Ei.prototype.searchProperties = function () {
        var t,
          e,
          i = this._textData.a.length,
          r = gt.getProp;
        for (t = 0; t < i; t += 1)
          (e = this._textData.a[t]),
            (this._animatorsData[t] = new vi(this._elem, e, this));
        this._textData.p && "m" in this._textData.p
          ? ((this._pathData = {
              a: r(this._elem, this._textData.p.a, 0, 0, this),
              f: r(this._elem, this._textData.p.f, 0, 0, this),
              l: r(this._elem, this._textData.p.l, 0, 0, this),
              r: r(this._elem, this._textData.p.r, 0, 0, this),
              p: r(this._elem, this._textData.p.p, 0, 0, this),
              m: this._elem.maskManager.getMaskProperty(this._textData.p.m),
            }),
            (this._hasMaskedPath = !0))
          : (this._hasMaskedPath = !1),
          (this._moreOptions.alignment = r(
            this._elem,
            this._textData.m.a,
            1,
            0,
            this
          ));
      }),
        (Ei.prototype.getMeasures = function (t, e) {
          if (
            ((this.lettersChangedFlag = e),
            this._mdf ||
              this._isFirstFrame ||
              e ||
              (this._hasMaskedPath && this._pathData.m._mdf))
          ) {
            this._isFirstFrame = !1;
            var i,
              r,
              a,
              s,
              n,
              o,
              h,
              l,
              A,
              d,
              u,
              c,
              g,
              f,
              p,
              m,
              v,
              E,
              y,
              I = this._moreOptions.alignment.v,
              C = this._animatorsData,
              B = this._textData,
              k = this.mHelper,
              x = this._renderType,
              w = this.renderedLetters.length,
              Q = t.l;
            if (this._hasMaskedPath) {
              if (
                ((y = this._pathData.m),
                !this._pathData.n || this._pathData._mdf)
              ) {
                var S,
                  b = y.v;
                for (
                  this._pathData.r.v && (b = b.reverse()),
                    n = { tLength: 0, segments: [] },
                    s = b._length - 1,
                    m = 0,
                    a = 0;
                  a < s;
                  a += 1
                )
                  (S = et.buildBezierData(
                    b.v[a],
                    b.v[a + 1],
                    [b.o[a][0] - b.v[a][0], b.o[a][1] - b.v[a][1]],
                    [
                      b.i[a + 1][0] - b.v[a + 1][0],
                      b.i[a + 1][1] - b.v[a + 1][1],
                    ]
                  )),
                    (n.tLength += S.segmentLength),
                    n.segments.push(S),
                    (m += S.segmentLength);
                (a = s),
                  y.v.c &&
                    ((S = et.buildBezierData(
                      b.v[a],
                      b.v[0],
                      [b.o[a][0] - b.v[a][0], b.o[a][1] - b.v[a][1]],
                      [b.i[0][0] - b.v[0][0], b.i[0][1] - b.v[0][1]]
                    )),
                    (n.tLength += S.segmentLength),
                    n.segments.push(S),
                    (m += S.segmentLength)),
                  (this._pathData.pi = n);
              }
              if (
                ((n = this._pathData.pi),
                (o = this._pathData.f.v),
                (u = 0),
                (d = 1),
                (l = 0),
                (A = !0),
                (f = n.segments),
                o < 0 && y.v.c)
              )
                for (
                  n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength),
                    d = (g = f[(u = f.length - 1)].points).length - 1;
                  o < 0;

                )
                  (o += g[d].partialLength),
                    (d -= 1) < 0 && (d = (g = f[(u -= 1)].points).length - 1);
              (c = (g = f[u].points)[d - 1]), (p = (h = g[d]).partialLength);
            }
            (s = Q.length), (i = 0), (r = 0);
            var D,
              R,
              L,
              P,
              _,
              N = 1.2 * t.finalSize * 0.714,
              U = !0;
            L = C.length;
            var G,
              O,
              j,
              Y,
              H,
              V,
              K,
              z,
              q,
              W,
              J,
              Z,
              X = -1,
              $ = o,
              tt = u,
              it = d,
              rt = -1,
              at = "",
              st = this.defaultPropsArray;
            if (2 === t.j || 1 === t.j) {
              var nt = 0,
                ot = 0,
                ht = 2 === t.j ? -0.5 : -1,
                lt = 0,
                At = !0;
              for (a = 0; a < s; a += 1)
                if (Q[a].n) {
                  for (nt && (nt += ot); lt < a; )
                    (Q[lt].animatorJustifyOffset = nt), (lt += 1);
                  (nt = 0), (At = !0);
                } else {
                  for (R = 0; R < L; R += 1)
                    (D = C[R].a).t.propType &&
                      (At && 2 === t.j && (ot += D.t.v * ht),
                      (_ = C[R].s.getMult(
                        Q[a].anIndexes[R],
                        B.a[R].s.totalChars
                      )).length
                        ? (nt += D.t.v * _[0] * ht)
                        : (nt += D.t.v * _ * ht));
                  At = !1;
                }
              for (nt && (nt += ot); lt < a; )
                (Q[lt].animatorJustifyOffset = nt), (lt += 1);
            }
            for (a = 0; a < s; a += 1) {
              if ((k.reset(), (Y = 1), Q[a].n))
                (i = 0),
                  (r += t.yOffset),
                  (r += U ? 1 : 0),
                  (o = $),
                  (U = !1),
                  this._hasMaskedPath &&
                    ((d = it),
                    (c = (g = f[(u = tt)].points)[d - 1]),
                    (p = (h = g[d]).partialLength),
                    (l = 0)),
                  (at = ""),
                  (J = ""),
                  (q = ""),
                  (Z = ""),
                  (st = this.defaultPropsArray);
              else {
                if (this._hasMaskedPath) {
                  if (rt !== Q[a].line) {
                    switch (t.j) {
                      case 1:
                        o += m - t.lineWidths[Q[a].line];
                        break;
                      case 2:
                        o += (m - t.lineWidths[Q[a].line]) / 2;
                    }
                    rt = Q[a].line;
                  }
                  X !== Q[a].ind &&
                    (Q[X] && (o += Q[X].extra),
                    (o += Q[a].an / 2),
                    (X = Q[a].ind)),
                    (o += I[0] * Q[a].an * 0.005);
                  var dt = 0;
                  for (R = 0; R < L; R += 1)
                    (D = C[R].a).p.propType &&
                      ((_ = C[R].s.getMult(
                        Q[a].anIndexes[R],
                        B.a[R].s.totalChars
                      )).length
                        ? (dt += D.p.v[0] * _[0])
                        : (dt += D.p.v[0] * _)),
                      D.a.propType &&
                        ((_ = C[R].s.getMult(
                          Q[a].anIndexes[R],
                          B.a[R].s.totalChars
                        )).length
                          ? (dt += D.a.v[0] * _[0])
                          : (dt += D.a.v[0] * _));
                  for (
                    A = !0,
                      this._pathData.a.v &&
                        ((o =
                          0.5 * Q[0].an +
                          ((m -
                            this._pathData.f.v -
                            0.5 * Q[0].an -
                            0.5 * Q[Q.length - 1].an) *
                            X) /
                            (s - 1)),
                        (o += this._pathData.f.v));
                    A;

                  )
                    l + p >= o + dt || !g
                      ? ((v = (o + dt - l) / h.partialLength),
                        (O = c.point[0] + (h.point[0] - c.point[0]) * v),
                        (j = c.point[1] + (h.point[1] - c.point[1]) * v),
                        k.translate(-I[0] * Q[a].an * 0.005, -I[1] * N * 0.01),
                        (A = !1))
                      : g &&
                        ((l += h.partialLength),
                        (d += 1) >= g.length &&
                          ((d = 0),
                          f[(u += 1)]
                            ? (g = f[u].points)
                            : y.v.c
                            ? ((d = 0), (g = f[(u = 0)].points))
                            : ((l -= h.partialLength), (g = null))),
                        g && ((c = h), (p = (h = g[d]).partialLength)));
                  (G = Q[a].an / 2 - Q[a].add), k.translate(-G, 0, 0);
                } else
                  (G = Q[a].an / 2 - Q[a].add),
                    k.translate(-G, 0, 0),
                    k.translate(-I[0] * Q[a].an * 0.005, -I[1] * N * 0.01, 0);
                for (R = 0; R < L; R += 1)
                  (D = C[R].a).t.propType &&
                    ((_ = C[R].s.getMult(
                      Q[a].anIndexes[R],
                      B.a[R].s.totalChars
                    )),
                    (0 === i && 0 === t.j) ||
                      (this._hasMaskedPath
                        ? _.length
                          ? (o += D.t.v * _[0])
                          : (o += D.t.v * _)
                        : _.length
                        ? (i += D.t.v * _[0])
                        : (i += D.t.v * _)));
                for (
                  t.strokeWidthAnim && (V = t.sw || 0),
                    t.strokeColorAnim &&
                      (H = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]),
                    t.fillColorAnim &&
                      t.fc &&
                      (K = [t.fc[0], t.fc[1], t.fc[2]]),
                    R = 0;
                  R < L;
                  R += 1
                )
                  (D = C[R].a).a.propType &&
                    ((_ = C[R].s.getMult(
                      Q[a].anIndexes[R],
                      B.a[R].s.totalChars
                    )).length
                      ? k.translate(
                          -D.a.v[0] * _[0],
                          -D.a.v[1] * _[1],
                          D.a.v[2] * _[2]
                        )
                      : k.translate(
                          -D.a.v[0] * _,
                          -D.a.v[1] * _,
                          D.a.v[2] * _
                        ));
                for (R = 0; R < L; R += 1)
                  (D = C[R].a).s.propType &&
                    ((_ = C[R].s.getMult(
                      Q[a].anIndexes[R],
                      B.a[R].s.totalChars
                    )).length
                      ? k.scale(
                          1 + (D.s.v[0] - 1) * _[0],
                          1 + (D.s.v[1] - 1) * _[1],
                          1
                        )
                      : k.scale(
                          1 + (D.s.v[0] - 1) * _,
                          1 + (D.s.v[1] - 1) * _,
                          1
                        ));
                for (R = 0; R < L; R += 1) {
                  if (
                    ((D = C[R].a),
                    (_ = C[R].s.getMult(
                      Q[a].anIndexes[R],
                      B.a[R].s.totalChars
                    )),
                    D.sk.propType &&
                      (_.length
                        ? k.skewFromAxis(-D.sk.v * _[0], D.sa.v * _[1])
                        : k.skewFromAxis(-D.sk.v * _, D.sa.v * _)),
                    D.r.propType &&
                      (_.length
                        ? k.rotateZ(-D.r.v * _[2])
                        : k.rotateZ(-D.r.v * _)),
                    D.ry.propType &&
                      (_.length
                        ? k.rotateY(D.ry.v * _[1])
                        : k.rotateY(D.ry.v * _)),
                    D.rx.propType &&
                      (_.length
                        ? k.rotateX(D.rx.v * _[0])
                        : k.rotateX(D.rx.v * _)),
                    D.o.propType &&
                      (_.length
                        ? (Y += (D.o.v * _[0] - Y) * _[0])
                        : (Y += (D.o.v * _ - Y) * _)),
                    t.strokeWidthAnim &&
                      D.sw.propType &&
                      (_.length ? (V += D.sw.v * _[0]) : (V += D.sw.v * _)),
                    t.strokeColorAnim && D.sc.propType)
                  )
                    for (z = 0; z < 3; z += 1)
                      _.length
                        ? (H[z] += (D.sc.v[z] - H[z]) * _[0])
                        : (H[z] += (D.sc.v[z] - H[z]) * _);
                  if (t.fillColorAnim && t.fc) {
                    if (D.fc.propType)
                      for (z = 0; z < 3; z += 1)
                        _.length
                          ? (K[z] += (D.fc.v[z] - K[z]) * _[0])
                          : (K[z] += (D.fc.v[z] - K[z]) * _);
                    D.fh.propType &&
                      (K = _.length ? F(K, D.fh.v * _[0]) : F(K, D.fh.v * _)),
                      D.fs.propType &&
                        (K = _.length ? T(K, D.fs.v * _[0]) : T(K, D.fs.v * _)),
                      D.fb.propType &&
                        (K = _.length ? M(K, D.fb.v * _[0]) : M(K, D.fb.v * _));
                  }
                }
                for (R = 0; R < L; R += 1)
                  (D = C[R].a).p.propType &&
                    ((_ = C[R].s.getMult(
                      Q[a].anIndexes[R],
                      B.a[R].s.totalChars
                    )),
                    this._hasMaskedPath
                      ? _.length
                        ? k.translate(0, D.p.v[1] * _[0], -D.p.v[2] * _[1])
                        : k.translate(0, D.p.v[1] * _, -D.p.v[2] * _)
                      : _.length
                      ? k.translate(
                          D.p.v[0] * _[0],
                          D.p.v[1] * _[1],
                          -D.p.v[2] * _[2]
                        )
                      : k.translate(D.p.v[0] * _, D.p.v[1] * _, -D.p.v[2] * _));
                if (
                  (t.strokeWidthAnim && (q = V < 0 ? 0 : V),
                  t.strokeColorAnim &&
                    (W =
                      "rgb(" +
                      Math.round(255 * H[0]) +
                      "," +
                      Math.round(255 * H[1]) +
                      "," +
                      Math.round(255 * H[2]) +
                      ")"),
                  t.fillColorAnim &&
                    t.fc &&
                    (J =
                      "rgb(" +
                      Math.round(255 * K[0]) +
                      "," +
                      Math.round(255 * K[1]) +
                      "," +
                      Math.round(255 * K[2]) +
                      ")"),
                  this._hasMaskedPath)
                ) {
                  if (
                    (k.translate(0, -t.ls),
                    k.translate(0, I[1] * N * 0.01 + r, 0),
                    this._pathData.p.v)
                  ) {
                    E = (h.point[1] - c.point[1]) / (h.point[0] - c.point[0]);
                    var ut = (180 * Math.atan(E)) / Math.PI;
                    h.point[0] < c.point[0] && (ut += 180),
                      k.rotate((-ut * Math.PI) / 180);
                  }
                  k.translate(O, j, 0),
                    (o -= I[0] * Q[a].an * 0.005),
                    Q[a + 1] &&
                      X !== Q[a + 1].ind &&
                      ((o += Q[a].an / 2), (o += 0.001 * t.tr * t.finalSize));
                } else {
                  switch (
                    (k.translate(i, r, 0),
                    t.ps && k.translate(t.ps[0], t.ps[1] + t.ascent, 0),
                    t.j)
                  ) {
                    case 1:
                      k.translate(
                        Q[a].animatorJustifyOffset +
                          t.justifyOffset +
                          (t.boxWidth - t.lineWidths[Q[a].line]),
                        0,
                        0
                      );
                      break;
                    case 2:
                      k.translate(
                        Q[a].animatorJustifyOffset +
                          t.justifyOffset +
                          (t.boxWidth - t.lineWidths[Q[a].line]) / 2,
                        0,
                        0
                      );
                  }
                  k.translate(0, -t.ls),
                    k.translate(G, 0, 0),
                    k.translate(I[0] * Q[a].an * 0.005, I[1] * N * 0.01, 0),
                    (i += Q[a].l + 0.001 * t.tr * t.finalSize);
                }
                "html" === x
                  ? (at = k.toCSS())
                  : "svg" === x
                  ? (at = k.to2dCSS())
                  : (st = [
                      k.props[0],
                      k.props[1],
                      k.props[2],
                      k.props[3],
                      k.props[4],
                      k.props[5],
                      k.props[6],
                      k.props[7],
                      k.props[8],
                      k.props[9],
                      k.props[10],
                      k.props[11],
                      k.props[12],
                      k.props[13],
                      k.props[14],
                      k.props[15],
                    ]),
                  (Z = Y);
              }
              w <= a
                ? ((P = new fi(Z, q, W, J, at, st)),
                  this.renderedLetters.push(P),
                  (w += 1),
                  (this.lettersChangedFlag = !0))
                : ((P = this.renderedLetters[a]),
                  (this.lettersChangedFlag =
                    P.update(Z, q, W, J, at, st) || this.lettersChangedFlag));
            }
          }
        }),
        (Ei.prototype.getValue = function () {
          this._elem.globalData.frameId !== this._frameId &&
            ((this._frameId = this._elem.globalData.frameId),
            this.iterateDynamicProperties());
        }),
        (Ei.prototype.mHelper = new Qt()),
        (Ei.prototype.defaultPropsArray = []),
        s([ft], Ei),
        (yi.prototype.initElement = function (t, e, i) {
          (this.lettersChangedFlag = !0),
            this.initFrame(),
            this.initBaseData(t, e, i),
            (this.textProperty = new pi(this, t.t, this.dynamicProperties)),
            (this.textAnimator = new Ei(t.t, this.renderType, this)),
            this.initTransform(t, e, i),
            this.initHierarchy(),
            this.initRenderable(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            this.createContent(),
            this.hide(),
            this.textAnimator.searchProperties(this.dynamicProperties);
        }),
        (yi.prototype.prepareFrame = function (t) {
          (this._mdf = !1),
            this.prepareRenderableFrame(t),
            this.prepareProperties(t, this.isInRange);
        }),
        (yi.prototype.createPathShape = function (t, e) {
          var i,
            r,
            a = e.length,
            s = "";
          for (i = 0; i < a; i += 1)
            "sh" === e[i].ty &&
              ((r = e[i].ks.k), (s += ui(r, r.i.length, !0, t)));
          return s;
        }),
        (yi.prototype.updateDocumentData = function (t, e) {
          this.textProperty.updateDocumentData(t, e);
        }),
        (yi.prototype.canResizeFont = function (t) {
          this.textProperty.canResizeFont(t);
        }),
        (yi.prototype.setMinimumFontSize = function (t) {
          this.textProperty.setMinimumFontSize(t);
        }),
        (yi.prototype.applyTextPropertiesToMatrix = function (t, e, i, r, a) {
          switch (
            (t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0),
            e.translate(0, -t.ls, 0),
            t.j)
          ) {
            case 1:
              e.translate(
                t.justifyOffset + (t.boxWidth - t.lineWidths[i]),
                0,
                0
              );
              break;
            case 2:
              e.translate(
                t.justifyOffset + (t.boxWidth - t.lineWidths[i]) / 2,
                0,
                0
              );
          }
          e.translate(r, a, 0);
        }),
        (yi.prototype.buildColor = function (t) {
          return (
            "rgb(" +
            Math.round(255 * t[0]) +
            "," +
            Math.round(255 * t[1]) +
            "," +
            Math.round(255 * t[2]) +
            ")"
          );
        }),
        (yi.prototype.emptyProp = new fi()),
        (yi.prototype.destroy = function () {}),
        (yi.prototype.validateText = function () {
          (this.textProperty._mdf || this.textProperty._isFirstFrame) &&
            (this.buildNewText(),
            (this.textProperty._isFirstFrame = !1),
            (this.textProperty._mdf = !1));
        });
      var Ii,
        Ci = { shapes: [] };
      function Bi(t, e, i) {
        (this.textSpans = []),
          (this.renderType = "svg"),
          this.initElement(t, e, i);
      }
      function ki(t, e, i) {
        this.initElement(t, e, i);
      }
      function xi(t, e, i) {
        this.initFrame(),
          this.initBaseData(t, e, i),
          this.initFrame(),
          this.initTransform(t, e, i),
          this.initHierarchy();
      }
      function wi() {}
      function Qi() {}
      function Si(t, e, i) {
        (this.layers = t.layers),
          (this.supports3d = !0),
          (this.completeLayers = !1),
          (this.pendingElements = []),
          (this.elements = this.layers ? l(this.layers.length) : []),
          this.initElement(t, e, i),
          (this.tm = t.tm
            ? gt.getProp(this, t.tm, 0, e.frameRate, this)
            : { _placeholder: !0 });
      }
      function bi(t, e) {
        (this.animationItem = t),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.svgElement = U("svg"));
        var i = "";
        if (e && e.title) {
          var r = U("title"),
            a = D();
          r.setAttribute("id", a),
            (r.textContent = e.title),
            this.svgElement.appendChild(r),
            (i += a);
        }
        if (e && e.description) {
          var s = U("desc"),
            n = D();
          s.setAttribute("id", n),
            (s.textContent = e.description),
            this.svgElement.appendChild(s),
            (i += " " + n);
        }
        i && this.svgElement.setAttribute("aria-labelledby", i);
        var o = U("defs");
        this.svgElement.appendChild(o);
        var h = U("g");
        this.svgElement.appendChild(h),
          (this.layerElement = h),
          (this.renderConfig = {
            preserveAspectRatio:
              (e && e.preserveAspectRatio) || "xMidYMid meet",
            imagePreserveAspectRatio:
              (e && e.imagePreserveAspectRatio) || "xMidYMid slice",
            contentVisibility: (e && e.contentVisibility) || "visible",
            progressiveLoad: (e && e.progressiveLoad) || !1,
            hideOnTransparent: !(e && !1 === e.hideOnTransparent),
            viewBoxOnly: (e && e.viewBoxOnly) || !1,
            viewBoxSize: (e && e.viewBoxSize) || !1,
            className: (e && e.className) || "",
            id: (e && e.id) || "",
            focusable: e && e.focusable,
            filterSize: {
              width: (e && e.filterSize && e.filterSize.width) || "100%",
              height: (e && e.filterSize && e.filterSize.height) || "100%",
              x: (e && e.filterSize && e.filterSize.x) || "0%",
              y: (e && e.filterSize && e.filterSize.y) || "0%",
            },
            width: e && e.width,
            height: e && e.height,
            runExpressions:
              !e || void 0 === e.runExpressions || e.runExpressions,
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            defs: o,
            renderConfig: this.renderConfig,
          }),
          (this.elements = []),
          (this.pendingElements = []),
          (this.destroyed = !1),
          (this.rendererType = "svg");
      }
      return (
        s([Me, Ge, ze, qe, Fe, We, yi], Bi),
        (Bi.prototype.createContent = function () {
          this.data.singleShape &&
            !this.globalData.fontManager.chars &&
            (this.textContainer = U("text"));
        }),
        (Bi.prototype.buildTextContents = function (t) {
          for (var e = 0, i = t.length, r = [], a = ""; e < i; )
            t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3)
              ? (r.push(a), (a = ""))
              : (a += t[e]),
              (e += 1);
          return r.push(a), r;
        }),
        (Bi.prototype.buildShapeData = function (t, e) {
          if (t.shapes && t.shapes.length) {
            var i = t.shapes[0];
            if (i.it) {
              var r = i.it[i.it.length - 1];
              r.s && ((r.s.k[0] = e), (r.s.k[1] = e));
            }
          }
          return t;
        }),
        (Bi.prototype.buildNewText = function () {
          var t, e;
          this.addDynamicProperty(this);
          var i = this.textProperty.currentData;
          (this.renderedLetters = l(i ? i.l.length : 0)),
            i.fc
              ? this.layerElement.setAttribute("fill", this.buildColor(i.fc))
              : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
            i.sc &&
              (this.layerElement.setAttribute("stroke", this.buildColor(i.sc)),
              this.layerElement.setAttribute("stroke-width", i.sw)),
            this.layerElement.setAttribute("font-size", i.finalSize);
          var r = this.globalData.fontManager.getFontByName(i.f);
          if (r.fClass) this.layerElement.setAttribute("class", r.fClass);
          else {
            this.layerElement.setAttribute("font-family", r.fFamily);
            var a = i.fWeight,
              s = i.fStyle;
            this.layerElement.setAttribute("font-style", s),
              this.layerElement.setAttribute("font-weight", a);
          }
          this.layerElement.setAttribute("aria-label", i.t);
          var n,
            o = i.l || [],
            h = !!this.globalData.fontManager.chars;
          e = o.length;
          var A = this.mHelper,
            d = this.data.singleShape,
            u = 0,
            c = 0,
            g = !0,
            f = 0.001 * i.tr * i.finalSize;
          if (!d || h || i.sz) {
            var p,
              m = this.textSpans.length;
            for (t = 0; t < e; t += 1) {
              if (
                (this.textSpans[t] ||
                  (this.textSpans[t] = {
                    span: null,
                    childSpan: null,
                    glyph: null,
                  }),
                !h || !d || 0 === t)
              ) {
                if (
                  ((n = m > t ? this.textSpans[t].span : U(h ? "g" : "text")),
                  m <= t)
                ) {
                  if (
                    (n.setAttribute("stroke-linecap", "butt"),
                    n.setAttribute("stroke-linejoin", "round"),
                    n.setAttribute("stroke-miterlimit", "4"),
                    (this.textSpans[t].span = n),
                    h)
                  ) {
                    var v = U("g");
                    n.appendChild(v), (this.textSpans[t].childSpan = v);
                  }
                  (this.textSpans[t].span = n),
                    this.layerElement.appendChild(n);
                }
                n.style.display = "inherit";
              }
              if (
                (A.reset(),
                d &&
                  (o[t].n &&
                    ((u = -f), (c += i.yOffset), (c += g ? 1 : 0), (g = !1)),
                  this.applyTextPropertiesToMatrix(i, A, o[t].line, u, c),
                  (u += o[t].l || 0),
                  (u += f)),
                h)
              ) {
                var E;
                if (
                  1 ===
                  (p = this.globalData.fontManager.getCharData(
                    i.finalText[t],
                    r.fStyle,
                    this.globalData.fontManager.getFontByName(i.f).fFamily
                  )).t
                )
                  E = new Si(p.data, this.globalData, this);
                else {
                  var y = Ci;
                  p.data &&
                    p.data.shapes &&
                    (y = this.buildShapeData(p.data, i.finalSize)),
                    (E = new gi(y, this.globalData, this));
                }
                if (this.textSpans[t].glyph) {
                  var I = this.textSpans[t].glyph;
                  this.textSpans[t].childSpan.removeChild(I.layerElement),
                    I.destroy();
                }
                (this.textSpans[t].glyph = E),
                  (E._debug = !0),
                  E.prepareFrame(0),
                  E.renderFrame(),
                  this.textSpans[t].childSpan.appendChild(E.layerElement),
                  1 === p.t &&
                    this.textSpans[t].childSpan.setAttribute(
                      "transform",
                      "scale(" +
                        i.finalSize / 100 +
                        "," +
                        i.finalSize / 100 +
                        ")"
                    );
              } else
                d &&
                  n.setAttribute(
                    "transform",
                    "translate(" + A.props[12] + "," + A.props[13] + ")"
                  ),
                  (n.textContent = o[t].val),
                  n.setAttributeNS(
                    "http://www.w3.org/XML/1998/namespace",
                    "xml:space",
                    "preserve"
                  );
            }
            d && n && n.setAttribute("d", "");
          } else {
            var C = this.textContainer,
              B = "start";
            switch (i.j) {
              case 1:
                B = "end";
                break;
              case 2:
                B = "middle";
                break;
              default:
                B = "start";
            }
            C.setAttribute("text-anchor", B),
              C.setAttribute("letter-spacing", f);
            var k = this.buildTextContents(i.finalText);
            for (
              e = k.length, c = i.ps ? i.ps[1] + i.ascent : 0, t = 0;
              t < e;
              t += 1
            )
              ((n = this.textSpans[t].span || U("tspan")).textContent = k[t]),
                n.setAttribute("x", 0),
                n.setAttribute("y", c),
                (n.style.display = "inherit"),
                C.appendChild(n),
                this.textSpans[t] ||
                  (this.textSpans[t] = { span: null, glyph: null }),
                (this.textSpans[t].span = n),
                (c += i.finalLineHeight);
            this.layerElement.appendChild(C);
          }
          for (; t < this.textSpans.length; )
            (this.textSpans[t].span.style.display = "none"), (t += 1);
          this._sizeChanged = !0;
        }),
        (Bi.prototype.sourceRectAtTime = function () {
          if (
            (this.prepareFrame(this.comp.renderedFrame - this.data.st),
            this.renderInnerContent(),
            this._sizeChanged)
          ) {
            this._sizeChanged = !1;
            var t = this.layerElement.getBBox();
            this.bbox = {
              top: t.y,
              left: t.x,
              width: t.width,
              height: t.height,
            };
          }
          return this.bbox;
        }),
        (Bi.prototype.getValue = function () {
          var t,
            e,
            i = this.textSpans.length;
          for (
            this.renderedFrame = this.comp.renderedFrame, t = 0;
            t < i;
            t += 1
          )
            (e = this.textSpans[t].glyph) &&
              (e.prepareFrame(this.comp.renderedFrame - this.data.st),
              e._mdf && (this._mdf = !0));
        }),
        (Bi.prototype.renderInnerContent = function () {
          if (
            (this.validateText(),
            (!this.data.singleShape || this._mdf) &&
              (this.textAnimator.getMeasures(
                this.textProperty.currentData,
                this.lettersChangedFlag
              ),
              this.lettersChangedFlag || this.textAnimator.lettersChangedFlag))
          ) {
            var t, e;
            this._sizeChanged = !0;
            var i,
              r,
              a,
              s = this.textAnimator.renderedLetters,
              n = this.textProperty.currentData.l;
            for (e = n.length, t = 0; t < e; t += 1)
              n[t].n ||
                ((i = s[t]),
                (r = this.textSpans[t].span),
                (a = this.textSpans[t].glyph) && a.renderFrame(),
                i._mdf.m && r.setAttribute("transform", i.m),
                i._mdf.o && r.setAttribute("opacity", i.o),
                i._mdf.sw && r.setAttribute("stroke-width", i.sw),
                i._mdf.sc && r.setAttribute("stroke", i.sc),
                i._mdf.fc && r.setAttribute("fill", i.fc));
          }
        }),
        s([Je], ki),
        (ki.prototype.createContent = function () {
          var t = U("rect");
          t.setAttribute("width", this.data.sw),
            t.setAttribute("height", this.data.sh),
            t.setAttribute("fill", this.data.sc),
            this.layerElement.appendChild(t);
        }),
        (xi.prototype.prepareFrame = function (t) {
          this.prepareProperties(t, !0);
        }),
        (xi.prototype.renderFrame = function () {}),
        (xi.prototype.getBaseElement = function () {
          return null;
        }),
        (xi.prototype.destroy = function () {}),
        (xi.prototype.sourceRectAtTime = function () {}),
        (xi.prototype.hide = function () {}),
        s([Me, Ge, qe, Fe], xi),
        s([Ne], wi),
        (wi.prototype.createNull = function (t) {
          return new xi(t, this.globalData, this);
        }),
        (wi.prototype.createShape = function (t) {
          return new gi(t, this.globalData, this);
        }),
        (wi.prototype.createText = function (t) {
          return new Bi(t, this.globalData, this);
        }),
        (wi.prototype.createImage = function (t) {
          return new Je(t, this.globalData, this);
        }),
        (wi.prototype.createSolid = function (t) {
          return new ki(t, this.globalData, this);
        }),
        (wi.prototype.configAnimation = function (t) {
          this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
            this.svgElement.setAttribute(
              "xmlns:xlink",
              "http://www.w3.org/1999/xlink"
            ),
            this.renderConfig.viewBoxSize
              ? this.svgElement.setAttribute(
                  "viewBox",
                  this.renderConfig.viewBoxSize
                )
              : this.svgElement.setAttribute(
                  "viewBox",
                  "0 0 " + t.w + " " + t.h
                ),
            this.renderConfig.viewBoxOnly ||
              (this.svgElement.setAttribute("width", t.w),
              this.svgElement.setAttribute("height", t.h),
              (this.svgElement.style.width = "100%"),
              (this.svgElement.style.height = "100%"),
              (this.svgElement.style.transform = "translate3d(0,0,0)"),
              (this.svgElement.style.contentVisibility =
                this.renderConfig.contentVisibility)),
            this.renderConfig.width &&
              this.svgElement.setAttribute("width", this.renderConfig.width),
            this.renderConfig.height &&
              this.svgElement.setAttribute("height", this.renderConfig.height),
            this.renderConfig.className &&
              this.svgElement.setAttribute(
                "class",
                this.renderConfig.className
              ),
            this.renderConfig.id &&
              this.svgElement.setAttribute("id", this.renderConfig.id),
            void 0 !== this.renderConfig.focusable &&
              this.svgElement.setAttribute(
                "focusable",
                this.renderConfig.focusable
              ),
            this.svgElement.setAttribute(
              "preserveAspectRatio",
              this.renderConfig.preserveAspectRatio
            ),
            this.animationItem.wrapper.appendChild(this.svgElement);
          var e = this.globalData.defs;
          this.setupGlobalData(t, e),
            (this.globalData.progressiveLoad =
              this.renderConfig.progressiveLoad),
            (this.data = t);
          var i = U("clipPath"),
            a = U("rect");
          a.setAttribute("width", t.w),
            a.setAttribute("height", t.h),
            a.setAttribute("x", 0),
            a.setAttribute("y", 0);
          var s = D();
          i.setAttribute("id", s),
            i.appendChild(a),
            this.layerElement.setAttribute(
              "clip-path",
              "url(" + r() + "#" + s + ")"
            ),
            e.appendChild(i),
            (this.layers = t.layers),
            (this.elements = l(t.layers.length));
        }),
        (wi.prototype.destroy = function () {
          var t;
          this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = ""),
            (this.layerElement = null),
            (this.globalData.defs = null);
          var e = this.layers ? this.layers.length : 0;
          for (t = 0; t < e; t += 1)
            this.elements[t] &&
              this.elements[t].destroy &&
              this.elements[t].destroy();
          (this.elements.length = 0),
            (this.destroyed = !0),
            (this.animationItem = null);
        }),
        (wi.prototype.updateContainerSize = function () {}),
        (wi.prototype.findIndexByInd = function (t) {
          var e = 0,
            i = this.layers.length;
          for (e = 0; e < i; e += 1) if (this.layers[e].ind === t) return e;
          return -1;
        }),
        (wi.prototype.buildItem = function (t) {
          var e = this.elements;
          if (!e[t] && 99 !== this.layers[t].ty) {
            e[t] = !0;
            var i = this.createItem(this.layers[t]);
            if (
              ((e[t] = i),
              P() &&
                (0 === this.layers[t].ty &&
                  this.globalData.projectInterface.registerComposition(i),
                i.initExpressions()),
              this.appendElementInPos(i, t),
              this.layers[t].tt)
            ) {
              var r =
                "tp" in this.layers[t]
                  ? this.findIndexByInd(this.layers[t].tp)
                  : t - 1;
              if (-1 === r) return;
              if (this.elements[r] && !0 !== this.elements[r]) {
                var a = e[r].getMatte(this.layers[t].tt);
                i.setMatte(a);
              } else this.buildItem(r), this.addPendingElement(i);
            }
          }
        }),
        (wi.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var t = this.pendingElements.pop();
            if ((t.checkParenting(), t.data.tt))
              for (var e = 0, i = this.elements.length; e < i; ) {
                if (this.elements[e] === t) {
                  var r =
                      "tp" in t.data ? this.findIndexByInd(t.data.tp) : e - 1,
                    a = this.elements[r].getMatte(this.layers[e].tt);
                  t.setMatte(a);
                  break;
                }
                e += 1;
              }
          }
        }),
        (wi.prototype.renderFrame = function (t) {
          if (this.renderedFrame !== t && !this.destroyed) {
            var e;
            null === t ? (t = this.renderedFrame) : (this.renderedFrame = t),
              (this.globalData.frameNum = t),
              (this.globalData.frameId += 1),
              (this.globalData.projectInterface.currentFrame = t),
              (this.globalData._mdf = !1);
            var i = this.layers.length;
            for (
              this.completeLayers || this.checkLayers(t), e = i - 1;
              e >= 0;
              e -= 1
            )
              (this.completeLayers || this.elements[e]) &&
                this.elements[e].prepareFrame(t - this.layers[e].st);
            if (this.globalData._mdf)
              for (e = 0; e < i; e += 1)
                (this.completeLayers || this.elements[e]) &&
                  this.elements[e].renderFrame();
          }
        }),
        (wi.prototype.appendElementInPos = function (t, e) {
          var i = t.getBaseElement();
          if (i) {
            for (var r, a = 0; a < e; )
              this.elements[a] &&
                !0 !== this.elements[a] &&
                this.elements[a].getBaseElement() &&
                (r = this.elements[a].getBaseElement()),
                (a += 1);
            r
              ? this.layerElement.insertBefore(i, r)
              : this.layerElement.appendChild(i);
          }
        }),
        (wi.prototype.hide = function () {
          this.layerElement.style.display = "none";
        }),
        (wi.prototype.show = function () {
          this.layerElement.style.display = "block";
        }),
        s([Me, Ge, qe, Fe, We], Qi),
        (Qi.prototype.initElement = function (t, e, i) {
          this.initFrame(),
            this.initBaseData(t, e, i),
            this.initTransform(t, e, i),
            this.initRenderable(),
            this.initHierarchy(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            (!this.data.xt && e.progressiveLoad) || this.buildAllItems(),
            this.hide();
        }),
        (Qi.prototype.prepareFrame = function (t) {
          if (
            ((this._mdf = !1),
            this.prepareRenderableFrame(t),
            this.prepareProperties(t, this.isInRange),
            this.isInRange || this.data.xt)
          ) {
            if (this.tm._placeholder) this.renderedFrame = t / this.data.sr;
            else {
              var e = this.tm.v;
              e === this.data.op && (e = this.data.op - 1),
                (this.renderedFrame = e);
            }
            var i,
              r = this.elements.length;
            for (
              this.completeLayers || this.checkLayers(this.renderedFrame),
                i = r - 1;
              i >= 0;
              i -= 1
            )
              (this.completeLayers || this.elements[i]) &&
                (this.elements[i].prepareFrame(
                  this.renderedFrame - this.layers[i].st
                ),
                this.elements[i]._mdf && (this._mdf = !0));
          }
        }),
        (Qi.prototype.renderInnerContent = function () {
          var t,
            e = this.layers.length;
          for (t = 0; t < e; t += 1)
            (this.completeLayers || this.elements[t]) &&
              this.elements[t].renderFrame();
        }),
        (Qi.prototype.setElements = function (t) {
          this.elements = t;
        }),
        (Qi.prototype.getElements = function () {
          return this.elements;
        }),
        (Qi.prototype.destroyElements = function () {
          var t,
            e = this.layers.length;
          for (t = 0; t < e; t += 1)
            this.elements[t] && this.elements[t].destroy();
        }),
        (Qi.prototype.destroy = function () {
          this.destroyElements(), this.destroyBaseElement();
        }),
        s([wi, Qi, ze], Si),
        (Si.prototype.createComp = function (t) {
          return new Si(t, this.globalData, this);
        }),
        s([wi], bi),
        (bi.prototype.createComp = function (t) {
          return new Si(t, this.globalData, this);
        }),
        (Ii = bi),
        (K.svg = Ii),
        _t.registerModifier("tm", Ut),
        _t.registerModifier("pb", Gt),
        _t.registerModifier("rp", jt),
        _t.registerModifier("rd", Yt),
        _t.registerModifier("zz", ne),
        _t.registerModifier("op", me),
        bt
      );
    })());
const c = A(u.exports);
function g(t, e = document) {
  return e.querySelector(t);
}
function f(t, e = document) {
  return Array.from(e.querySelectorAll(t));
}
function p(t, e) {
  return t.classList.add(e);
}
function m(t, e) {
  return t.classList.remove(e);
}
function v(t, e) {
  return t.classList.contains(e);
}
function E(t, e) {
  return (
    e instanceof Element
      ? t.appendChild(e)
      : t.insertAdjacentHTML("beforeend", String(e)),
    t.lastElementChild || t.lastChild
  );
}
function y(t) {
  return t.parentNode.removeChild(t);
}
function I(t, e, i) {
  return (t.style[e] = i), t;
}
function C(t, e) {
  for (const i in e) I(t, i, e[i]);
  return t;
}
function B(t, e, i = !0) {
  const r = window.getComputedStyle(t, null).getPropertyValue(e);
  return i ? parseFloat(r) : r;
}
function k(t) {
  return Array.from(t.parentElement.children).filter((e) => e !== t);
}
function x(t, e) {
  k(t).forEach((t) => m(t, e)), p(t, e);
}
function w(t, e, i = "top") {
  h ||
    (t.setAttribute("aria-label", e),
    t.setAttribute("role", "button"),
    p(t, "hint--rounded"),
    p(t, `hint--${i}`));
}
function Q(t, e = 0) {
  const i = t.getBoundingClientRect(),
    r = window.innerHeight || document.documentElement.clientHeight,
    a = window.innerWidth || document.documentElement.clientWidth,
    s = i.top - e <= r && i.top + i.height + e >= 0,
    n = i.left - e <= a + e && i.left + i.width + e >= 0;
  return s && n;
}
function S(t, e) {
  return t.composedPath && t.composedPath().indexOf(e) > -1;
}
function b(t, e) {
  return e.parentNode.replaceChild(t, e), t;
}
function D(t) {
  return document.createElement(t);
}
function R(t = "", e = "") {
  const i = D("div");
  return p(i, "art-icon"), p(i, `art-icon-${t}`), E(i, e), i;
}
function L(t, e, i) {
  const r = E(e, R(i));
  return [
    r,
    c.loadAnimation({
      name: i,
      container: r,
      renderer: "svg",
      loop: !1,
      autoplay: !1,
      animationData: t,
    }),
  ];
}
class T extends Error {
  constructor(t, e) {
    super(t),
      "function" == typeof Error.captureStackTrace &&
        Error.captureStackTrace(this, e || this.constructor),
      (this.name = "ArtPlayerError");
  }
}
function M(t, e) {
  if (!t) throw new T(e);
  return t;
}
function F(t) {
  return t.includes("?")
    ? F(t.split("?")[0])
    : t.includes("#")
    ? F(t.split("#")[0])
    : t.trim().toLowerCase().split(".").pop();
}
const P = Object.defineProperty,
  { hasOwnProperty: _ } = Object.prototype;
function N(t, e) {
  return _.call(t, e);
}
function U(t, e) {
  return Object.getOwnPropertyDescriptor(t, e);
}
function G(...t) {
  const e = (t) => t && "object" == typeof t && !Array.isArray(t);
  return t.reduce(
    (t, i) => (
      Object.keys(i).forEach((r) => {
        const a = t[r],
          s = i[r];
        Array.isArray(a) && Array.isArray(s)
          ? (t[r] = a.concat(...s))
          : e(a) && e(s)
          ? (t[r] = G(a, s))
          : (t[r] = s);
      }),
      t
    ),
    {}
  );
}
function O(t = 0) {
  return new Promise((e) => setTimeout(e, t));
}
function j(t, e) {
  let i;
  return function (...r) {
    clearTimeout(i), (i = setTimeout(() => ((i = null), t.apply(this, r)), e));
  };
}
function Y(t, e) {
  let i = !1;
  return function (...r) {
    i ||
      (t.apply(this, r),
      (i = !0),
      setTimeout(function () {
        i = !1;
      }, e));
  };
}
function H(t, e, i) {
  return Math.max(Math.min(t, Math.max(e, i)), Math.min(e, i));
}
function V(t) {
  return t.charAt(0).toUpperCase() + t.slice(1);
}
function K(t) {
  return ["string", "number"].includes(typeof t);
}
function z(t) {
  if (!t) return "00:00";
  const e = Math.floor(t / 3600),
    i = Math.floor((t - 3600 * e) / 60),
    r = Math.floor(t - 3600 * e - 60 * i);
  return (e > 0 ? [e, i, r] : [i, r])
    .map((t) => (t < 10 ? `0${t}` : String(t)))
    .join(":");
}
const q = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        ArtPlayerError: T,
        addClass: p,
        append: E,
        assToVtt: function (t) {
          const e = new RegExp(
            "Dialogue:\\s\\d,(\\d+:\\d\\d:\\d\\d.\\d\\d),(\\d+:\\d\\d:\\d\\d.\\d\\d),([^,]*),([^,]*),(?:[^,]*,){4}([\\s\\S]*)$",
            "i"
          );
          function i(t = "") {
            return t
              .split(/[:.]/)
              .map((t, e, i) => {
                if (e === i.length - 1) {
                  if (1 === t.length) return `.${t}00`;
                  if (2 === t.length) return `.${t}0`;
                } else if (1 === t.length) return (0 === e ? "0" : ":0") + t;
                return 0 === e ? t : e === i.length - 1 ? `.${t}` : `:${t}`;
              })
              .join("");
          }
          return `WEBVTT\n\n${t
            .split(/\r?\n/)
            .map((t) => {
              const r = t.match(e);
              return r
                ? {
                    start: i(r[1].trim()),
                    end: i(r[2].trim()),
                    text: r[5]
                      .replace(/{[\s\S]*?}/g, "")
                      .replace(/(\\N)/g, "\n")
                      .trim()
                      .split(/\r?\n/)
                      .map((t) => t.trim())
                      .join("\n"),
                  }
                : null;
            })
            .filter((t) => t)
            .map((t, e) =>
              t ? `${e + 1}\n${t.start} --\x3e ${t.end}\n${t.text}` : ""
            )
            .filter((t) => t.trim())
            .join("\n\n")}`;
        },
        capitalize: V,
        clamp: H,
        createAnimation: L,
        createElement: D,
        debounce: j,
        def: P,
        download: function (t, e) {
          const i = document.createElement("a");
          (i.style.display = "none"),
            (i.href = t),
            (i.download = e),
            document.body.appendChild(i),
            i.click(),
            document.body.removeChild(i);
        },
        errorHandle: M,
        escape: function (t) {
          return t.replace(
            /[&<>'"]/g,
            (t) =>
              ({
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                "'": "&#39;",
                '"': "&quot;",
              }[t] || t)
          );
        },
        get: U,
        getExt: F,
        getIcon: R,
        getStyle: B,
        has: N,
        hasClass: v,
        includeFromEvent: S,
        inverseClass: x,
        isAndroid: s,
        isBrowser: l,
        isIE: a,
        isIOS: n,
        isIOS13: o,
        isInViewport: Q,
        isMobile: h,
        isSafari: i,
        isStringOrNumber: K,
        isWechat: r,
        mergeDeep: G,
        query: g,
        queryAll: f,
        remove: y,
        removeClass: m,
        replaceElement: b,
        secondToTime: z,
        setStyle: I,
        setStyleText: function (t, e) {
          const i = document.getElementById(t);
          if (i) i.textContent = e;
          else {
            const i = D("style");
            (i.id = t), (i.textContent = e), document.head.appendChild(i);
          }
        },
        setStyles: C,
        sleep: O,
        srtToVtt: function (t) {
          return "WEBVTT \r\n\r\n".concat(
            ((e = t),
            e.replace(/(\d\d:\d\d:\d\d)[,.](\d+)/g, (t, e, i) => {
              let r = i.slice(0, 3);
              return (
                1 === i.length && (r = i + "00"),
                2 === i.length && (r = i + "0"),
                `${e},${r}`
              );
            }))
              .replace(/\{\\([ibu])\}/g, "</$1>")
              .replace(/\{\\([ibu])1\}/g, "<$1>")
              .replace(/\{([ibu])\}/g, "<$1>")
              .replace(/\{\/([ibu])\}/g, "</$1>")
              .replace(/(\d\d:\d\d:\d\d),(\d\d\d)/g, "$1.$2")
              .replace(/{[\s\S]*?}/g, "")
              .concat("\r\n\r\n")
          );
          var e;
        },
        sublings: k,
        throttle: Y,
        tooltip: w,
        unescape: function (t) {
          const e = {
              "&amp;": "&",
              "&lt;": "<",
              "&gt;": ">",
              "&#39;": "'",
              "&quot;": '"',
            },
            i = new RegExp(`(${Object.keys(e).join("|")})`, "g");
          return t.replace(i, (t) => e[t] || t);
        },
        userAgent: e,
        vttToBlob: function (t) {
          return URL.createObjectURL(new Blob([t], { type: "text/vtt" }));
        },
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  W = {
    propertys: [
      "audioTracks",
      "autoplay",
      "buffered",
      "controller",
      "controls",
      "crossOrigin",
      "currentSrc",
      "currentTime",
      "defaultMuted",
      "defaultPlaybackRate",
      "duration",
      "ended",
      "error",
      "loop",
      "mediaGroup",
      "muted",
      "networkState",
      "paused",
      "playbackRate",
      "played",
      "preload",
      "readyState",
      "seekable",
      "seeking",
      "src",
      "startDate",
      "textTracks",
      "videoTracks",
      "volume",
    ],
    methods: ["addTextTrack", "canPlayType", "load", "play", "pause"],
    events: [
      "abort",
      "canplay",
      "canplaythrough",
      "durationchange",
      "emptied",
      "ended",
      "error",
      "loadeddata",
      "loadedmetadata",
      "loadstart",
      "pause",
      "play",
      "playing",
      "progress",
      "ratechange",
      "seeked",
      "seeking",
      "stalled",
      "suspend",
      "timeupdate",
      "volumechange",
      "waiting",
    ],
    prototypes: [
      "width",
      "height",
      "videoWidth",
      "videoHeight",
      "poster",
      "webkitDecodedFrameCount",
      "webkitDroppedFrameCount",
      "playsInline",
      "webkitSupportsFullscreen",
      "webkitDisplayingFullscreen",
      "onenterpictureinpicture",
      "onleavepictureinpicture",
      "disablePictureInPicture",
      "cancelVideoFrameCallback",
      "requestVideoFrameCallback",
      "getVideoPlaybackQuality",
      "requestPictureInPicture",
      "webkitEnterFullScreen",
      "webkitEnterFullscreen",
      "webkitExitFullScreen",
      "webkitExitFullscreen",
    ],
  };
class J {
  constructor(t) {
    this.art = t;
    const { option: e, constructor: i } = t;
    e.container instanceof Element
      ? (this.$container = e.container)
      : ((this.$container = g(e.container)),
        M(this.$container, `No container element found by ${e.container}`));
    const r = this.$container.tagName.toLowerCase();
    M(
      "div" === r,
      `Unsupported container element type, only support 'div' but got '${r}'`
    ),
      M(
        i.instances.every((t) => t.template.$container !== this.$container),
        "Cannot mount multiple instances on the same dom element"
      ),
      (this.query = this.query.bind(this)),
      (this.$container.dataset.artId = t.id),
      (this.$original = this.$container.cloneNode(!0)),
      this.init();
  }
  static get html() {
    return '\n          <div class="art-video-player art-subtitle-show art-layer-show art-control-show art-mask-show">\n            <video class="art-video">\n              <track default kind="metadata" src=""></track>\n            </video>\n            <div class="art-poster"></div>\n            <div class="art-subtitle"></div>\n            <div class="art-danmuku"></div>\n            <div class="art-layers"></div>\n            <div class="art-mask">\n              <div class="art-state"></div>\n            </div>\n            <div class="art-head">\n              <div class="art-head-left"></div>\n              <div class="art-head-center"></div>\n              <div class="art-head-right"></div>\n            </div>\n            <div class="art-bottom">\n              <div class="art-progress"></div>\n              <div class="art-controls">\n                <div class="art-controls-left"></div>\n                <div class="art-controls-center"></div>\n                <div class="art-controls-right"></div>\n              </div>\n            </div>\n            <div class="art-loading"></div>\n            <div class="art-notice">\n              <div class="art-notice-inner"></div>\n            </div>\n            <div class="art-settings"></div>\n            <div class="art-info">\n              <div class="art-info-panel">\n              <div class="art-info-item art-info-title">统计信息</div>\n              <div class="art-info-item" data-video="currentSrc"></div>\n              <div class="art-info-item" data-video="type"></div>\n              <div class="art-info-item" data-video="duration"></div>\n              <div class="art-info-item" data-video="size"></div>\n              </div>\n              <div class="art-info-close">[x]</div>\n            </div>\n            <div class="art-contextmenus"></div>\n          </div>\n        ';
  }
  query(t) {
    return g(t, this.$container);
  }
  init() {
    const { option: t } = this.art;
    t.useSSR || (this.$container.innerHTML = J.html),
      (this.$player = this.query(".art-video-player")),
      (this.$video = this.query(".art-video")),
      (this.$track = this.query("track")),
      (this.$poster = this.query(".art-poster")),
      (this.$subtitle = this.query(".art-subtitle")),
      (this.$danmuku = this.query(".art-danmuku")),
      (this.$head = this.query(".art-head")),
      (this.$headRight = this.query(".art-head-right")),
      (this.$bottom = this.query(".art-bottom")),
      (this.$progress = this.query(".art-progress")),
      (this.$controls = this.query(".art-controls")),
      (this.$controlsLeft = this.query(".art-controls-left")),
      (this.$controlsCenter = this.query(".art-controls-center")),
      (this.$controlsRight = this.query(".art-controls-right")),
      (this.$layer = this.query(".art-layers")),
      (this.$loading = this.query(".art-loading")),
      (this.$notice = this.query(".art-notice")),
      (this.$noticeInner = this.query(".art-notice-inner")),
      (this.$mask = this.query(".art-mask")),
      (this.$state = this.query(".art-state")),
      (this.$setting = this.query(".art-settings")),
      (this.$info = this.query(".art-info")),
      (this.$infoPanel = this.query(".art-info-panel")),
      (this.$infoClose = this.query(".art-info-close")),
      (this.$contextmenu = this.query(".art-contextmenus")),
      t.backdrop && p(this.$player, "art-backdrop"),
      h && p(this.$player, "art-mobile");
  }
  destroy(t) {
    t ? b(this.$original, this.$container) : p(this.$player, "art-destroy");
  }
}
const Z = {
  "Video Info": "统计信息",
  Close: "关闭",
  "Video Load Failed": "加载失败",
  Volume: "音量",
  Play: "播放",
  Pause: "暂停",
  Rate: "速度",
  Mute: "静音",
  "Video Flip": "画面翻转",
  Horizontal: "水平",
  Vertical: "垂直",
  Reconnect: "重新连接",
  "Show Setting": "显示设置",
  "Hide Setting": "隐藏设置",
  Screenshot: "截图",
  "Play Speed": "倍速",
  "Aspect Ratio": "画面比例",
  Default: "默认",
  Normal: "正常",
  Open: "打开",
  "Switch Video": "切换",
  "Switch Subtitle": "切换字幕",
  Fullscreen: "全屏",
  "Exit Fullscreen": "退出全屏",
  "Web Fullscreen": "网页全屏",
  "Exit Web Fullscreen": "退出网页全屏",
  "Mini Player": "迷你播放器",
  "PIP Mode": "开启画中画",
  "Exit PIP Mode": "退出画中画",
  "PIP Not Supported": "不支持画中画",
  "Fullscreen Not Supported": "不支持全屏",
  "Subtitle Offset": "字幕偏移",
  "Last Seen": "已为你定位至",
  AirPlay: "隔空播放",
  "AirPlay Not Available": "隔空播放不可用",
  Theme: "主题颜色",
  Issue: "反馈",
};
"undefined" != typeof window && (window["artplayer-i18n-zh-cn"] = Z);
class X {
  constructor(t) {
    (this.art = t),
      (this.languages = { "zh-cn": Z }),
      (this.language = {}),
      this.update(t.option.i18n);
  }
  init() {
    const t = this.art.option.lang.toLowerCase();
    this.language = this.languages[t] || {};
  }
  get(t) {
    return this.language[t] || t;
  }
  update(t) {
    (this.languages = G(this.languages, t)), this.init();
  }
}
const $ = [
    [
      "requestFullscreen",
      "exitFullscreen",
      "fullscreenElement",
      "fullscreenEnabled",
      "fullscreenchange",
      "fullscreenerror",
    ],
    [
      "webkitRequestFullscreen",
      "webkitExitFullscreen",
      "webkitFullscreenElement",
      "webkitFullscreenEnabled",
      "webkitfullscreenchange",
      "webkitfullscreenerror",
    ],
    [
      "webkitRequestFullScreen",
      "webkitCancelFullScreen",
      "webkitCurrentFullScreenElement",
      "webkitCancelFullScreen",
      "webkitfullscreenchange",
      "webkitfullscreenerror",
    ],
    [
      "mozRequestFullScreen",
      "mozCancelFullScreen",
      "mozFullScreenElement",
      "mozFullScreenEnabled",
      "mozfullscreenchange",
      "mozfullscreenerror",
    ],
    [
      "msRequestFullscreen",
      "msExitFullscreen",
      "msFullscreenElement",
      "msFullscreenEnabled",
      "MSFullscreenChange",
      "MSFullscreenError",
    ],
  ],
  tt = (() => {
    if ("undefined" == typeof document) return !1;
    const t = $[0],
      e = {};
    for (const i of $) {
      if (i[1] in document) {
        for (const [r, a] of i.entries()) e[t[r]] = a;
        return e;
      }
    }
    return !1;
  })(),
  et = { change: tt.fullscreenchange, error: tt.fullscreenerror };
let it = {
  request: (t = document.documentElement, e) =>
    new Promise((i, r) => {
      const a = () => {
        it.off("change", a), i();
      };
      it.on("change", a);
      const s = t[tt.requestFullscreen](e);
      s instanceof Promise && s.then(a).catch(r);
    }),
  exit: () =>
    new Promise((t, e) => {
      if (!it.isFullscreen) return void t();
      const i = () => {
        it.off("change", i), t();
      };
      it.on("change", i);
      const r = document[tt.exitFullscreen]();
      r instanceof Promise && r.then(i).catch(e);
    }),
  toggle: (t, e) => (it.isFullscreen ? it.exit() : it.request(t, e)),
  onchange(t) {
    it.on("change", t);
  },
  onerror(t) {
    it.on("error", t);
  },
  on(t, e) {
    const i = et[t];
    i && document.addEventListener(i, e, !1);
  },
  off(t, e) {
    const i = et[t];
    i && document.removeEventListener(i, e, !1);
  },
  raw: tt,
};
Object.defineProperties(it, {
  isFullscreen: { get: () => Boolean(document[tt.fullscreenElement]) },
  element: { enumerable: !0, get: () => document[tt.fullscreenElement] },
  isEnabled: {
    enumerable: !0,
    get: () => Boolean(document[tt.fullscreenEnabled]),
  },
}),
  tt || (it = { isEnabled: !1 });
const rt = it;
function at(t) {
  const {
    i18n: e,
    notice: i,
    template: { $video: r, $player: a },
  } = t;
  t.once("video:loadedmetadata", () => {
    var s;
    rt.isEnabled
      ? ((s = t),
        rt.on("change", () => {
          s.emit("fullscreen", rt.isFullscreen);
        }),
        P(s, "fullscreen", {
          get: () => rt.isFullscreen,
          async set(t) {
            t
              ? ((s.state = "fullscreen"),
                await rt.request(a),
                p(a, "art-fullscreen"))
              : (await rt.exit(), m(a, "art-fullscreen")),
              s.emit("resize");
          },
        }))
      : document.fullscreenEnabled || r.webkitSupportsFullscreen
      ? ((t) => {
          P(t, "fullscreen", {
            get: () => r.webkitDisplayingFullscreen,
            set(e) {
              e
                ? ((t.state = "fullscreen"),
                  r.webkitEnterFullscreen(),
                  t.emit("fullscreen", !0))
                : (r.webkitExitFullscreen(), t.emit("fullscreen", !1)),
                t.emit("resize");
            },
          });
        })(t)
      : P(t, "fullscreen", {
          get: () => !1,
          set() {
            i.show = e.get("Fullscreen Not Supported");
          },
        }),
      P(t, "fullscreen", U(t, "fullscreen"));
  });
}
function st(t) {
  const {
    i18n: e,
    notice: i,
    template: { $video: r },
  } = t;
  document.pictureInPictureEnabled
    ? (function (t) {
        const {
          template: { $video: e },
          proxy: i,
          notice: r,
        } = t;
        (e.disablePictureInPicture = !1),
          P(t, "pip", {
            get: () => document.pictureInPictureElement,
            set(i) {
              i
                ? ((t.state = "pip"),
                  e.requestPictureInPicture().catch((t) => {
                    throw ((r.show = t), t);
                  }))
                : document.exitPictureInPicture().catch((t) => {
                    throw ((r.show = t), t);
                  });
            },
          }),
          i(e, "enterpictureinpicture", () => {
            t.emit("pip", !0);
          }),
          i(e, "leavepictureinpicture", () => {
            t.emit("pip", !1);
          });
      })(t)
    : r.webkitSupportsPresentationMode
    ? (function (t) {
        const { $video: e } = t.template;
        e.webkitSetPresentationMode("inline"),
          P(t, "pip", {
            get: () => "picture-in-picture" === e.webkitPresentationMode,
            set(i) {
              i
                ? ((t.state = "pip"),
                  e.webkitSetPresentationMode("picture-in-picture"),
                  t.emit("pip", !0))
                : (e.webkitSetPresentationMode("inline"), t.emit("pip", !1));
            },
          });
      })(t)
    : P(t, "pip", {
        get: () => !1,
        set() {
          i.show = e.get("PIP Not Supported");
        },
      });
}
class nt {
  constructor(t) {
    !(function (t) {
      const {
        option: e,
        template: { $video: i },
      } = t;
      P(t, "url", {
        get: () => i.src,
        async set(r) {
          if (r) {
            const a = t.url,
              s = e.type || F(r),
              n = e.customType[s];
            t.emit("url", r),
              s && n
                ? (await O(), (t.loading.show = !0), n.call(t, i, r, t))
                : (URL.revokeObjectURL(a), (i.src = r)),
              a !== t.url &&
                ((t.option.url = r),
                t.isReady &&
                  a &&
                  t.once("video:canplay", () => {
                    t.emit("restart", r);
                  }));
          } else await O(), (t.loading.show = !0);
        },
      });
    })(t),
      (function (t) {
        const {
          option: e,
          constructor: { instances: i },
          template: { $video: r },
        } = t;
        P(t, "play", {
          value: async function () {
            const a = await r.play();
            if ((t.emit("play"), e.mutex))
              for (let e = 0; e < i.length; e++) {
                const r = i[e];
                r !== t && r.pause();
              }
            return a;
          },
        });
      })(t),
      (function (t) {
        const {
          template: { $video: e },
        } = t;
        P(t, "pause", {
          value() {
            const i = e.pause();
            return t.emit("pause"), i;
          },
        });
      })(t),
      (function (t) {
        P(t, "toggle", { value: () => (t.playing ? t.pause() : t.play()) });
      })(t),
      (function (t) {
        P(t, "seek", {
          set(e) {
            (t.currentTime = e), t.emit("seek", t.currentTime);
          },
        }),
          P(t, "forward", {
            set(e) {
              t.seek = t.currentTime + e;
            },
          }),
          P(t, "backward", {
            set(e) {
              t.seek = t.currentTime - e;
            },
          });
      })(t),
      (function (t) {
        const {
          template: { $video: e },
          i18n: i,
          notice: r,
          storage: a,
        } = t;
        P(t, "volume", {
          get: () => e.volume || 0,
          set: (t) => {
            (e.volume = H(t, 0, 1)),
              (r.show = `${i.get("Volume")}: ${parseInt(100 * e.volume, 10)}`),
              0 !== e.volume && a.mediaSet("volume", e.volume);
          },
        }),
          P(t, "muted", {
            get: () => e.muted,
            set: (i) => {
              (e.muted = i), t.emit("muted", i);
            },
          });
      })(t),
      (function (t) {
        const { $video: e } = t.template;
        P(t, "currentTime", {
          get: () => e.currentTime || 0,
          set: (i) => {
            (i = parseFloat(i)),
              Number.isNaN(i) || (e.currentTime = H(i, 0, t.duration));
          },
        });
      })(t),
      (function (t) {
        P(t, "duration", {
          get: () => {
            const { duration: e } = t.template.$video;
            return e === 1 / 0 ? 0 : e || 0;
          },
        });
      })(t),
      (function (t) {
        function e(e, i) {
          return new Promise((r, a) => {
            if (e === t.url) return;
            const { playing: s, aspectRatio: n, playbackRate: o } = t;
            t.pause(),
              (t.url = e),
              (t.notice.show = ""),
              t.once("video:error", a),
              t.once("video:canplay", async () => {
                (t.playbackRate = o),
                  (t.aspectRatio = n),
                  (t.currentTime = i),
                  s && (await t.play()),
                  (t.notice.show = ""),
                  r();
              });
          });
        }
        P(t, "switchQuality", { value: (i) => e(i, t.currentTime) }),
          P(t, "switchUrl", { value: (t) => e(t, 0) }),
          P(t, "switch", { set: t.switchUrl });
      })(t),
      (function (t) {
        const {
          template: { $video: e },
          i18n: i,
          notice: r,
        } = t;
        P(t, "playbackRate", {
          get: () => e.playbackRate,
          set(a) {
            if (a) {
              if (a === e.playbackRate) return;
              (e.playbackRate = a),
                (r.show = `${i.get("Rate")}: ${
                  1 === a ? i.get("Normal") : `${a}x`
                }`);
            } else t.playbackRate = 1;
          },
        });
      })(t),
      (function (t) {
        const {
          i18n: e,
          notice: i,
          template: { $video: r, $player: a },
        } = t;
        P(t, "aspectRatio", {
          get: () => a.dataset.aspectRatio || "default",
          set(e) {
            if ((e || (e = "default"), "default" === e))
              I(r, "width", null),
                I(r, "height", null),
                I(r, "margin", null),
                delete a.dataset.aspectRatio;
            else {
              const t = e.split(":").map(Number),
                { clientWidth: i, clientHeight: s } = a,
                n = i / s,
                o = t[0] / t[1];
              n > o
                ? (I(r, "width", o * s + "px"),
                  I(r, "height", "100%"),
                  I(r, "margin", "0 auto"))
                : (I(r, "width", "100%"),
                  I(r, "height", i / o + "px"),
                  I(r, "margin", "auto 0")),
                (a.dataset.aspectRatio = e);
            }
            t.emit("aspectRatio", e);
          },
        });
      })(t),
      at(t),
      st(t),
      (function (t) {
        const { $video: e } = t.template;
        P(t, "loaded", { get: () => t.loadedTime / e.duration }),
          P(t, "loadedTime", {
            get: () =>
              e.buffered.length ? e.buffered.end(e.buffered.length - 1) : 0,
          });
      })(t),
      (function (t) {
        P(t, "played", { get: () => t.currentTime / t.duration });
      })(t),
      (function (t) {
        const { $video: e } = t.template;
        P(t, "playing", {
          get: () =>
            !!(e.currentTime > 0 && !e.paused && !e.ended && e.readyState > 2),
        });
      })(t),
      (function (t) {
        const { $container: e, $player: i, $video: r } = t.template;
        P(t, "autoSize", {
          value() {
            const { videoWidth: a, videoHeight: s } = r,
              { width: n, height: o } = e.getBoundingClientRect(),
              h = a / s;
            if (n / o > h)
              I(i, "width", ((o * h) / n) * 100 + "%"), I(i, "height", "100%");
            else {
              const t = (n / h / o) * 100;
              I(i, "width", "100%"), I(i, "height", `${t}%`);
            }
            t.emit("autoSize", { width: t.width, height: t.height });
          },
        });
      })(t),
      (function (t) {
        P(t, "rect", { get: () => t.template.$player.getBoundingClientRect() });
        const e = ["bottom", "height", "left", "right", "top", "width"];
        for (let i = 0; i < e.length; i++) {
          const r = e[i];
          P(t, r, { get: () => t.rect[r] });
        }
        P(t, "x", { get: () => t.left + window.pageXOffset }),
          P(t, "y", { get: () => t.top + window.pageYOffset });
      })(t),
      (function (t) {
        const {
          template: { $player: e },
          i18n: i,
          notice: r,
        } = t;
        P(t, "flip", {
          get: () => e.dataset.flip || "normal",
          set(a) {
            a || (a = "normal"),
              "normal" === a ? delete e.dataset.flip : (e.dataset.flip = a),
              (r.show = `${i.get("Video Flip")}: ${i.get(V(a))}`),
              t.emit("flip", a);
          },
        });
      })(t),
      (function (t) {
        const {
          template: { $poster: e },
        } = t;
        P(t, "poster", {
          get: () => {
            try {
              return e.style.backgroundImage.match(/"(.*)"/)[1];
            } catch (t) {
              return "";
            }
          },
          set(t) {
            I(e, "backgroundImage", `url(${t})`);
          },
        });
      })(t),
      (function (t) {
        const {
          template: { $container: e, $video: i },
        } = t;
        P(t, "autoHeight", {
          value() {
            const { clientWidth: r } = e,
              { videoHeight: a, videoWidth: s } = i,
              n = a * (r / s);
            I(e, "height", n + "px"), t.emit("autoHeight", n);
          },
        });
      })(t),
      (function (t) {
        const { $player: e } = t.template;
        P(t, "cssVar", {
          value: (t, i) =>
            i
              ? e.style.setProperty(t, i)
              : getComputedStyle(e).getPropertyValue(t),
        });
      })(t),
      (function (t) {
        P(t, "theme", {
          get: () => t.cssVar("--art-theme"),
          set(e) {
            t.cssVar("--art-theme", e);
          },
        });
      })(t),
      (function (t) {
        P(t, "type", {
          get: () => t.option.type,
          set(e) {
            t.option.type = e;
          },
        });
      })(t),
      (function (t) {
        const e = ["mini", "pip", "fullscreen", "fullscreenWeb"];
        P(t, "state", {
          get: () => e.find((e) => t[e]) || "standard",
          set(i) {
            for (let r = 0; r < e.length; r++) {
              const a = e[r];
              a !== i && t[a] && (t[a] = !1);
            }
          },
        });
      })(t),
      (function (t) {
        P(t, "quality", {
          set(e) {
            const { controls: i, notice: r, i18n: a } = t,
              s = e.find((t) => t.default) || e[0];
            i.update({
              name: "quality",
              position: "right",
              index: 10,
              style: { marginRight: "10px" },
              html: s ? s.html : "",
              selector: e,
              async onSelect(e) {
                await t.switchQuality(e.url),
                  (r.show = `${a.get("Switch Video")}: ${e.html}`);
              },
            });
          },
        });
      })(t),
      (function (t) {
        const {
          i18n: e,
          notice: i,
          option: r,
          constructor: a,
          proxy: s,
          template: { $player: n, $video: o, $poster: l },
        } = t;
        let A = 0;
        const d = "，请切换线路";
        for (let h = 0; h < W.events.length; h++)
          s(o, W.events[h], (e) => {
            t.emit(`video:${e.type}`, e);
          });
        t.on("video:canplay", () => {
          (A = 0), (t.loading.show = !1);
        }),
          t.once("video:canplay", () => {
            (t.loading.show = !1),
              (t.controls.show = !0),
              (t.mask.show = !0),
              (t.isReady = !0),
              t.emit("ready");
          }),
          t.on("video:ended", () => {
            r.loop
              ? ((t.seek = 0),
                t.play(),
                (t.controls.show = !1),
                (t.mask.show = !1))
              : ((t.controls.show = !0), (t.mask.show = !0));
          }),
          t.on("video:error", async (s) => {
            r.id === s.target.currentSrc
              ? (i.show = e.get("Video Load Failed") + d)
              : A < a.RECONNECT_TIME_MAX
              ? ((A += 1),
                t.emit("error", s, A),
                await O(a.RECONNECT_SLEEP_TIME),
                (i.show = `${e.get("Reconnect")}: ${A}`),
                (t.url = r.url))
              : ((A = 0),
                (t.mask.show = !0),
                (t.loading.show = !1),
                (t.controls.show = !0),
                p(n, "art-error"),
                await O(a.RECONNECT_SLEEP_TIME),
                (i.show = e.get("Video Load Failed") + d));
          }),
          t.on("video:loadedmetadata", () => {
            t.emit("resize"),
              h &&
                ((t.loading.show = !1),
                (t.controls.show = !0),
                (t.mask.show = !0));
          }),
          t.on("video:loadstart", () => {
            (t.loading.show = !0), (t.mask.show = !1), (t.controls.show = !0);
          }),
          t.on("video:pause", () => {
            (t.controls.show = !0), (t.mask.show = !0);
          }),
          t.on("video:play", () => {
            (t.mask.show = !1), I(l, "display", "none");
          }),
          t.on("video:playing", () => {
            t.mask.show = !1;
          }),
          t.on("video:progress", () => {
            t.playing && (t.loading.show = !1);
          }),
          t.on("video:seeked", () => {
            (t.loading.show = !1), (t.mask.show = !0);
          }),
          t.on("video:seeking", () => {
            (t.loading.show = !0), (t.mask.show = !1);
          }),
          t.on("video:timeupdate", () => {
            t.mask.show = !1;
          }),
          t.on("video:waiting", () => {
            (t.loading.show = !0), (t.mask.show = !1);
          });
      })(t),
      (function (t) {
        const {
          option: e,
          storage: i,
          template: { $video: r, $poster: a },
        } = t;
        e.muted && (t.muted = e.muted),
          e.volume && (r.volume = H(e.volume, 0, 1));
        const s = i.mediaGet("volume");
        "number" == typeof s && (r.volume = H(s, 0, 1)),
          e.poster && I(a, "backgroundImage", `url(${e.poster})`),
          e.autoplay && (r.autoplay = e.autoplay),
          e.playsInline &&
            ((r.playsInline = !0), (r["webkit-playsinline"] = !0)),
          e.theme && (e.cssVar["--art-theme"] = i.mediaGet("theme") || e.theme);
        for (const n in e.cssVar) t.cssVar(n, e.cssVar[n]);
        t.url = e.url;
      })(t);
  }
}
class ot {
  constructor(t) {
    (this.id = 0),
      (this.art = t),
      (this.cache = new Map()),
      (this.add = this.add.bind(this)),
      (this.remove = this.remove.bind(this)),
      (this.update = this.update.bind(this));
  }
  get show() {
    return v(this.art.template.$player, `art-${this.name}-show`);
  }
  set show(t) {
    const { $player: e } = this.art.template,
      i = `art-${this.name}-show`;
    t ? p(e, i) : m(e, i), this.art.emit(this.name, t);
  }
  toggle() {
    this.show = !this.show;
  }
  add(t) {
    const e = "function" == typeof t ? t(this.art) : t;
    if (((e.html = e.html || ""), !this.$parent || !this.name || e.disable))
      return;
    const i = e.name || `${this.name}${this.id}`;
    M(!this.cache.get(i), `Can't add an existing [${i}] to the [${this.name}]`),
      (this.id += 1);
    const r = D("div");
    p(r, `art-${this.name}`), p(r, `art-${this.name}-${i}`);
    const a = Array.from(this.$parent.children);
    r.dataset.index = e.index || this.id;
    const s = a.find((t) => Number(t.dataset.index) >= Number(r.dataset.index));
    s ? s.insertAdjacentElement("beforebegin", r) : E(this.$parent, r),
      e.html && E(r, e.html),
      e.style && C(r, e.style),
      e.tooltip && w(r, e.tooltip);
    const n = [];
    if (e.click) {
      const t = this.art.events.proxy(r, "click", (t) => {
        t.preventDefault(), e.click.call(this.art, this, t);
      });
      n.push(t);
    }
    return (
      e.selector &&
        ["left", "right"].includes(e.position) &&
        this.addSelector(e, r, n),
      (this[i] = r),
      this.cache.set(i, { $ref: r, events: n, option: e }),
      e.mounted && e.mounted.call(this.art, r),
      r
    );
  }
  addSelector(t, e, i) {
    const { hover: r, proxy: a } = this.art.events;
    p(e, "art-control-selector");
    const s = D("div");
    p(s, "art-selector-value"), E(s, t.html), (e.innerText = ""), E(e, s);
    const n = t.selector
        .map(
          (t, e) =>
            `<div class="art-selector-item ${
              t.default ? "art-current" : ""
            }" data-index="${e}">${t.html}</div>`
        )
        .join(""),
      o = D("div");
    p(o, "art-selector-list"), E(o, n), E(e, o);
    const h = () => {
      const t = B(e, "width") / 2 - B(o, "width") / 2;
      o.style.left = `${t}px`;
    };
    r(e, h);
    const l = a(o, "click", async (e) => {
      const i = (e.composedPath() || []).find((t) => v(t, "art-selector-item"));
      if (!i) return;
      x(i, "art-current");
      const r = Number(i.dataset.index),
        a = t.selector[r] || {};
      if (((s.innerText = i.innerText), t.onSelect)) {
        const r = await t.onSelect.call(this.art, a, i, e);
        K(r) && (s.innerHTML = r);
      }
      h();
    });
    i.push(l);
  }
  remove(t) {
    const e = this.cache.get(t);
    M(e, `Can't find [${t}] from the [${this.name}]`),
      e.option.beforeUnmount && e.option.beforeUnmount.call(this.art, e.$ref);
    for (let i = 0; i < e.events.length; i++)
      this.art.events.remove(e.events[i]);
    this.cache.delete(t), delete this[t], y(e.$ref);
  }
  update(t) {
    const e = this.cache.get(t.name);
    return (
      e && ((t = Object.assign(e.option, t)), this.remove(t.name)), this.add(t)
    );
  }
}
const ht = {
  v: "5.6.7",
  fr: 60,
  ip: 0,
  op: 60,
  w: 88,
  h: 88,
  nm: "全屏渐变",
  ddd: 0,
  assets: [],
  layers: [
    {
      ddd: 0,
      ind: 1,
      ty: 4,
      nm: "中心圆",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [44, 44, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: {
          a: 1,
          k: [
            {
              i: { x: [0.81, 0.81, 0.833], y: [1, 1, 1] },
              o: { x: [1, 1, 0.68], y: [0, 0, 0] },
              t: 2,
              s: [100, 100, 100],
            },
            {
              i: { x: [0.991, 0.991, 0.27], y: [1, 1, 1] },
              o: { x: [1, 1, 0.167], y: [-0.014, -0.014, 0] },
              t: 13,
              s: [184, 184, 100],
            },
            { t: 22, s: [100, 100, 100] },
          ],
          ix: 6,
        },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [-2.21, 0],
                    [-0.11, -2.12],
                    [0, 0],
                    [0, 0],
                    [2.14, 0],
                    [0, 2.21],
                  ],
                  o: [
                    [2.14, 0],
                    [0, 0],
                    [0, 0],
                    [-0.11, 2.12],
                    [-2.21, 0],
                    [0, -2.21],
                  ],
                  v: [
                    [0, -4],
                    [4, -0.2],
                    [4, 0],
                    [4, 0.2],
                    [0, 4],
                    [-4, 0],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 2,
      ty: 4,
      nm: "左扇形",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 6,
              s: [0],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 34,
              s: [0],
            },
            { t: 40, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [23.316, 27.897, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [-11.8, 5.91],
                    [0, 0],
                    [0, -4.7],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [-3.93, 1.97],
                    [0, 0],
                    [0, -14.1],
                  ],
                  v: [
                    [4.584, -16.103],
                    [15.314, 5.367],
                    [8.684, 16.107],
                    [-15.316, 16.107],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 3,
      ty: 4,
      nm: "右扇形",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 6,
              s: [0],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 34,
              s: [0],
            },
            { t: 40, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [64.684, 27.897, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, -14.1],
                    [0, 0],
                    [3.93, 1.97],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, -4.7],
                    [0, 0],
                    [11.79, 5.91],
                  ],
                  v: [
                    [15.314, 16.107],
                    [-8.686, 16.107],
                    [-15.316, 5.367],
                    [-4.576, -16.103],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 4,
      ty: 4,
      nm: "下扇形",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 6,
              s: [0],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 34,
              s: [0],
            },
            { t: 40, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [44, 66.323, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [-2.15, 2.08],
                    [0, 0],
                    [7.07, 0],
                    [5.56, 3.52],
                    [0, 0],
                    [-3.23, 0],
                  ],
                  o: [
                    [0, 0],
                    [-5.56, 3.52],
                    [-7.07, 0],
                    [0, 0],
                    [2.16, 2.08],
                    [3.23, 0],
                  ],
                  v: [
                    [8.319, -13.677],
                    [19.219, 8.123],
                    [-0.001, 13.673],
                    [-19.221, 8.123],
                    [-8.321, -13.677],
                    [-0.001, -10.327],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 5,
      ty: 4,
      nm: "左放射1",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            { t: 21, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 0,
              s: [31.995, 35.665, 0],
              to: [0.208, 0.208, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 4,
              s: [33.245, 36.915, 0],
              to: [0, 0, 0],
              ti: [0.625, 0.625, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 10,
              s: [31.995, 35.665, 0],
              to: [-0.625, -0.625, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 21,
              s: [29.495, 33.165, 0],
              to: [0, 0, 0],
              ti: [-0.417, -0.417, 0],
            },
            { t: 29, s: [31.995, 35.665, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, -4.55],
                    [0, 0],
                    [-6.32, 3.15],
                  ],
                  o: [
                    [-4.07, 2.03],
                    [0, 0],
                    [0, -7.06],
                    [0, 0],
                  ],
                  v: [
                    [6.635, -2.405],
                    [0.005, 8.335],
                    [-6.635, 8.335],
                    [3.675, -8.335],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 6,
      ty: 4,
      nm: "右放射1",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            { t: 21, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 0,
              s: [55.99, 35.665, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 4,
              s: [54.74, 36.915, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 10,
              s: [55.99, 35.665, 0],
              to: [0.417, -0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 21,
              s: [58.49, 33.165, 0],
              to: [0, 0, 0],
              ti: [0.417, -0.417, 0],
            },
            { t: 29, s: [55.99, 35.665, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [4.07, 2.03],
                    [0, 0],
                    [-0.32, -6.71],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, -4.55],
                    [0, 0],
                    [6, 3.01],
                    [0, 0],
                  ],
                  v: [
                    [6.62, 7.405],
                    [6.62, 8.335],
                    [0.01, 8.335],
                    [-6.62, -2.405],
                    [-3.62, -8.335],
                    [6.62, 7.405],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 7,
      ty: 4,
      nm: "下放射1",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            { t: 21, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 0,
              s: [44, 57.655, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 4,
              s: [44, 56.405, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 10,
              s: [44, 57.655, 0],
              to: [0, 0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 21,
              s: [44, 60.155, 0],
              to: [0, 0, 0],
              ti: [0, 0.417, 0],
            },
            { t: 29, s: [44, 57.655, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [3.26, 2.51],
                    [0, 0],
                    [-4.65, 4.47],
                    [0, 0],
                    [4.11, 0.01],
                  ],
                  o: [
                    [-4.11, 0.02],
                    [0, 0],
                    [4.65, 4.47],
                    [0, 0],
                    [-3.27, 2.5],
                    [0, 0],
                  ],
                  v: [
                    [0, 4.975],
                    [-11.38, 1.135],
                    [-8.32, -4.975],
                    [8.32, -4.975],
                    [11.38, 1.135],
                    [0, 4.975],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 8,
      ty: 4,
      nm: "左放射2",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 13,
              s: [30],
            },
            { t: 24, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 3,
              s: [25.73, 31.78, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 7,
              s: [26.98, 33.03, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 13,
              s: [25.73, 31.78, 0],
              to: [-0.417, -0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 24,
              s: [23.23, 29.28, 0],
              to: [0, 0, 0],
              ti: [-0.417, -0.417, 0],
            },
            { t: 32, s: [25.73, 31.78, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [-9.26, 4.63],
                    [0, 0],
                    [0.01, -7.86],
                  ],
                  o: [
                    [0, 0],
                    [0, -10.35],
                    [0, 0],
                    [-7.03, 3.5],
                    [0, 0],
                  ],
                  v: [
                    [-2.44, 12.22],
                    [-9.05, 12.22],
                    [6.05, -12.22],
                    [9.05, -6.31],
                    [-2.44, 12.22],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 9,
      ty: 4,
      nm: "右放射2",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 13,
              s: [30],
            },
            { t: 24, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 3,
              s: [62.275, 31.78, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 7,
              s: [61.025, 33.03, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 13,
              s: [62.275, 31.78, 0],
              to: [0.417, -0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 24,
              s: [64.775, 29.28, 0],
              to: [0, 0, 0],
              ti: [0.417, -0.417, 0],
            },
            { t: 32, s: [62.275, 31.78, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [6.71, 3.34],
                    [0, 0],
                    [0, 0],
                    [-0.49, -9.84],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [-0.36, -7.48],
                    [0, 0],
                    [0, 0],
                    [8.8, 4.42],
                    [0, 0],
                  ],
                  v: [
                    [9.015, 10.85],
                    [9.015, 12.22],
                    [2.435, 12.22],
                    [2.435, 11.22],
                    [-9.015, -6.31],
                    [-6.015, -12.22],
                    [-6.015, -12.22],
                    [9.015, 10.85],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 10,
      ty: 4,
      nm: "下放射2",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 13,
              s: [30],
            },
            { t: 24, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 3,
              s: [44.01, 65.965, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 7,
              s: [44.01, 64.715, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 13,
              s: [44.01, 65.965, 0],
              to: [0, 0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 24,
              s: [44.01, 68.465, 0],
              to: [0, 0, 0],
              ti: [0, 0.417, 0],
            },
            { t: 32, s: [44.01, 65.965, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [5.47, 0.01],
                    [4.52, 3.06],
                    [0, 0],
                    [-7.32, 5.43],
                    [0, 0],
                  ],
                  o: [
                    [-5.46, 0.01],
                    [0, 0],
                    [7.32, 5.43],
                    [0, 0],
                    [-4.52, 3.07],
                  ],
                  v: [
                    [-0.01, 5.345],
                    [-15.32, 0.655],
                    [-12.32, -5.345],
                    [12.32, -5.345],
                    [15.32, 0.655],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 11,
      ty: 4,
      nm: "左放射3",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 16,
              s: [30],
            },
            { t: 27, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 6,
              s: [19.45, 27.895, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 10,
              s: [20.7, 29.145, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 16,
              s: [19.45, 27.895, 0],
              to: [-0.417, -0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 27,
              s: [16.95, 25.395, 0],
              to: [0, 0, 0],
              ti: [-0.417, -0.417, 0],
            },
            { t: 35, s: [19.45, 27.895, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [-12.2, 6.1],
                    [0, 0],
                    [0, -11.13],
                  ],
                  o: [
                    [0, 0],
                    [0, -13.64],
                    [0, 0],
                    [-9.96, 4.96],
                    [0, 0],
                  ],
                  v: [
                    [-4.81, 16.105],
                    [-11.45, 16.105],
                    [8.45, -16.105],
                    [11.45, -10.165],
                    [-4.81, 16.105],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 12,
      ty: 4,
      nm: "右放射3",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 16,
              s: [30],
            },
            { t: 27, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 6,
              s: [68.58, 27.895, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 10,
              s: [67.33, 29.145, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 16,
              s: [68.58, 27.895, 0],
              to: [0.417, -0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 27,
              s: [71.08, 25.395, 0],
              to: [0, 0, 0],
              ti: [0.417, -0.417, 0],
            },
            { t: 35, s: [68.58, 27.895, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [9.48, 4.74],
                    [0, 0],
                    [0, -13.64],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [-0.53, -10.58],
                    [0, 0],
                    [12.2, 6.1],
                    [0, 0],
                  ],
                  v: [
                    [11.42, 16.105],
                    [4.78, 16.105],
                    [4.78, 14.635],
                    [-11.42, -10.165],
                    [-8.48, -16.105],
                    [11.42, 16.105],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 13,
      ty: 4,
      nm: "下放射3",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [100],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 10,
              s: [30],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 16,
              s: [30],
            },
            { t: 27, s: [100] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 0, ix: 10 },
        p: {
          a: 1,
          k: [
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 6,
              s: [44, 74.22, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 10,
              s: [44, 72.97, 0],
              to: [0, 0, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 16,
              s: [44, 74.22, 0],
              to: [0, 0.417, 0],
              ti: [0, 0, 0],
            },
            {
              i: { x: 0.833, y: 0.833 },
              o: { x: 0.167, y: 0.167 },
              t: 27,
              s: [44, 76.72, 0],
              to: [0, 0, 0],
              ti: [0, 0.417, 0],
            },
            { t: 35, s: [44, 74.22, 0] },
          ],
          ix: 2,
        },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [11.74, 7.41],
                    [0, 0],
                    [-9.83, 6.53],
                  ],
                  o: [
                    [-11.74, 7.41],
                    [0, 0],
                    [9.83, 6.53],
                    [0, 0],
                  ],
                  v: [
                    [19.22, 0.22],
                    [-19.22, 0.22],
                    [-16.22, -5.78],
                    [16.24, -5.78],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "路径",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: -1,
      op: 300,
      st: 0,
      bm: 0,
    },
  ],
  markers: [],
};
const lt = {
    v: "5.6.7",
    fr: 60,
    ip: 0,
    op: 61,
    w: 88,
    h: 88,
    nm: "小窗 hover 额外元素",
    ddd: 0,
    assets: [],
    layers: [
      {
        ddd: 0,
        ind: 1,
        ty: 4,
        nm: "路径",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 0,
                s: [0],
              },
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 10,
                s: [100],
              },
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 30,
                s: [100],
              },
              { t: 40, s: [0] },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 10,
                s: [30.496, 33.743, 0],
                to: [2.062, 1.833, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.667, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 20,
                s: [42.871, 44.743, 0],
                to: [0, 0, 0],
                ti: [2.062, 1.833, 0],
              },
              { t: 30, s: [30.496, 33.743, 0] },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [-0.78, -0.79],
                      [0, 0],
                      [0, 0],
                      [-1.04, 0.08],
                      [0, 0],
                      [0, 0],
                      [-0.08, -1.04],
                      [0, 0],
                      [0, 0],
                      [1.03, -0.07],
                      [0, 0],
                      [0, 0],
                      [0.08, 1.03],
                      [0, 0],
                      [0, 0],
                      [-1.04, 0.08],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [-0.79, 0.79],
                      [0, 0],
                    ],
                    o: [
                      [0, 0],
                      [0, 0],
                      [0, -1.06],
                      [0, 0],
                      [0, 0],
                      [1.05, 0],
                      [0, 0],
                      [0, 0],
                      [0, 1.05],
                      [0, 0],
                      [0, 0],
                      [-1.06, 0],
                      [0, 0],
                      [0, 0],
                      [0, -1.06],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [-0.79, -0.78],
                      [0, 0],
                      [0.79, -0.79],
                    ],
                    v: [
                      [-4.038, -9.809],
                      [2.282, -3.499],
                      [2.282, -7.6],
                      [4.132, -9.6],
                      [4.282, -9.6],
                      [8.282, -9.6],
                      [10.272, -7.749],
                      [10.282, -7.6],
                      [10.282, 8.4],
                      [8.432, 10.391],
                      [8.282, 10.4],
                      [-7.718, 10.4],
                      [-9.718, 8.551],
                      [-9.718, 8.4],
                      [-9.718, 4.4],
                      [-7.868, 2.4],
                      [-7.718, 2.4],
                      [-3.138, 2.4],
                      [-9.688, -4.16],
                      [-9.688, -6.99],
                      [-6.868, -9.809],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "路径",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 2,
        ty: 4,
        nm: "小窗",
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [67, 65, 0], ix: 2 },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 10,
                      s: [
                        {
                          i: [
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                          ],
                          o: [
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                          ],
                          v: [
                            [16, -8],
                            [16, 8],
                            [12, 12],
                            [-12, 12],
                            [-16, 8],
                            [-16, -8],
                            [-12, -12],
                            [12, -12],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 23,
                      s: [
                        {
                          i: [
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                          ],
                          o: [
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                          ],
                          v: [
                            [19, -4.875],
                            [19, 11.125],
                            [15, 15.125],
                            [-9, 15.125],
                            [-13, 11.125],
                            [-13, -4.875],
                            [-9, -8.875],
                            [15, -8.875],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      t: 40,
                      s: [
                        {
                          i: [
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                          ],
                          o: [
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                          ],
                          v: [
                            [16, -8],
                            [16, 8],
                            [12, 12],
                            [-12, 12],
                            [-16, 8],
                            [-16, -8],
                            [-12, -12],
                            [12, -12],
                          ],
                          c: !0,
                        },
                      ],
                    },
                  ],
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "Rectangle",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 3,
        ty: 4,
        nm: "路径",
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [41, 41, 0], ix: 2 },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 10,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [26, -28],
                            [34, -20],
                            [34, 4],
                            [26, 4],
                            [26, -16.8],
                            [22.8, -20],
                            [-22.8, -20],
                            [-25.99, -16.98],
                            [-26, -16.8],
                            [-26, 16.8],
                            [-22.98, 19.99],
                            [-22.8, 20],
                            [2, 20],
                            [2, 28],
                            [-26, 28],
                            [-34, 20],
                            [-34, -20],
                            [-26, -28],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 20,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [29.35, -21.5],
                            [37.35, -13.5],
                            [37.45, 8],
                            [29.45, 8],
                            [29.35, -10.3],
                            [26.15, -13.5],
                            [-17.45, -13.5],
                            [-20.64, -10.48],
                            [-20.65, -10.3],
                            [-20.7, 19.3],
                            [-17.68, 22.49],
                            [-17.5, 22.5],
                            [7.05, 22.5],
                            [7.05, 30.5],
                            [-20.7, 30.5],
                            [-28.7, 22.5],
                            [-28.65, -13.5],
                            [-20.65, -21.5],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 40,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [26, -28],
                            [34, -20],
                            [34, 4],
                            [26, 4],
                            [26, -16.8],
                            [22.8, -20],
                            [-22.8, -20],
                            [-25.99, -16.98],
                            [-26, -16.8],
                            [-26, 16.8],
                            [-22.98, 19.99],
                            [-22.8, 20],
                            [2, 20],
                            [2, 28],
                            [-26, 28],
                            [-34, 20],
                            [-34, -20],
                            [-26, -28],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      t: 50,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [26, -28],
                            [34, -20],
                            [34, 4],
                            [26, 4],
                            [26, -16.8],
                            [22.8, -20],
                            [-22.8, -20],
                            [-25.99, -16.98],
                            [-26, -16.8],
                            [-26, 16.8],
                            [-22.98, 19.99],
                            [-22.8, 20],
                            [2, 20],
                            [2, 28],
                            [-26, 28],
                            [-34, 20],
                            [-34, -20],
                            [-26, -28],
                          ],
                          c: !0,
                        },
                      ],
                    },
                  ],
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "路径",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
    ],
    markers: [],
  },
  At = {
    v: "5.6.7",
    fr: 60,
    ip: 0,
    op: 61,
    w: 88,
    h: 88,
    nm: "小窗 hover 额外元素退出 ",
    ddd: 0,
    assets: [],
    layers: [
      {
        ddd: 0,
        ind: 1,
        ty: 4,
        nm: "大框",
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [42, 44, 0], ix: 2 },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 10,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [26, -28],
                            [34, -20],
                            [34, 4],
                            [26, 4],
                            [26, -16.8],
                            [22.8, -20],
                            [-22.8, -20],
                            [-25.99, -16.98],
                            [-26, -16.8],
                            [-26, 16.8],
                            [-22.98, 19.99],
                            [-22.8, 20],
                            [2, 20],
                            [2, 28],
                            [-26, 28],
                            [-34, 20],
                            [-34, -20],
                            [-26, -28],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 23,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [15, -31.875],
                            [23, -23.875],
                            [23, -15.5],
                            [15, -15.5],
                            [15, -20.675],
                            [11.8, -23.875],
                            [-27.05, -23.875],
                            [-30.24, -20.855],
                            [-30.25, -20.675],
                            [-30.25, 8.05],
                            [-27.23, 11.24],
                            [-27.05, 11.25],
                            [-23.25, 11.25],
                            [-23.25, 19.25],
                            [-30.25, 19.25],
                            [-38.25, 11.25],
                            [-38.25, -23.875],
                            [-30.25, -31.875],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      t: 40,
                      s: [
                        {
                          i: [
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [1.77, 0],
                            [0, 0],
                            [0.09, -1.68],
                            [0, 0],
                            [0, 0],
                            [-1.68, -0.09],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 4.42],
                            [0, 0],
                            [-4.42, 0],
                          ],
                          o: [
                            [4.42, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -1.77],
                            [0, 0],
                            [-1.71, 0],
                            [0, 0],
                            [0, 0],
                            [0, 1.71],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [-4.42, 0],
                            [0, 0],
                            [0, -4.42],
                            [0, 0],
                          ],
                          v: [
                            [26, -28],
                            [34, -20],
                            [34, 4],
                            [26, 4],
                            [26, -16.8],
                            [22.8, -20],
                            [-22.8, -20],
                            [-25.99, -16.98],
                            [-26, -16.8],
                            [-26, 16.8],
                            [-22.98, 19.99],
                            [-22.8, 20],
                            [2, 20],
                            [2, 28],
                            [-26, 28],
                            [-34, 20],
                            [-34, -20],
                            [-26, -28],
                          ],
                          c: !0,
                        },
                      ],
                    },
                  ],
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "路径",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 2,
        ty: 4,
        nm: "箭头",
        td: 1,
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 0,
                s: [0],
              },
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 10,
                s: [100],
              },
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 30,
                s: [100],
              },
              { t: 40, s: [0] },
            ],
            ix: 11,
          },
          r: { a: 0, k: 180, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 10,
                s: [66.913, 68.947, 0],
                to: [-2.062, -1.833, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.667, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 20,
                s: [54.538, 57.947, 0],
                to: [0, 0, 0],
                ti: [-2.062, -1.833, 0],
              },
              { t: 30, s: [66.913, 68.947, 0] },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [-0.78, -0.79],
                      [0, 0],
                      [0, 0],
                      [-1.04, 0.08],
                      [0, 0],
                      [0, 0],
                      [-0.08, -1.04],
                      [0, 0],
                      [0, 0],
                      [1.03, -0.07],
                      [0, 0],
                      [0, 0],
                      [0.08, 1.03],
                      [0, 0],
                      [0, 0],
                      [-1.04, 0.08],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [-0.79, 0.79],
                      [0, 0],
                    ],
                    o: [
                      [0, 0],
                      [0, 0],
                      [0, -1.06],
                      [0, 0],
                      [0, 0],
                      [1.05, 0],
                      [0, 0],
                      [0, 0],
                      [0, 1.05],
                      [0, 0],
                      [0, 0],
                      [-1.06, 0],
                      [0, 0],
                      [0, 0],
                      [0, -1.06],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [-0.79, -0.78],
                      [0, 0],
                      [0.79, -0.79],
                    ],
                    v: [
                      [-4.038, -9.809],
                      [2.282, -3.499],
                      [2.282, -7.6],
                      [4.132, -9.6],
                      [4.282, -9.6],
                      [8.282, -9.6],
                      [10.272, -7.749],
                      [10.282, -7.6],
                      [10.282, 8.4],
                      [8.432, 10.391],
                      [8.282, 10.4],
                      [-7.718, 10.4],
                      [-9.718, 8.551],
                      [-9.718, 8.4],
                      [-9.718, 4.4],
                      [-7.868, 2.4],
                      [-7.718, 2.4],
                      [-3.138, 2.4],
                      [-9.688, -4.16],
                      [-9.688, -6.99],
                      [-6.868, -9.809],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "路径",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 3,
        ty: 4,
        nm: " 小窗",
        tt: 2,
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [68, 68, 0], ix: 2 },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 10,
                      s: [
                        {
                          i: [
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                          ],
                          o: [
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                          ],
                          v: [
                            [16, -8],
                            [16, 8],
                            [12, 12],
                            [-12, 12],
                            [-16, 8],
                            [-16, -8],
                            [-12, -12],
                            [12, -12],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      i: { x: 0, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 20,
                      s: [
                        {
                          i: [
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                          ],
                          o: [
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                          ],
                          v: [
                            [9.188, -30.25],
                            [9.188, 4.5],
                            [5.188, 8.5],
                            [-40.375, 8.625],
                            [-44.375, 4.625],
                            [-44.375, -30.125],
                            [-40.375, -34.125],
                            [5.188, -34.25],
                          ],
                          c: !0,
                        },
                      ],
                    },
                    {
                      t: 40,
                      s: [
                        {
                          i: [
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                          ],
                          o: [
                            [0, 0],
                            [0, 2.209],
                            [0, 0],
                            [-2.209, 0],
                            [0, 0],
                            [0, -2.209],
                            [0, 0],
                            [2.209, 0],
                          ],
                          v: [
                            [16, -8],
                            [16, 8],
                            [12, 12],
                            [-12, 12],
                            [-16, 8],
                            [-16, -8],
                            [-12, -12],
                            [12, -12],
                          ],
                          c: !0,
                        },
                      ],
                    },
                  ],
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "Rectangle",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
    ],
    markers: [],
  };
const dt = {
    v: "5.6.7",
    fr: 60,
    ip: 0,
    op: 60,
    w: 28,
    h: 28,
    nm: "暂停->播放",
    ddd: 0,
    assets: [],
    layers: [
      {
        ddd: 0,
        ind: 1,
        ty: 4,
        nm: "形状图层 3",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.67], y: [1] },
                o: { x: [0.33], y: [0] },
                t: 0,
                s: [100],
                e: [0],
              },
              { t: 10 },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0.67, y: 1 },
                o: { x: 1, y: 0 },
                t: 0,
                s: [14.6, 14, 0],
                e: [4, 14, 0],
                to: [1.583, 0, 0],
                ti: [0, 0, 0],
              },
              { t: 12 },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [0, 0],
                      [1.094, -0.781],
                      [0, 0],
                      [0, 0],
                      [-1.125, -0.75],
                      [0, 0],
                      [0, 0],
                      [0, 1.062],
                      [0, 0],
                    ],
                    o: [
                      [0, 0],
                      [-0.688, 0.562],
                      [0, 0],
                      [0, 0],
                      [1.125, 0.75],
                      [0, 0],
                      [0, 0],
                      [0, -1.062],
                      [0, 0],
                    ],
                    v: [
                      [-7.031, -10.875],
                      [-9.422, -10.469],
                      [-10, -7.992],
                      [-10, 8.016],
                      [-9, 10.992],
                      [-5, 10.031],
                      [7.969, 1.875],
                      [9, 0],
                      [7.969, -1.938],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 2",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
          {
            ty: "gr",
            it: [
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: -5,
        op: 88,
        st: -5,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 2,
        ty: 4,
        nm: "形状图层 2",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 11.199,
                s: [0],
                e: [100],
              },
              { t: 20.80078125 },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [24.812, 14, 0], ix: 2 },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: {
            a: 1,
            k: [
              {
                i: { x: [0.667, 0.667, 0.667], y: [0.809, 0.809, 1] },
                o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                t: 6.4,
                s: [0, 0, 100],
                e: [110, 110, 100],
              },
              {
                i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                o: { x: [0.333, 0.333, 0.333], y: [-0.525, -0.525, 0] },
                t: 16,
                s: [110, 110, 100],
                e: [90, 90, 100],
              },
              {
                i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                t: 20.801,
                s: [90, 90, 100],
                e: [100, 100, 100],
              },
              { t: 28 },
            ],
            ix: 6,
          },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [2.469, 0],
                      [0, 0],
                      [0, 0],
                      [-2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [-2.469, 0],
                      [0, 0],
                      [0, 0],
                      [2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    v: [
                      [-5.484, -10],
                      [-8, -7.984],
                      [-8.008, 7.984],
                      [-5.5, 9.992],
                      [-3.004, 7.996],
                      [-2.984, -8],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 1",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 4,
        op: 70,
        st: 4,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 3,
        ty: 4,
        nm: "形状图层 1",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.571], y: [1] },
                o: { x: [0.05], y: [0] },
                t: 4,
                s: [0],
                e: [100],
              },
              { t: 23.19921875 },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            s: !0,
            x: {
              a: 1,
              k: [
                {
                  i: { x: [0.889], y: [1] },
                  o: { x: [0.192], y: [0.965] },
                  t: 4,
                  s: [25],
                  e: [14],
                },
                { t: 23.19921875 },
              ],
              ix: 3,
            },
            y: {
              a: 1,
              k: [
                {
                  i: { x: [0.95], y: [1] },
                  o: { x: [0.05], y: [0] },
                  t: 4,
                  s: [14],
                  e: [14],
                },
                { t: 23.19921875 },
              ],
              ix: 4,
            },
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [2.469, 0],
                      [0, 0],
                      [0, 0],
                      [-2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [-2.469, 0],
                      [0, 0],
                      [0, 0],
                      [2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    v: [
                      [-5.484, -10],
                      [-8, -7.984],
                      [-8.008, 7.984],
                      [-5.5, 9.992],
                      [-3.004, 7.996],
                      [-2.984, -8],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 1",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 4,
        op: 70,
        st: 4,
        bm: 0,
      },
    ],
    markers: [],
  },
  ut = {
    v: "5.6.7",
    fr: 60,
    ip: 0,
    op: 60,
    w: 28,
    h: 28,
    nm: "播放->暂停",
    ddd: 0,
    assets: [],
    layers: [
      {
        ddd: 0,
        ind: 1,
        ty: 4,
        nm: "形状图层 1",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.667], y: [1] },
                o: { x: [0.333], y: [0] },
                t: 7.199,
                s: [0],
                e: [100],
              },
              { t: 26.400390625 },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0.667, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 4.801,
                s: [4, 14, 0],
                e: [14.6, 14, 0],
                to: [1.767, 0, 0],
                ti: [-1.583, 0, 0],
              },
              {
                i: { x: 0.667, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 24,
                s: [14.6, 14, 0],
                e: [13.5, 14, 0],
                to: [1.583, 0, 0],
                ti: [0.1, 0, 0],
              },
              {
                i: { x: 0.667, y: 1 },
                o: { x: 0.333, y: 0 },
                t: 28.801,
                s: [13.5, 14, 0],
                e: [14, 14, 0],
                to: [-0.1, 0, 0],
                ti: [-0.083, 0, 0],
              },
              { t: 38.400390625 },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [0, 0],
                      [1.094, -0.781],
                      [0, 0],
                      [0, 0],
                      [-1.125, -0.75],
                      [0, 0],
                      [0, 0],
                      [0, 1.062],
                      [0, 0],
                    ],
                    o: [
                      [0, 0],
                      [-0.688, 0.562],
                      [0, 0],
                      [0, 0],
                      [1.125, 0.75],
                      [0, 0],
                      [0, 0],
                      [0, -1.062],
                      [0, 0],
                    ],
                    v: [
                      [-7.031, -10.875],
                      [-9.422, -10.469],
                      [-10, -7.992],
                      [-10, 8.016],
                      [-9, 10.992],
                      [-5, 10.031],
                      [7.969, 1.875],
                      [9, 0],
                      [7.969, -1.938],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 2",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
          {
            ty: "gr",
            it: [
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 93,
        st: 0,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 2,
        ty: 4,
        nm: "形状图层 3",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.833], y: [0.833] },
                o: { x: [0.167], y: [0.167] },
                t: 0,
                s: [100],
                e: [0],
              },
              { t: 9.599609375 },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            s: !0,
            x: {
              a: 1,
              k: [
                {
                  i: { x: [0.259], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 0,
                  s: [8.75],
                  e: [19],
                },
                { t: 9.599609375 },
              ],
              ix: 3,
            },
            y: { a: 0, k: 14, ix: 4 },
          },
          a: { a: 0, k: [-5.25, 0, 0], ix: 1 },
          s: {
            a: 1,
            k: [
              {
                i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                t: 4.801,
                s: [100, 100, 100],
                e: [0, 0, 100],
              },
              { t: 16.80078125 },
            ],
            ix: 6,
          },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [2.469, 0],
                      [0, 0],
                      [0, 0],
                      [-2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [-2.469, 0],
                      [0, 0],
                      [0, 0],
                      [2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    v: [
                      [-5.484, -10],
                      [-8, -7.984],
                      [-8.008, 7.984],
                      [-5.5, 9.992],
                      [-3.004, 7.996],
                      [-2.984, -8],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 1",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 93,
        st: 0,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 3,
        ty: 4,
        nm: "形状图层 2",
        sr: 1,
        ks: {
          o: {
            a: 1,
            k: [
              {
                i: { x: [0.667], y: [1] },
                o: { x: [0.333], y: [0] },
                t: 0,
                s: [100],
                e: [0],
              },
              { t: 12 },
            ],
            ix: 11,
          },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [19.438, 14.125, 0], ix: 2 },
          a: { a: 0, k: [-5.375, 0.125, 0], ix: 1 },
          s: {
            a: 1,
            k: [
              {
                i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                t: 0,
                s: [100, 100, 100],
                e: [0, 0, 100],
              },
              { t: 16.80078125 },
            ],
            ix: 6,
          },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [2.469, 0],
                      [0, 0],
                      [0, 0],
                      [-2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [-2.469, 0],
                      [0, 0],
                      [0, 0],
                      [2.484, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    v: [
                      [-5.484, -10],
                      [-8, -7.984],
                      [-8.008, 7.984],
                      [-5.5, 9.992],
                      [-3.004, 7.996],
                      [-2.984, -8],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "st",
                c: { a: 0, k: [1, 1, 1, 1], ix: 3 },
                o: { a: 0, k: 100, ix: 4 },
                w: { a: 0, k: 0, ix: 5 },
                lc: 1,
                lj: 1,
                ml: 4,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Stroke",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "?? 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "?? 1",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: 0,
        op: 93,
        st: 0,
        bm: 0,
      },
    ],
    markers: [],
  };
function ct(t, e) {
  const { $progress: i } = t.template,
    { left: r } = i.getBoundingClientRect(),
    a = H((h ? e.touches[0].clientX : e.clientX) - r, 0, i.clientWidth),
    s = (a / i.clientWidth) * t.duration;
  return {
    second: s,
    time: z(s),
    width: a,
    percentage: H(a / i.clientWidth, 0, 1),
  };
}
function gt(t, e) {
  if (t.isRotate) {
    const i = e.touches[0].clientY / t.height,
      r = i * t.duration;
    t.emit("setBar", "played", i), (t.seek = r);
  } else {
    const { second: i, percentage: r } = ct(t, e);
    t.emit("setBar", "played", r), (t.seek = i);
  }
}
function ft(t) {
  return (e) => {
    const { icons: i, option: r, proxy: a } = e;
    return {
      ...t,
      html: '\n                <div class="art-control-progress-inner">\n                    <div class="art-progress-hover"></div>\n                    <div class="art-progress-loaded"></div>\n                    <div class="art-progress-played"></div>\n                    <div class="art-progress-highlight"></div>\n                    <div class="art-progress-indicator"></div>\n                    <div class="art-progress-tip"></div>\n                </div>\n            ',
      mounted: (t) => {
        let s = !1;
        const n = g(".art-progress-hover", t),
          o = g(".art-progress-loaded", t),
          l = g(".art-progress-played", t),
          A = g(".art-progress-highlight", t),
          d = g(".art-progress-indicator", t),
          u = g(".art-progress-tip", t);
        function c(t, e) {
          "loaded" === t && I(o, "width", 100 * e + "%"),
            "played" === t &&
              (I(l, "width", 100 * e + "%"), I(d, "left", 100 * e + "%"));
        }
        i.indicator
          ? E(d, i.indicator)
          : I(d, "backgroundColor", "var(--art-theme)"),
          e.on("video:loadedmetadata", () => {
            for (let t = 0; t < r.highlight.length; t++) {
              const i = r.highlight[t],
                a = (H(i.time, 0, e.duration) / e.duration) * 100,
                s = `<span data-text="${i.text}" data-time="${i.time}" style="left: ${a}%"></span>`;
              E(A, s);
            }
          }),
          c("loaded", e.loaded),
          e.on("setBar", (t, e) => {
            c(t, e);
          }),
          e.on("video:progress", () => {
            c("loaded", e.loaded);
          }),
          e.constructor.USE_RAF
            ? e.on("raf", () => {
                c("played", e.played);
              })
            : e.on("video:timeupdate", () => {
                c("played", e.played);
              }),
          e.on("video:ended", () => {
            c("played", 1);
          }),
          h ||
            (a(t, "click", (t) => {
              t.target !== d && gt(e, t);
            }),
            a(t, "mousemove", (i) => {
              !(function (t) {
                const { width: i } = ct(e, t);
                I(n, "width", `${i}px`), I(n, "display", "flex");
              })(i),
                I(u, "display", "flex"),
                S(i, A)
                  ? (function (i) {
                      const { width: r } = ct(e, i),
                        { text: a } = i.target.dataset;
                      u.innerHTML = a;
                      const s = u.clientWidth;
                      r <= s / 2
                        ? I(u, "left", 0)
                        : r > t.clientWidth - s / 2
                        ? I(u, "left", t.clientWidth - s + "px")
                        : I(u, "left", r - s / 2 + "px");
                    })(i)
                  : (function (i) {
                      const { width: r, time: a } = ct(e, i);
                      u.innerHTML = a;
                      const s = u.clientWidth;
                      r <= s / 2
                        ? I(u, "left", 0)
                        : r > t.clientWidth - s / 2
                        ? I(u, "left", t.clientWidth - s + "px")
                        : I(u, "left", r - s / 2 + "px");
                    })(i);
            }),
            a(t, "mouseleave", () => {
              I(u, "display", "none"), I(n, "display", "none");
            }),
            a(t, "mousedown", (t) => {
              s = 0 === t.button;
            }),
            e.on("document:mousemove", (t) => {
              if (s) {
                const { second: i, percentage: r } = ct(e, t);
                c("played", r), (e.seek = i);
              }
            }),
            e.on("document:mouseup", () => {
              s && (e.play(), (s = !1));
            }));
      },
    };
  };
}
const pt = {
    v: "5.6.7",
    fr: 60,
    ip: 0,
    op: 91,
    w: 88,
    h: 88,
    nm: "音量 hover",
    ddd: 0,
    assets: [
      {
        id: "comp_0",
        layers: [
          {
            ddd: 0,
            ind: 1,
            ty: 4,
            nm: "路径",
            parent: 8,
            sr: 1,
            ks: {
              o: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.167], y: [0] },
                    t: 2.5,
                    s: [100],
                  },
                  { t: 7.5, s: [0] },
                ],
                ix: 11,
              },
              r: { a: 0, k: 0, ix: 10 },
              p: { a: 0, k: [36.014, 0.007, 0], ix: 2 },
              a: { a: 0, k: [0, 0, 0], ix: 1 },
              s: { a: 0, k: [100, 100, 100], ix: 6 },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [-1.99, -0.95],
                          [0, -12.45],
                          [11.06, -5.27],
                          [0.95, 2],
                          [-1.99, 0.95],
                          [0, 9.35],
                          [8.28, 3.96],
                          [-0.95, 1.99],
                        ],
                        o: [
                          [11.04, 5.28],
                          [0, 12.46],
                          [-1.99, 0.95],
                          [-0.95, -1.99],
                          [8.3, -3.95],
                          [0, -9.34],
                          [-2, -0.95],
                          [0.95, -2],
                        ],
                        v: [
                          [-6.236, -28.896],
                          [11.984, -0.006],
                          [-6.266, 28.894],
                          [-11.596, 27.004],
                          [-9.706, 21.674],
                          [3.984, -0.006],
                          [-9.676, -21.676],
                          [-11.566, -27.006],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: -7,
            op: 28,
            st: -23,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 2,
            ty: 4,
            nm: "路径",
            parent: 8,
            sr: 1,
            ks: {
              o: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.167], y: [0] },
                    t: 0,
                    s: [100],
                  },
                  { t: 5, s: [0] },
                ],
                ix: 11,
              },
              r: { a: 0, k: 0, ix: 10 },
              p: { a: 0, k: [28, 0, 0], ix: 2 },
              a: { a: 0, k: [0, 0, 0], ix: 1 },
              s: { a: 0, k: [100, 100, 100], ix: 6 },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [0, 0],
                          [0, -5.92],
                          [4.78, -2.77],
                        ],
                        o: [
                          [4.78, 2.77],
                          [0, 5.92],
                          [0, 0],
                        ],
                        v: [
                          [-4, -13.859],
                          [4, 0.001],
                          [-4, 13.861],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: -7,
            op: 28,
            st: -23,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 3,
            ty: 4,
            nm: "外部音浪 2",
            parent: 8,
            sr: 1,
            ks: {
              o: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.333], y: [0] },
                    t: 28.334,
                    s: [0],
                  },
                  { t: 41.478515625, s: [100] },
                ],
                ix: 11,
              },
              r: { a: 0, k: 0, ix: 10 },
              p: {
                a: 1,
                k: [
                  {
                    i: { x: 0, y: 1 },
                    o: { x: 0.227, y: 1 },
                    t: 28.334,
                    s: [20.015, 0.007, 0],
                    to: [2.665, 0, 0],
                    ti: [-2.665, 0, 0],
                  },
                  { t: 46.48046875, s: [36.004, 0.007, 0] },
                ],
                ix: 2,
              },
              a: { a: 0, k: [0, 0, 0], ix: 1 },
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.333, 0.333, 0.333], y: [1.002, 1.002, 0] },
                    t: 28.334,
                    s: [79.017, 79.017, 100],
                  },
                  { t: 46.48046875, s: [100.021, 100.021, 100] },
                ],
                ix: 6,
              },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [-1.99, -0.95],
                          [0, -12.45],
                          [11.06, -5.27],
                          [0.95, 2],
                          [-1.99, 0.95],
                          [0, 9.35],
                          [8.28, 3.96],
                          [-0.95, 1.99],
                        ],
                        o: [
                          [11.04, 5.28],
                          [0, 12.46],
                          [-1.99, 0.95],
                          [-0.95, -1.99],
                          [8.3, -3.95],
                          [0, -9.34],
                          [-2, -0.95],
                          [0.95, -2],
                        ],
                        v: [
                          [-6.236, -28.896],
                          [11.984, -0.006],
                          [-6.266, 28.894],
                          [-11.596, 27.004],
                          [-9.706, 21.674],
                          [3.984, -0.006],
                          [-9.676, -21.676],
                          [-11.566, -27.006],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: 34,
            op: 131,
            st: 24,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 4,
            ty: 4,
            nm: "内部音浪 2",
            parent: 8,
            sr: 1,
            ks: {
              o: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.333], y: [0] },
                    t: 30.188,
                    s: [0],
                  },
                  { t: 43.333984375, s: [100] },
                ],
                ix: 11,
              },
              r: { a: 0, k: 0, ix: 10 },
              p: {
                a: 1,
                k: [
                  {
                    i: { x: 0, y: 1 },
                    o: { x: 0.201, y: 1 },
                    t: 30.188,
                    s: [12.749, 0, 0],
                    to: [2.542, 0, 0],
                    ti: [-2.542, 0, 0],
                  },
                  { t: 48.333984375, s: [28.003, 0, 0] },
                ],
                ix: 2,
              },
              a: { a: 0, k: [0, 0, 0], ix: 1 },
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.333, 0.333, 0.333], y: [1.058, 1.058, 0] },
                    t: 30.188,
                    s: [79.017, 79.017, 100],
                  },
                  { t: 48.333984375, s: [100.021, 100.021, 100] },
                ],
                ix: 6,
              },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [0, 0],
                          [0, -5.92],
                          [4.78, -2.77],
                        ],
                        o: [
                          [4.78, 2.77],
                          [0, 5.92],
                          [0, 0],
                        ],
                        v: [
                          [-4, -13.859],
                          [4, 0.001],
                          [-4, 13.861],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: 39,
            op: 129,
            st: 23,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 5,
            ty: 4,
            nm: "外部音浪",
            parent: 8,
            sr: 1,
            ks: {
              o: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.333], y: [0] },
                    t: 6.666,
                    s: [0],
                  },
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.167], y: [0] },
                    t: 14.465,
                    s: [100],
                  },
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.167], y: [0] },
                    t: 17.648,
                    s: [100],
                  },
                  { t: 26.3984375, s: [0] },
                ],
                ix: 11,
              },
              r: { a: 0, k: 0, ix: 10 },
              p: {
                a: 1,
                k: [
                  {
                    i: { x: 0, y: 1 },
                    o: { x: 0.333, y: 0.907 },
                    t: 6.666,
                    s: [20.015, 0.007, 0],
                    to: [3.859, 0, 0],
                    ti: [-3.859, 0, 0],
                  },
                  { t: 24.166015625, s: [43.171, 0.007, 0] },
                ],
                ix: 2,
              },
              a: { a: 0, k: [0, 0, 0], ix: 1 },
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.333, 0.333, 0.333], y: [0.336, 0.336, 0] },
                    t: 6.666,
                    s: [79.017, 79.017, 100],
                  },
                  { t: 24.166015625, s: [135.021, 135.021, 100] },
                ],
                ix: 6,
              },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [-1.99, -0.95],
                          [0, -12.45],
                          [11.06, -5.27],
                          [0.95, 2],
                          [-1.99, 0.95],
                          [0, 9.35],
                          [8.28, 3.96],
                          [-0.95, 1.99],
                        ],
                        o: [
                          [11.04, 5.28],
                          [0, 12.46],
                          [-1.99, 0.95],
                          [-0.95, -1.99],
                          [8.3, -3.95],
                          [0, -9.34],
                          [-2, -0.95],
                          [0.95, -2],
                        ],
                        v: [
                          [-6.236, -28.896],
                          [11.984, -0.006],
                          [-6.266, 28.894],
                          [-11.596, 27.004],
                          [-9.706, 21.674],
                          [3.984, -0.006],
                          [-9.676, -21.676],
                          [-11.566, -27.006],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: 8,
            op: 68,
            st: -2,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 6,
            ty: 4,
            nm: "内部音浪",
            parent: 8,
            sr: 1,
            ks: {
              o: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.333], y: [0] },
                    t: 10.533,
                    s: [0],
                  },
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.167], y: [0] },
                    t: 18.334,
                    s: [100],
                  },
                  {
                    i: { x: [0.833], y: [1] },
                    o: { x: [0.167], y: [0] },
                    t: 22.916,
                    s: [100],
                  },
                  { t: 31.666015625, s: [0] },
                ],
                ix: 11,
              },
              r: { a: 0, k: 0, ix: 10 },
              p: {
                a: 1,
                k: [
                  {
                    i: { x: 0, y: 1 },
                    o: { x: 0.296, y: 1 },
                    t: 10.533,
                    s: [12.749, 0, 0],
                    to: [3.209, 0, 0],
                    ti: [-3.209, 0, 0],
                  },
                  { t: 27.291015625, s: [32.003, 0, 0] },
                ],
                ix: 2,
              },
              a: { a: 0, k: [0, 0, 0], ix: 1 },
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.333, 0.333, 0.333], y: [0.346, 0.346, 0] },
                    t: 10.533,
                    s: [79.017, 79.017, 100],
                  },
                  { t: 27.291015625, s: [134.021, 134.021, 100] },
                ],
                ix: 6,
              },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [0, 0],
                          [0, -5.92],
                          [4.78, -2.77],
                        ],
                        o: [
                          [4.78, 2.77],
                          [0, 5.92],
                          [0, 0],
                        ],
                        v: [
                          [-4, -13.859],
                          [4, 0.001],
                          [-4, 13.861],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: 15,
            op: 68,
            st: -1,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 7,
            ty: 4,
            nm: " 主体 3",
            sr: 1,
            ks: {
              o: { a: 0, k: 100, ix: 11 },
              r: { a: 0, k: 0, ix: 10 },
              p: { a: 0, k: [44, 44.002, 0], ix: 2 },
              a: { a: 0, k: [16, 0.002, 0], ix: 1 },
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                    t: 0,
                    s: [100, 100, 100],
                  },
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.167, 0.167, 0.167], y: [0, 0, 0] },
                    t: 13.334,
                    s: [88, 88, 100],
                  },
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.167, 0.167, 0.167], y: [0, 0, 0] },
                    t: 30.834,
                    s: [88, 88, 100],
                  },
                  { t: 50, s: [100, 100, 100] },
                ],
                ix: 6,
              },
            },
            ao: 0,
            shapes: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [-0.69, -0.86],
                          [0, -0.45],
                          [0, 0],
                          [1.1, 0],
                          [0.36, 0.28],
                          [0, 0],
                          [0, 0],
                          [0, 4.42],
                          [0, 0],
                          [-4.42, 0],
                          [0, 0],
                          [0, 0],
                        ],
                        o: [
                          [0.29, 0.36],
                          [0, 0],
                          [0, 1.1],
                          [-0.45, 0],
                          [0, 0],
                          [0, 0],
                          [-4.42, 0],
                          [0, 0],
                          [0, -4.42],
                          [0, 0],
                          [0, 0],
                          [0.86, -0.69],
                        ],
                        v: [
                          [15.56, -25.089],
                          [16, -23.839],
                          [16, 23.841],
                          [14, 25.841],
                          [12.75, 25.401],
                          [-4, 12.001],
                          [-8, 12.001],
                          [-16, 4.001],
                          [-16, -3.999],
                          [-8, -11.999],
                          [-4, -11.999],
                          [12.75, -25.399],
                        ],
                        c: !0,
                      },
                      ix: 2,
                    },
                    nm: "路径 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: !1,
                  },
                  {
                    ty: "fl",
                    c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                    o: { a: 0, k: 100, ix: 5 },
                    r: 1,
                    bm: 0,
                    nm: "填充 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: !1,
                  },
                  {
                    ty: "tr",
                    p: { a: 0, k: [0, 0], ix: 2 },
                    a: { a: 0, k: [0, 0], ix: 1 },
                    s: { a: 0, k: [100, 100], ix: 3 },
                    r: { a: 0, k: 0, ix: 6 },
                    o: { a: 0, k: 100, ix: 7 },
                    sk: { a: 0, k: 0, ix: 4 },
                    sa: { a: 0, k: 0, ix: 5 },
                    nm: "变换",
                  },
                ],
                nm: "路径",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: !1,
              },
            ],
            ip: -8,
            op: 315,
            st: 15,
            bm: 0,
          },
          {
            ddd: 0,
            ind: 8,
            ty: 3,
            nm: " 主体 2",
            sr: 1,
            ks: {
              o: { a: 0, k: 100, ix: 11 },
              r: { a: 0, k: 0, ix: 10 },
              p: { a: 0, k: [44, 44.002, 0], ix: 2 },
              a: { a: 0, k: [16, 0.002, 0], ix: 1 },
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                    t: 0,
                    s: [100, 100, 100],
                  },
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.167, 0.167, 0.167], y: [0, 0, 0] },
                    t: 6.871,
                    s: [75, 75, 100],
                  },
                  {
                    i: { x: [0, 0, 0.833], y: [1, 1, 1] },
                    o: { x: [0.167, 0.167, 0.167], y: [0, 0, 0] },
                    t: 30.834,
                    s: [75, 75, 100],
                  },
                  { t: 50, s: [100, 100, 100] },
                ],
                ix: 6,
              },
            },
            ao: 0,
            ip: -8,
            op: 315,
            st: 15,
            bm: 0,
          },
        ],
      },
    ],
    layers: [
      {
        ddd: 0,
        ind: 1,
        ty: 0,
        nm: " 音量 hover 时间重映射",
        refId: "comp_0",
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: { a: 0, k: [44, 44, 0], ix: 2 },
          a: { a: 0, k: [44, 44, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        tm: {
          a: 1,
          k: [
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 0,
              s: [0],
            },
            {
              i: { x: [0.833], y: [0.833] },
              o: { x: [0.167], y: [0.167] },
              t: 60,
              s: [1],
            },
            { t: 300, s: [5] },
          ],
          ix: 2,
        },
        w: 88,
        h: 88,
        ip: 0,
        op: 300,
        st: 0,
        bm: 0,
      },
    ],
    markers: [],
  },
  mt = {
    v: "5.6.7",
    fr: 60,
    ip: 0,
    op: 60,
    w: 88,
    h: 88,
    nm: "静音消除hover",
    ddd: 0,
    assets: [],
    layers: [
      {
        ddd: 0,
        ind: 1,
        ty: 4,
        nm: "Path 4",
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0.502, y: 0 },
                o: { x: 0.167, y: 0 },
                t: 0,
                s: [41.172, 46.828, 0],
                to: [0.417, 0.417, 0],
                ti: [0.417, 0.5, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.333, y: 0.205 },
                t: 8.666,
                s: [43.672, 49.328, 0],
                to: [-0.417, -0.5, 0],
                ti: [0.417, 0.417, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.167, y: 0 },
                t: 14,
                s: [38.672, 43.828, 0],
                to: [-0.417, -0.417, 0],
                ti: [-0.417, -0.5, 0],
              },
              {
                i: { x: 0, y: 0 },
                o: { x: 0.167, y: 0.167 },
                t: 16.666,
                s: [41.172, 46.828, 0],
                to: [0, 0, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.502, y: 0 },
                o: { x: 0.167, y: 0 },
                t: 22.666,
                s: [41.172, 46.828, 0],
                to: [0.417, 0.417, 0],
                ti: [0.417, 0.5, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.333, y: 0.205 },
                t: 31.334,
                s: [43.672, 49.328, 0],
                to: [-0.417, -0.5, 0],
                ti: [0.417, 0.417, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.167, y: 0 },
                t: 36.666,
                s: [38.672, 43.828, 0],
                to: [-0.417, -0.417, 0],
                ti: [-0.417, -0.5, 0],
              },
              { t: 40, s: [41.172, 46.828, 0] },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    v: [
                      [-36.77, -31.11],
                      [-31.11, -36.77],
                      [36.77, 31.11],
                      [31.11, 36.77],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "rd",
                nm: "圆角 1",
                r: { a: 0, k: 4, ix: 1 },
                ix: 2,
                mn: "ADBE Vector Filter - RC",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [-0.5, -0.5], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "Path",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: -66,
        op: 183,
        st: -83,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 2,
        ty: 4,
        nm: "Path 3",
        td: 1,
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0.222, y: 0 },
                o: { x: 0.167, y: 0 },
                t: 0,
                s: [47.422, 41.703, 0],
                to: [0.667, 0.667, 0],
                ti: [0.417, 0.5, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.333, y: 0.159 },
                t: 8.666,
                s: [51.422, 45.703, 0],
                to: [-0.417, -0.5, 0],
                ti: [0.667, 0.667, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.167, y: 0 },
                t: 14,
                s: [44.922, 38.703, 0],
                to: [-0.667, -0.667, 0],
                ti: [-0.417, -0.5, 0],
              },
              {
                i: { x: 0, y: 0 },
                o: { x: 0.167, y: 0.167 },
                t: 16.666,
                s: [47.422, 41.703, 0],
                to: [0, 0, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.222, y: 0 },
                o: { x: 0.167, y: 0 },
                t: 22.666,
                s: [47.422, 41.703, 0],
                to: [0.667, 0.667, 0],
                ti: [0.417, 0.5, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.333, y: 0.159 },
                t: 31.334,
                s: [51.422, 45.703, 0],
                to: [-0.417, -0.5, 0],
                ti: [0.667, 0.667, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.167, y: 0 },
                t: 36.666,
                s: [44.922, 38.703, 0],
                to: [-0.667, -0.667, 0],
                ti: [-0.417, -0.5, 0],
              },
              { t: 40, s: [47.422, 41.703, 0] },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    v: [
                      [-36.77, -31.11],
                      [-31.11, -36.77],
                      [36.77, 31.11],
                      [31.11, 36.77],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "rd",
                nm: "圆角 1",
                r: { a: 0, k: 4, ix: 1 },
                ix: 2,
                mn: "ADBE Vector Filter - RC",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [-0.5, -0.5], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "Path",
            np: 3,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: -66,
        op: 183,
        st: -83,
        bm: 0,
      },
      {
        ddd: 0,
        ind: 3,
        ty: 4,
        nm: "形状",
        tt: 2,
        sr: 1,
        ks: {
          o: { a: 0, k: 100, ix: 11 },
          r: { a: 0, k: 0, ix: 10 },
          p: {
            a: 1,
            k: [
              {
                i: { x: 0.333, y: 0.876 },
                o: { x: 0.167, y: 0 },
                t: 0,
                s: [44, 44, 0],
                to: [1.167, 1.25, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.667, y: 0.884 },
                o: { x: 0.275, y: 0.021 },
                t: 7.334,
                s: [51, 51.5, 0],
                to: [0, 0, 0],
                ti: [-0.352, -0.352, 0],
              },
              {
                i: { x: 0.833, y: 1 },
                o: { x: 0.111, y: 0.066 },
                t: 12.666,
                s: [38.039, 38.539, 0],
                to: [0.748, 0.748, 0],
                ti: [-0.417, -0.417, 0],
              },
              {
                i: { x: 0, y: 1 },
                o: { x: 0.167, y: 0 },
                t: 16.666,
                s: [44, 44, 0],
                to: [0.133, 0.133, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.333, y: 0.904 },
                o: { x: 0.167, y: 0 },
                t: 22.666,
                s: [44, 44, 0],
                to: [1.667, 1.75, 0],
                ti: [0, 0, 0],
              },
              {
                i: { x: 0.667, y: 0.923 },
                o: { x: 0.275, y: 0.014 },
                t: 30.666,
                s: [54, 54.5, 0],
                to: [0, 0, 0],
                ti: [-0.352, -0.352, 0],
              },
              {
                i: { x: 0.833, y: 1 },
                o: { x: 0.111, y: 0.04 },
                t: 36,
                s: [34.289, 34.789, 0],
                to: [0.748, 0.748, 0],
                ti: [-0.417, -0.417, 0],
              },
              { t: 40, s: [44, 44, 0] },
            ],
            ix: 2,
          },
          a: { a: 0, k: [0, 0, 0], ix: 1 },
          s: { a: 0, k: [100, 100, 100], ix: 6 },
        },
        ao: 0,
        shapes: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [0, 0],
                      [0, -5.92],
                      [4.78, -2.77],
                    ],
                    o: [
                      [4.78, 2.77],
                      [0, 5.92],
                      [0, 0],
                    ],
                    v: [
                      [8, -13.866],
                      [16, -0.006],
                      [8, 13.854],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 1",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ind: 1,
                ty: "sh",
                ix: 2,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [-1.99, -0.95],
                      [0, -12.45],
                      [11.06, -5.27],
                      [0.95, 2],
                      [-1.99, 0.95],
                      [0, 9.35],
                      [8.28, 3.96],
                      [-0.95, 1.99],
                    ],
                    o: [
                      [11.04, 5.28],
                      [0, 12.46],
                      [-1.99, 0.95],
                      [-0.95, -1.99],
                      [8.3, -3.95],
                      [0, -9.34],
                      [-2, -0.95],
                      [0.95, -2],
                    ],
                    v: [
                      [13.778, -28.896],
                      [31.998, -0.006],
                      [13.748, 28.894],
                      [8.418, 27.004],
                      [10.308, 21.674],
                      [23.998, -0.006],
                      [10.338, -21.676],
                      [8.448, -27.006],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 2",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ind: 2,
                ty: "sh",
                ix: 3,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [-0.69, -0.86],
                      [0, -0.45],
                      [0, 0],
                      [1.1, 0],
                      [0.36, 0.28],
                      [0, 0],
                      [0, 0],
                      [0, 4.42],
                      [0, 0],
                      [-4.42, 0],
                      [0, 0],
                      [0, 0],
                    ],
                    o: [
                      [0.29, 0.36],
                      [0, 0],
                      [0, 1.1],
                      [-0.45, 0],
                      [0, 0],
                      [0, 0],
                      [-4.42, 0],
                      [0, 0],
                      [0, -4.42],
                      [0, 0],
                      [0, 0],
                      [0.86, -0.69],
                    ],
                    v: [
                      [-0.44, -25.096],
                      [0, -23.846],
                      [0, 23.834],
                      [-2, 25.834],
                      [-3.25, 25.394],
                      [-20, 11.994],
                      [-24, 11.994],
                      [-32, 3.994],
                      [-32, -4.006],
                      [-24, -12.006],
                      [-20, -12.006],
                      [-3.25, -25.406],
                    ],
                    c: !0,
                  },
                  ix: 2,
                },
                nm: "路径 3",
                mn: "ADBE Vector Shape - Group",
                hd: !1,
              },
              {
                ty: "mm",
                mm: 1,
                nm: "合并路径 1",
                mn: "ADBE Vector Filter - Merge",
                hd: !1,
              },
              {
                ty: "fl",
                c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
                o: { a: 0, k: 100, ix: 5 },
                r: 1,
                bm: 0,
                nm: "填充 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: !1,
              },
              {
                ty: "tr",
                p: { a: 0, k: [0, 0], ix: 2 },
                a: { a: 0, k: [0, 0], ix: 1 },
                s: { a: 0, k: [100, 100], ix: 3 },
                r: { a: 0, k: 0, ix: 6 },
                o: { a: 0, k: 100, ix: 7 },
                sk: { a: 0, k: 0, ix: 4 },
                sa: { a: 0, k: 0, ix: 5 },
                nm: "变换",
              },
            ],
            nm: "形状",
            np: 5,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: !1,
          },
        ],
        ip: -83,
        op: 239,
        st: -83,
        bm: 0,
      },
    ],
    markers: [],
  };
const vt = {
  v: "5.6.7",
  fr: 60,
  ip: 0,
  op: 60,
  w: 88,
  h: 88,
  nm: "设置流畅",
  ddd: 0,
  assets: [],
  layers: [
    {
      ddd: 0,
      ind: 1,
      ty: 4,
      nm: "形状",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: {
          a: 1,
          k: [
            { i: { x: [0], y: [1] }, o: { x: [0.333], y: [0] }, t: 0, s: [0] },
            { t: 40, s: [120] },
          ],
          ix: 10,
        },
        p: { a: 0, k: [44, 43.875, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: {
          a: 1,
          k: [
            {
              i: { x: [0, 0, 0.833], y: [1, 1, 1] },
              o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
              t: 0,
              s: [100, 100, 100],
            },
            {
              i: { x: [0, 0, 0.833], y: [1, 1, 1] },
              o: { x: [0.167, 0.167, 0.167], y: [0, 0, 0] },
              t: 10.668,
              s: [88, 88, 100],
            },
            {
              i: { x: [0, 0, 0.833], y: [1, 1, 1] },
              o: { x: [0.167, 0.167, 0.167], y: [0, 0, 0] },
              t: 22,
              s: [88, 88, 100],
            },
            { t: 40, s: [100, 100, 100] },
          ],
          ix: 6,
        },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [1.55, 0],
                    [1.48, 0.24],
                    [0, 0],
                    [1.69, 0.98],
                    [0, 0],
                    [-0.69, 1.83],
                    [0, 0],
                    [1.16, 3.05],
                    [0, 0],
                    [0, 1.95],
                    [0, 0],
                    [-1.93, 0.32],
                    [0, 0],
                    [-2.03, 2.48],
                    [0, 0],
                    [-1.69, 0.98],
                    [0, 0],
                    [-1.25, -1.51],
                    [0, 0],
                    [-1.74, 0],
                    [-1.65, -0.31],
                    [0, 0],
                    [-1.69, -0.98],
                    [0, 0],
                    [0.68, -1.84],
                    [0, 0],
                    [-1.09, -3.08],
                    [0, 0],
                    [0, -1.95],
                    [0, 0],
                    [1.93, -0.32],
                    [0, 0],
                    [2.09, -2.44],
                    [0, 0],
                    [1.69, -0.98],
                    [0, 0],
                    [1.24, 1.51],
                  ],
                  o: [
                    [-1.48, 0.24],
                    [-1.55, 0],
                    [0, 0],
                    [-1.24, 1.51],
                    [0, 0],
                    [-1.69, -0.98],
                    [0, 0],
                    [-2.09, -2.44],
                    [0, 0],
                    [-1.93, -0.32],
                    [0, 0],
                    [0, -1.95],
                    [0, 0],
                    [1.09, -3.08],
                    [0, 0],
                    [-0.68, -1.84],
                    [0, 0],
                    [1.69, -0.98],
                    [0, 0],
                    [1.65, -0.31],
                    [1.74, 0],
                    [0, 0],
                    [1.25, -1.51],
                    [0, 0],
                    [1.69, 0.98],
                    [0, 0],
                    [2.03, 2.48],
                    [0, 0],
                    [1.93, 0.32],
                    [0, 0],
                    [0, 1.95],
                    [0, 0],
                    [-1.16, 3.05],
                    [0, 0],
                    [0.69, 1.83],
                    [0, 0],
                    [-1.69, 0.98],
                    [0, 0],
                  ],
                  v: [
                    [4.54, 27.511],
                    [0, 27.871],
                    [-4.54, 27.511],
                    [-8.7, 32.561],
                    [-13.79, 33.481],
                    [-21.78, 28.871],
                    [-23.52, 24.001],
                    [-21.29, 18.061],
                    [-26.21, 9.761],
                    [-32.66, 8.681],
                    [-36, 4.741],
                    [-36, -4.489],
                    [-32.66, -8.429],
                    [-26.4, -9.479],
                    [-21.66, -17.869],
                    [-23.96, -23.999],
                    [-22.21, -28.869],
                    [-14.22, -33.479],
                    [-9.13, -32.559],
                    [-5.1, -27.659],
                    [0, -28.129],
                    [5.1, -27.659],
                    [9.13, -32.559],
                    [14.22, -33.479],
                    [22.21, -28.869],
                    [23.96, -23.999],
                    [21.66, -17.869],
                    [26.4, -9.479],
                    [32.66, -8.429],
                    [36, -4.489],
                    [36, 4.741],
                    [32.66, 8.681],
                    [26.21, 9.761],
                    [21.29, 18.061],
                    [23.52, 24.001],
                    [21.78, 28.871],
                    [13.79, 33.481],
                    [8.7, 32.561],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ind: 1,
              ty: "sh",
              ix: 2,
              ks: {
                a: 0,
                k: {
                  i: [
                    [-8.84, 0],
                    [0, 8.84],
                    [8.84, 0],
                    [0, -8.84],
                  ],
                  o: [
                    [8.84, 0],
                    [0, -8.84],
                    [-8.84, 0],
                    [0, 8.84],
                  ],
                  v: [
                    [0, 16.125],
                    [16, 0.125],
                    [0, -15.875],
                    [-16, 0.125],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 2",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ind: 2,
              ty: "sh",
              ix: 3,
              ks: {
                a: 0,
                k: {
                  i: [
                    [4.42, 0],
                    [0, 4.42],
                    [-4.42, 0],
                    [0, -4.42],
                  ],
                  o: [
                    [-4.42, 0],
                    [0, -4.42],
                    [4.42, 0],
                    [0, 4.42],
                  ],
                  v: [
                    [0, 8.125],
                    [-8, 0.125],
                    [0, -7.875],
                    [8, 0.125],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 3",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "mm",
              mm: 1,
              nm: "合并路径 1",
              mn: "ADBE Vector Filter - Merge",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [1, 1, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状",
          np: 5,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 300,
      st: 0,
      bm: 0,
    },
  ],
  markers: [],
};
function Et(t) {
  return (e) => {
    const {
      i18n: i,
      constructor: { SETTING_ITEM_WIDTH: r, PLAYBACK_RATE: a },
    } = e;
    return {
      ...t,
      html: i.get("Play Speed"),
      selector: a.map((t) => {
        const i = Number(t);
        return {
          value: i,
          name: `aspect-ratio-${t}`,
          default: i === e.playbackRate,
          html: `${t}x`,
        };
      }),
      onSelect(t) {
        return (
          (e.playbackRate = t.value),
          "1.0x" === (r = t.html) ? i.get("Play Speed") : r
        );
        var r;
      },
    };
  };
}
class yt extends ot {
  constructor(t) {
    super(t), (this.name = "control"), (this.timer = Date.now());
    const {
        constructor: e,
        events: { hover: i },
      } = t,
      { $player: r, $controls: a } = this.art.template;
    t.on("mousemove", () => {
      h || (this.show = !0);
    }),
      i(
        a,
        () => (t.isInput = !0),
        () => (t.isInput = !1)
      ),
      t.on("click", () => {
        h ? this.toggle() : (this.show = !0);
      }),
      t.on("video:timeupdate", () => {
        t.isInput,
          !t.isInput &&
            t.playing &&
            this.show &&
            Date.now() - this.timer >= e.CONTROL_HIDE_TIME &&
            (this.show = !1);
      }),
      t.on("control", (t) => {
        t
          ? (m(r, "art-hide-cursor"),
            p(r, "art-hover"),
            (this.timer = Date.now()))
          : (p(r, "art-hide-cursor"), m(r, "art-hover"));
      }),
      this.init();
  }
  init() {
    const { option: t } = this.art;
    t.isLive || this.add(ft({ name: "progress", position: "top", index: 10 })),
      this.add(
        (function (t) {
          let e = null;
          return (i) => ({
            ...t,
            mounted: (t) => {
              const { proxy: r } = i,
                a = E(t, R("play-pause")),
                s = (t) => (
                  e && e.destroy(),
                  (e = c.loadAnimation({
                    name: "play",
                    container: a,
                    renderer: "svg",
                    loop: !1,
                    autoplay: !1,
                    animationData: t ? dt : ut,
                  })),
                  e
                ),
                n = () => {
                  s(i.playing).play();
                };
              r(a, "click", () => {
                i.playing ? i.pause() : i.play(), n();
              }),
                n(),
                i.on("video:play", () => {
                  s(!0).play();
                }),
                i.on("video:pause", () => {
                  s(!1).play();
                }),
                i.on("destroy", () => {
                  e.destroy();
                });
            },
          });
        })({ name: "playAndPause", position: "left", index: 20 })
      ),
      h ||
        this.add(
          (function (t) {
            return (e) => ({
              ...t,
              mounted: (t) => {
                const { proxy: i } = e,
                  [r, a] = L(pt, t, "volume"),
                  [s, n] = L(mt, t, "volumeClose"),
                  o = E(t, '<div class="art-volume-panel"></div>'),
                  l = E(o, '<div class="art-volume-inner"></div>'),
                  A = E(l, '<div class="art-volume-val"></div>'),
                  d = E(l, '<div class="art-volume-slider"></div>'),
                  u = E(d, '<div class="art-volume-handle"></div>'),
                  c = E(u, '<div class="art-volume-loaded"></div>'),
                  g = E(d, '<div class="art-volume-indicator"></div>'),
                  f = () => {
                    a.stop();
                  },
                  p = () => {
                    n.stop();
                  };
                function m(t) {
                  const { top: e, height: i } = d.getBoundingClientRect();
                  return 1 - (t.clientY - e) / i;
                }
                function v() {
                  if (e.muted || 0 === e.volume)
                    I(r, "display", "none"),
                      I(s, "display", "flex"),
                      I(g, "top", "100%"),
                      I(c, "top", "100%"),
                      (A.innerText = 0);
                  else {
                    const t = 100 * e.volume;
                    I(r, "display", "flex"),
                      I(s, "display", "none"),
                      I(g, "top", 100 - t + "%"),
                      I(c, "top", 100 - t + "%"),
                      (A.innerText = Math.floor(t));
                  }
                }
                if (
                  (v(),
                  e.on("video:volumechange", v),
                  i(r, "click", () => {
                    e.muted = !0;
                  }),
                  i(r, "mouseenter", () => {
                    a.play();
                  }),
                  i(s, "click", () => {
                    e.muted = !1;
                  }),
                  i(s, "mouseenter", () => {
                    n.play();
                  }),
                  a.addEventListener("complete", f),
                  n.addEventListener("complete", p),
                  h)
                )
                  I(o, "display", "none");
                else {
                  let t = !1;
                  i(d, "mousedown", (i) => {
                    (t = 0 === i.button), (e.volume = m(i));
                  }),
                    e.on("document:mousemove", (i) => {
                      t && ((e.muted = !1), (e.volume = m(i)));
                    }),
                    e.on("document:mouseup", () => {
                      t && (t = !1);
                    }),
                    e.on("destroy", () => {
                      a.destroy(),
                        n.destroy(),
                        a.removeEventListener("complete", f),
                        n.removeEventListener("complete", p);
                    });
                }
              },
            });
          })({ name: "volume", position: "right", index: 20 })
        ),
      t.isLive ||
        this.add(
          (function (t) {
            return (e) => ({
              ...t,
              style: h
                ? { fontSize: "12px", padding: "0 5px" }
                : { cursor: "auto", padding: "0 10px" },
              mounted: (t) => {
                function i() {
                  const i = `${z(e.currentTime)} / ${z(e.duration)}`;
                  i !== t.innerText && (t.innerText = i);
                }
                i();
                const r = [
                  "video:loadedmetadata",
                  "video:timeupdate",
                  "video:progress",
                ];
                for (let a = 0; a < r.length; a++) e.on(r[a], i);
              },
            });
          })({ name: "time", position: "left", index: 30 })
        ),
      t.quality.length &&
        O().then(() => {
          this.art.quality = t.quality;
        }),
      this.add(Et({ name: "speed", position: "right", index: 10 })),
      t.setting &&
        this.add(
          (function (t) {
            return (e) => ({
              ...t,
              tooltip: e.i18n.get("Show Setting"),
              mounted: (t) => {
                const { proxy: i, i18n: r } = e,
                  [, a] = L(vt, t, "setting"),
                  s = () => {
                    a.stop();
                  };
                i(t, "click", () => {
                  e.setting.toggle(), e.setting.updateStyle();
                }),
                  i(t, h ? "touchstart" : "mouseenter", () => {
                    a.play();
                  }),
                  a.addEventListener("complete", s),
                  e.on("destroy", () => {
                    a.destroy(), a.removeEventListener("complete", s);
                  });
              },
            });
          })({ name: "setting", position: "right", index: 30 })
        ),
      t.pip &&
        this.add(
          (function (t) {
            let e = null;
            return (i) => ({
              ...t,
              tooltip: i.i18n.get("PIP Mode"),
              mounted: (t) => {
                const { proxy: r, i18n: a } = i,
                  s = E(t, R("pip")),
                  n = (t) => (
                    e && e.destroy(),
                    (e = c.loadAnimation({
                      name: "pip",
                      container: s,
                      renderer: "svg",
                      loop: !1,
                      autoplay: !1,
                      animationData: t ? lt : At,
                    })),
                    e
                  );
                n(!i.pip),
                  r(t, h ? "touchstart" : "mouseenter", () => {
                    n(!i.pip).play();
                  }),
                  r(t, "click", () => {
                    i.pip = !i.pip;
                  }),
                  i.on("pip", (e) => {
                    w(t, a.get(e ? "Exit PIP Mode" : "PIP Mode"));
                  }),
                  i.on("destroy", () => {
                    e.destroy();
                  });
              },
            });
          })({ name: "pip", position: "right", index: 40 })
        ),
      t.fullscreen &&
        this.add(
          (function (t) {
            return (e) => ({
              ...t,
              tooltip: e.i18n.get("Fullscreen"),
              mounted: (t) => {
                const { proxy: i, i18n: r } = e,
                  [, a] = L(ht, t, "fullscreen"),
                  s = () => {
                    a.stop();
                  };
                i(t, "click", () => {
                  const i = !e.fullscreen;
                  (e.fullscreen = i),
                    w(t, i ? r.get("Exit Fullscreen") : r.get("Fullscreen"));
                }),
                  i(t, h ? "touchstart" : "mouseenter", () => {
                    a.play();
                  }),
                  a.addEventListener("complete", s),
                  e.on("destroy", () => {
                    a.destroy(), a.removeEventListener("complete", s);
                  });
              },
            });
          })({ name: "fullscreen", position: "right", index: 70 })
        );
    for (let e = 0; e < t.controls.length; e++) this.add(t.controls[e]);
  }
  add(t) {
    const e = "function" == typeof t ? t(this.art) : t,
      { $progress: i, $controlsLeft: r, $controlsRight: a } = this.art.template;
    switch (e.position) {
      case "top":
        this.$parent = i;
        break;
      case "left":
        this.$parent = r;
        break;
      case "right":
        this.$parent = a;
        break;
      default:
        M(!1, "Control option.position must one of 'top', 'left', 'right'");
    }
    super.add(e);
  }
}
class It extends ot {
  constructor(t) {
    super(t),
      (this.name = "contextmenu"),
      (this.$parent = t.template.$contextmenu),
      h || this.init();
  }
  init() {
    const {
      option: t,
      proxy: e,
      template: { $player: i, $contextmenu: r },
    } = this.art;
    this.add(
      (function (t) {
        return (e) => ({
          ...t,
          html: '<div style="width: 100%;height: 100%;">胖虎影视</div>',
          click: () => {
            window.location.href = "//www.cdnkan.top/";
          },
        });
      })({ name: "phys", inex: 30 })
    ),
      this.add(
        (function (t) {
          return (e) => ({
            ...t,
            html: e.i18n.get("Video Info"),
            click: (t) => {
              e.info.init(), (t.show = !1);
            },
          });
        })({ name: "info", index: 40 })
      ),
      this.add(
        (function (t) {
          return (e) => ({
            ...t,
            html: e.i18n.get("Close"),
            click: (t) => {
              t.show = !1;
            },
          });
        })({ name: "close", index: 60 })
      );
    for (let a = 0; a < t.contextmenu.length; a++) this.add(t.contextmenu[a]);
    e(i, "contextmenu", (t) => {
      if ((t.preventDefault(), !this.art.constructor.CONTEXTMENU)) return;
      this.show = !0;
      const e = t.clientX,
        a = t.clientY,
        { height: s, width: n, left: o, top: h } = i.getBoundingClientRect(),
        { height: l, width: A } = r.getBoundingClientRect();
      let d = e - o,
        u = a - h;
      e + A > o + n && (d = n - A),
        a + l > h + s && (u = s - l),
        C(r, { top: `${u}px`, left: `${d}px` });
    }),
      e(i, "click", (t) => {
        S(t, r) || (this.show = !1);
      }),
      this.art.on("blur", () => {
        this.show = !1;
      });
  }
}
class Ct extends ot {
  constructor(t) {
    super(t), (this.name = "info");
    const {
      proxy: e,
      template: { $infoPanel: i, $infoClose: r },
    } = this.art;
    h ||
      ((this.$types = f("[data-video]", i) || []),
      e(r, "click", () => {
        this.show = !1;
      }));
  }
  init() {
    this.show = !0;
    const t = this.art.template.$video,
      e = (t, e) => {
        t.innerText !== e && (t.innerText = e);
      };
    for (let i = 0; i < this.$types.length; i++) {
      const r = this.$types[i],
        a = r.dataset.video;
      switch (a) {
        case "currentSrc":
          e(r, `视频地址：${t[a]}`);
          break;
        case "type":
          e(r, `视频类型：${this.art[a]}`);
          break;
        case "duration":
          e(r, `视频总长：${z(t[a])}`);
          break;
        case "size":
          e(r, `视频尺寸：${t.videoWidth}x${t.videoHeight}`);
      }
    }
  }
}
function Bt(t, e, i, r) {
  var a = e - r,
    s = i - t,
    n = 0;
  if (Math.abs(s) < 2 && Math.abs(a) < 2) return n;
  var o = (function (t, e) {
    return (180 * Math.atan2(e, t)) / Math.PI;
  })(s, a);
  return (
    o >= -45 && o < 45
      ? (n = 4)
      : o >= 45 && o < 135
      ? (n = 1)
      : o >= -135 && o < -45
      ? (n = 2)
      : ((o >= 135 && o <= 180) || (o >= -180 && o < -135)) && (n = 3),
    n
  );
}
class kt {
  constructor(t) {
    (this.destroyEvents = []),
      (this.proxy = this.proxy.bind(this)),
      (this.hover = this.hover.bind(this)),
      (this.loadImg = this.loadImg.bind(this)),
      (function (t, e) {
        const {
          constructor: i,
          template: { $player: r, $video: a },
        } = t;
        e.proxy(document, ["click", "contextmenu"], (e) => {
          S(e, r)
            ? ((t.isInput = "INPUT" === e.target.tagName),
              (t.isFocus = !0),
              t.emit("focus", e))
            : ((t.isInput = !1), (t.isFocus = !1), t.emit("blur", e));
        });
        let s = 0;
        e.proxy(a, "click", (e) => {
          const r = Date.now(),
            {
              MOBILE_CLICK_PLAY: a,
              DBCLICK_TIME: n,
              MOBILE_DBCLICK_PLAY: o,
              DBCLICK_FULLSCREEN: l,
            } = i;
          r - s <= n
            ? (t.emit("dblclick", e),
              h
                ? !t.isLock && o && t.toggle()
                : l && (t.fullscreen = !t.fullscreen))
            : (t.emit("click", e),
              h ? !t.isLock && a && t.toggle() : t.toggle()),
            (s = r);
        });
      })(t, this),
      (function (t, e) {
        const { $player: i } = t.template;
        e.hover(
          i,
          (e) => {
            p(i, "art-hover"), t.emit("hover", !0, e);
          },
          (e) => {
            m(i, "art-hover"), t.emit("hover", !1, e);
          }
        );
      })(t, this),
      (function (t, e) {
        const { $player: i } = t.template;
        e.proxy(i, "mousemove", (e) => {
          t.emit("mousemove", e);
        });
      })(t, this),
      (function (t, e) {
        const { option: i, constructor: r } = t;
        t.on("resize", () => {
          const { aspectRatio: e, notice: r } = t;
          "standard" === t.state && i.autoSize && t.autoSize(),
            (t.aspectRatio = e),
            (r.show = "");
        });
        const a = j(() => t.emit("resize"), r.RESIZE_TIME);
        e.proxy(window, ["orientationchange", "resize"], () => a()),
          screen &&
            screen.orientation &&
            screen.orientation.onchange &&
            e.proxy(screen.orientation, "change", () => a());
      })(t, this),
      (function (t, e) {
        if (h && !t.option.isLive) {
          const { $video: i, $progress: r } = t.template;
          let a = null,
            s = !1,
            n = 0,
            o = 0,
            h = 0;
          const l = (e) => {
              if (1 === e.touches.length && !t.isLock) {
                a === r && gt(t, e), (s = !0);
                const { pageX: i, pageY: l } = e.touches[0];
                (n = i), (o = l), (h = t.currentTime);
              }
            },
            A = (e) => {
              if (1 === e.touches.length && s && t.duration) {
                const { pageX: r, pageY: s } = e.touches[0],
                  l = Bt(n, o, r, s),
                  A = [3, 4].includes(l),
                  d = [1, 2].includes(l);
                if ((A && !t.isRotate) || (d && t.isRotate)) {
                  const e = H((r - n) / t.width, -1, 1),
                    l = H((s - o) / t.height, -1, 1),
                    A = t.isRotate ? l : e,
                    d = a === i ? t.constructor.TOUCH_MOVE_RATIO : 1,
                    u = H(h + t.duration * A * d, 0, t.duration);
                  (t.seek = u),
                    t.emit("setBar", "played", H(u / t.duration, 0, 1)),
                    (t.notice.show = `${z(u)} / ${z(t.duration)}`);
                }
              }
            },
            d = () => {
              s && ((n = 0), (o = 0), (h = 0), (s = !1), (a = null));
            };
          e.proxy(r, "touchstart", (t) => {
            (a = r), l(t);
          }),
            e.proxy(i, "touchstart", (t) => {
              (a = i), l(t);
            }),
            e.proxy(i, "touchmove", A),
            e.proxy(r, "touchmove", A),
            e.proxy(document, "touchend", d);
        }
      })(t, this),
      (function (t, e) {
        const {
            option: i,
            constructor: r,
            template: { $container: a },
          } = t,
          s = Y(() => {
            t.emit("view", Q(a, r.SCROLL_GAP));
          }, r.SCROLL_TIME);
        e.proxy(window, "scroll", () => s()),
          t.on("view", (e) => {
            i.autoMini && (t.mini = !e);
          });
      })(t, this),
      (function (t, e) {
        e.proxy(document, "mousemove", (e) => {
          t.emit("document:mousemove", e);
        }),
          e.proxy(document, "mouseup", (e) => {
            t.emit("document:mouseup", e);
          });
      })(t, this),
      (function (t) {
        if (t.constructor.USE_RAF) {
          let e = null;
          !(function i() {
            t.playing && t.emit("raf"),
              t.isDestroy || (e = requestAnimationFrame(i));
          })(),
            t.on("destroy", () => {
              cancelAnimationFrame(e);
            });
        }
      })(t);
  }
  proxy(t, e, i, r = {}) {
    if (Array.isArray(e)) return e.map((e) => this.proxy(t, e, i, r));
    t.addEventListener(e, i, r);
    const a = () => t.removeEventListener(e, i, r);
    return this.destroyEvents.push(a), a;
  }
  hover(t, e, i) {
    e && this.proxy(t, "mouseenter", e), i && this.proxy(t, "mouseleave", i);
  }
  loadImg(t) {
    return new Promise((e, i) => {
      let r;
      if (t instanceof HTMLImageElement) r = t;
      else {
        if ("string" != typeof t) return i(new T("Unable to get Image"));
        (r = new Image()), (r.src = t);
      }
      if (r.complete) return e(r);
      this.proxy(r, "load", () => e(r)),
        this.proxy(r, "error", () =>
          i(new T(`Failed to load Image: ${r.src}`))
        );
    });
  }
  remove(t) {
    const e = this.destroyEvents.indexOf(t);
    e > -1 && (t(), this.destroyEvents.splice(e, 1));
  }
  destroy() {
    for (let t = 0; t < this.destroyEvents.length; t++) this.destroyEvents[t]();
  }
}
class xt {
  constructor(t) {
    (this.art = t), (this.keys = {}), t.option.hotkey && !h && this.init();
  }
  init() {
    const { proxy: t, constructor: e } = this.art;
    this.add(27, () => {
      this.art.fullscreenWeb && (this.art.fullscreenWeb = !1);
    }),
      this.add(32, () => {
        this.art.toggle();
      }),
      this.add(37, () => {
        this.art.backward = e.SEEK_STEP;
      }),
      this.add(38, () => {
        this.art.volume += e.VOLUME_STEP;
      }),
      this.add(39, () => {
        this.art.forward = e.SEEK_STEP;
      }),
      this.add(40, () => {
        this.art.volume -= e.VOLUME_STEP;
      }),
      t(window, "keydown", (t) => {
        if (this.art.isFocus) {
          const e = document.activeElement.tagName.toUpperCase(),
            i = document.activeElement.getAttribute("contenteditable");
          if (
            !(
              "INPUT" === e ||
              "TEXTAREA" === e ||
              "" === i ||
              "true" === i ||
              t.altKey ||
              t.ctrlKey ||
              t.metaKey ||
              t.shiftKey
            )
          ) {
            const e = this.keys[t.keyCode];
            if (e) {
              t.preventDefault();
              for (let i = 0; i < e.length; i++) e[i].call(this.art, t);
              this.art.emit("hotkey", t);
            }
          }
        }
      });
  }
  add(t, e) {
    return this.keys[t] ? this.keys[t].push(e) : (this.keys[t] = [e]), this;
  }
  remove(t, e) {
    if (this.keys[t]) {
      const i = this.keys[t].indexOf(e);
      -1 !== i && this.keys[t].splice(i, 1);
    }
    return this;
  }
}
class wt extends ot {
  constructor(t) {
    super(t);
    const {
      option: e,
      template: { $layer: i },
    } = t;
    (this.name = "layer"), (this.$parent = i);
    for (let r = 0; r < e.layers.length; r++) this.add(e.layers[r]);
  }
}
const Qt = {
  v: "5.6.5",
  fr: 30,
  ip: 0,
  op: 90,
  w: 24,
  h: 24,
  nm: "loading - blue",
  ddd: 0,
  assets: [
    {
      id: "comp_0",
      layers: [
        {
          ddd: 0,
          ind: 1,
          ty: 4,
          nm: "圆点3",
          sr: 1,
          ks: {
            o: {
              a: 1,
              k: [
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 10,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 20,
                  s: [100],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 30,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 40,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 50,
                  s: [100],
                },
                { t: 60, s: [0] },
              ],
              ix: 11,
            },
            r: { a: 0, k: 0, ix: 10 },
            p: { a: 0, k: [16.844, 14.031, 0], ix: 2 },
            a: { a: 0, k: [-2.25, 2.781, 0], ix: 1 },
            s: { a: 0, k: [100, 100, 100], ix: 6 },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  ind: 0,
                  ty: "sh",
                  ix: 1,
                  ks: {
                    a: 0,
                    k: {
                      i: [
                        [0.774, 0],
                        [0, -0.774],
                        [-0.774, 0],
                        [0, 0.774],
                      ],
                      o: [
                        [-0.774, 0],
                        [0, 0.774],
                        [0.774, 0],
                        [0, -0.774],
                      ],
                      v: [
                        [0, -1.402],
                        [-1.402, 0],
                        [0, 1.402],
                        [1.402, 0],
                      ],
                      c: !0,
                    },
                    ix: 2,
                  },
                  nm: "路径 1",
                  mn: "ADBE Vector Shape - Group",
                  hd: !1,
                },
                {
                  ty: "st",
                  c: {
                    a: 0,
                    k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                    ix: 3,
                  },
                  o: { a: 0, k: 100, ix: 4 },
                  w: { a: 0, k: 0, ix: 5 },
                  lc: 1,
                  lj: 1,
                  ml: 4,
                  bm: 0,
                  nm: "描边 1",
                  mn: "ADBE Vector Graphic - Stroke",
                  hd: !1,
                },
                {
                  ty: "fl",
                  c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
                  o: { a: 0, k: 100, ix: 5 },
                  r: 1,
                  bm: 0,
                  nm: "填充 1",
                  mn: "ADBE Vector Graphic - Fill",
                  hd: !1,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [-2.285, 2.715], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "变换",
                },
              ],
              nm: "椭圆 1",
              np: 3,
              cix: 2,
              bm: 0,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: !1,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
        {
          ddd: 0,
          ind: 2,
          ty: 4,
          nm: "圆点2",
          sr: 1,
          ks: {
            o: {
              a: 1,
              k: [
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 5,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 15,
                  s: [100],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 25,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 35,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 45,
                  s: [100],
                },
                { t: 55, s: [0] },
              ],
              ix: 11,
            },
            r: { a: 0, k: 0, ix: 10 },
            p: { a: 0, k: [12.156, 14.031, 0], ix: 2 },
            a: { a: 0, k: [-2.25, 2.781, 0], ix: 1 },
            s: { a: 0, k: [100, 100, 100], ix: 6 },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  ind: 0,
                  ty: "sh",
                  ix: 1,
                  ks: {
                    a: 0,
                    k: {
                      i: [
                        [0.774, 0],
                        [0, -0.774],
                        [-0.774, 0],
                        [0, 0.774],
                      ],
                      o: [
                        [-0.774, 0],
                        [0, 0.774],
                        [0.774, 0],
                        [0, -0.774],
                      ],
                      v: [
                        [0, -1.402],
                        [-1.402, 0],
                        [0, 1.402],
                        [1.402, 0],
                      ],
                      c: !0,
                    },
                    ix: 2,
                  },
                  nm: "路径 1",
                  mn: "ADBE Vector Shape - Group",
                  hd: !1,
                },
                {
                  ty: "st",
                  c: {
                    a: 0,
                    k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                    ix: 3,
                  },
                  o: { a: 0, k: 100, ix: 4 },
                  w: { a: 0, k: 0, ix: 5 },
                  lc: 1,
                  lj: 1,
                  ml: 4,
                  bm: 0,
                  nm: "描边 1",
                  mn: "ADBE Vector Graphic - Stroke",
                  hd: !1,
                },
                {
                  ty: "fl",
                  c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
                  o: { a: 0, k: 100, ix: 5 },
                  r: 1,
                  bm: 0,
                  nm: "填充 1",
                  mn: "ADBE Vector Graphic - Fill",
                  hd: !1,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [-2.285, 2.715], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "变换",
                },
              ],
              nm: "椭圆 1",
              np: 3,
              cix: 2,
              bm: 0,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: !1,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
        {
          ddd: 0,
          ind: 3,
          ty: 4,
          nm: "圆点1",
          sr: 1,
          ks: {
            o: {
              a: 1,
              k: [
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 0,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 10,
                  s: [100],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 20,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 30,
                  s: [0],
                },
                {
                  i: { x: [0.667], y: [1] },
                  o: { x: [0.333], y: [0] },
                  t: 40,
                  s: [100],
                },
                { t: 50, s: [0] },
              ],
              ix: 11,
            },
            r: { a: 0, k: 0, ix: 10 },
            p: { a: 0, k: [7.625, 14.031, 0], ix: 2 },
            a: { a: 0, k: [-2.25, 2.781, 0], ix: 1 },
            s: { a: 0, k: [100, 100, 100], ix: 6 },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  ind: 0,
                  ty: "sh",
                  ix: 1,
                  ks: {
                    a: 0,
                    k: {
                      i: [
                        [0.774, 0],
                        [0, -0.774],
                        [-0.774, 0],
                        [0, 0.774],
                      ],
                      o: [
                        [-0.774, 0],
                        [0, 0.774],
                        [0.774, 0],
                        [0, -0.774],
                      ],
                      v: [
                        [0, -1.402],
                        [-1.402, 0],
                        [0, 1.402],
                        [1.402, 0],
                      ],
                      c: !0,
                    },
                    ix: 2,
                  },
                  nm: "路径 1",
                  mn: "ADBE Vector Shape - Group",
                  hd: !1,
                },
                {
                  ty: "st",
                  c: {
                    a: 0,
                    k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                    ix: 3,
                  },
                  o: { a: 0, k: 100, ix: 4 },
                  w: { a: 0, k: 0, ix: 5 },
                  lc: 1,
                  lj: 1,
                  ml: 4,
                  bm: 0,
                  nm: "描边 1",
                  mn: "ADBE Vector Graphic - Stroke",
                  hd: !1,
                },
                {
                  ty: "fl",
                  c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
                  o: { a: 0, k: 100, ix: 5 },
                  r: 1,
                  bm: 0,
                  nm: "填充 1",
                  mn: "ADBE Vector Graphic - Fill",
                  hd: !1,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [-2.285, 2.715], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "变换",
                },
              ],
              nm: "椭圆 1",
              np: 3,
              cix: 2,
              bm: 0,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: !1,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
      ],
    },
  ],
  layers: [
    {
      ddd: 0,
      ind: 1,
      ty: 4,
      nm: "形状图层 4",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [12, 12, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [],
      ip: 0,
      op: 90,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 2,
      ty: 4,
      nm: "天线左 2",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: -45, ix: 10 },
        p: { a: 0, k: [7.391, 1.8, 0], ix: 2 },
        a: { a: 0, k: [-0.298, -9.69, 0], ix: 1 },
        s: {
          a: 1,
          k: [
            {
              i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
              o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
              t: 60,
              s: [100, 0, 100],
            },
            { t: 63, s: [100, 100, 100] },
          ],
          ix: 6,
        },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0.408, 0],
                    [0, -0.408],
                    [0, 0],
                    [-0.408, 0],
                    [0, 0.408],
                    [0, 0],
                  ],
                  o: [
                    [-0.408, 0],
                    [0, 0],
                    [0, 0.408],
                    [0.408, 0],
                    [0, 0],
                    [0, -0.408],
                  ],
                  v: [
                    [0, -3.388],
                    [-0.739, -2.649],
                    [-0.739, 2.649],
                    [0, 3.388],
                    [0.739, 2.649],
                    [0.739, -2.649],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "st",
              c: {
                a: 0,
                k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                ix: 3,
              },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-0.26, -6.371], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "矩形 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 60,
      op: 90,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 3,
      ty: 4,
      nm: "天线右 2",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 45, ix: 10 },
        p: { a: 0, k: [12.297, 5.7, 0], ix: 2 },
        a: { a: 0, k: [-0.376, -4.176, 0], ix: 1 },
        s: {
          a: 1,
          k: [
            {
              i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
              o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
              t: 80,
              s: [100, 0, 100],
            },
            {
              i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
              o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
              t: 84,
              s: [100, 110, 100],
            },
            {
              i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
              o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
              t: 87,
              s: [100, 95, 100],
            },
            { t: 90, s: [100, 100, 100] },
          ],
          ix: 6,
        },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0.408, 0],
                    [0, -0.408],
                    [0, 0],
                    [-0.408, 0],
                    [0, 0.408],
                    [0, 0],
                  ],
                  o: [
                    [-0.408, 0],
                    [0, 0],
                    [0, 0.408],
                    [0.408, 0],
                    [0, 0],
                    [0, -0.408],
                  ],
                  v: [
                    [0, -3.388],
                    [-0.739, -2.649],
                    [-0.739, 2.649],
                    [0, 3.388],
                    [0.739, 2.649],
                    [0.739, -2.649],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "st",
              c: {
                a: 0,
                k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                ix: 3,
              },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-0.26, -6.371], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "矩形 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 60,
      op: 90,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 4,
      ty: 4,
      nm: "形状图层 5",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [12, 13.75, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [98.401, 107.097, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "st",
              c: {
                a: 0,
                k: [0.043137256056, 0.639215707779, 0.584313750267, 1],
                ix: 3,
              },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 1.5, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: {
                a: 0,
                k: [0.043137256056, 0.639215707779, 0.584313750267, 1],
                ix: 4,
              },
              o: { a: 0, k: 0, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状 3",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: { i: [[0, 0]], o: [[0, 0]], v: [[-0.191, 0.233]], c: !1 },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0.631372570992, 0.839215695858, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 1.5, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: {
                a: 0,
                k: [0.043137256056, 0.639215707779, 0.584313750267, 1],
                ix: 4,
              },
              o: { a: 0, k: 0, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状 2",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 2,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [3.048, 0],
                    [0, -2.201],
                    [0, -1.598],
                    [-3.016, 0],
                    [-2.482, 0],
                    [0, 2.092],
                    [0, 1.8],
                    [3.055, 0],
                  ],
                  o: [
                    [0, 0],
                    [-3.048, 0],
                    [0, 2.031],
                    [0, 2.087],
                    [2.031, 0],
                    [3.054, 0],
                    [0, -1.875],
                    [0, -2.15],
                    [-1.844, 0],
                  ],
                  v: [
                    [-0.05, -6.758],
                    [-6.13, -6.726],
                    [-10.121, -2.585],
                    [-10.137, 3.078],
                    [-6.162, 6.816],
                    [6.092, 6.822],
                    [10.27, 3.073],
                    [10.285, -2.635],
                    [6.091, -6.718],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "tm",
              s: { a: 0, k: 0, ix: 1 },
              e: { a: 0, k: 100, ix: 2 },
              o: { a: 0, k: 0, ix: 3 },
              m: 1,
              ix: 2,
              nm: "修剪路径 1",
              mn: "ADBE Vector Filter - Trim",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0.631372570992, 0.839215695858, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 1.5, ix: 5 },
              lc: 2,
              lj: 2,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: {
                a: 0,
                k: [0.043137256056, 0.639215707779, 0.584313750267, 1],
                ix: 4,
              },
              o: { a: 0, k: 0, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状 1",
          np: 4,
          cix: 2,
          bm: 0,
          ix: 3,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 60,
      st: -60,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 5,
      ty: 4,
      nm: "形状图层 1",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [12, 13.75, 0], ix: 2 },
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [98.401, 107.097, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ty: "st",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 1.5, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: {
                a: 0,
                k: [0.043137254902, 0.639215686275, 0.58431372549, 1],
                ix: 4,
              },
              o: { a: 0, k: 0, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状 3",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: { i: [[0, 0]], o: [[0, 0]], v: [[-0.191, 0.233]], c: !1 },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 1.5, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: {
                a: 0,
                k: [0.043137254902, 0.639215686275, 0.58431372549, 1],
                ix: 4,
              },
              o: { a: 0, k: 0, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状 2",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 2,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [3.048, 0],
                    [0, -2.201],
                    [0, -1.598],
                    [-3.016, 0],
                    [-2.482, 0],
                    [0, 2.092],
                    [0, 1.8],
                    [3.055, 0],
                  ],
                  o: [
                    [0, 0],
                    [-3.048, 0],
                    [0, 2.031],
                    [0, 2.087],
                    [2.031, 0],
                    [3.054, 0],
                    [0, -1.875],
                    [0, -2.15],
                    [-1.844, 0],
                  ],
                  v: [
                    [-0.05, -6.758],
                    [-6.13, -6.726],
                    [-10.121, -2.585],
                    [-10.137, 3.078],
                    [-6.162, 6.816],
                    [6.092, 6.822],
                    [10.27, 3.073],
                    [10.285, -2.635],
                    [6.091, -6.718],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "tm",
              s: { a: 0, k: 0, ix: 1 },
              e: {
                a: 1,
                k: [
                  {
                    i: { x: [0.547], y: [1] },
                    o: { x: [0.453], y: [0] },
                    t: 63,
                    s: [0],
                  },
                  { t: 80, s: [100] },
                ],
                ix: 2,
              },
              o: { a: 0, k: 0, ix: 3 },
              m: 1,
              ix: 2,
              nm: "修剪路径 1",
              mn: "ADBE Vector Filter - Trim",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 1.5, ix: 5 },
              lc: 2,
              lj: 2,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: {
                a: 0,
                k: [0.043137254902, 0.639215686275, 0.58431372549, 1],
                ix: 4,
              },
              o: { a: 0, k: 0, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "形状 1",
          np: 4,
          cix: 2,
          bm: 0,
          ix: 3,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 60,
      op: 90,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 6,
      ty: 0,
      nm: "点点点 - blue",
      refId: "comp_0",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [12, 12, 0], ix: 2 },
        a: { a: 0, k: [12, 12, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      w: 24,
      h: 24,
      ip: 0,
      op: 90,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 7,
      ty: 4,
      nm: "天线左",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.667], y: [1] },
              o: { x: [0.333], y: [0] },
              t: 50,
              s: [100],
            },
            { t: 60, s: [0] },
          ],
          ix: 11,
        },
        r: { a: 0, k: -45, ix: 10 },
        p: { a: 0, k: [7.391, 1.8, 0], ix: 2 },
        a: { a: 0, k: [-0.298, -9.69, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0.408, 0],
                    [0, -0.408],
                    [0, 0],
                    [-0.408, 0],
                    [0, 0.408],
                    [0, 0],
                  ],
                  o: [
                    [-0.408, 0],
                    [0, 0],
                    [0, 0.408],
                    [0.408, 0],
                    [0, 0],
                    [0, -0.408],
                  ],
                  v: [
                    [0, -3.388],
                    [-0.739, -2.649],
                    [-0.739, 2.649],
                    [0, 3.388],
                    [0.739, 2.649],
                    [0.739, -2.649],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "st",
              c: {
                a: 0,
                k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                ix: 3,
              },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-0.26, -6.371], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "矩形 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 60,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 8,
      ty: 4,
      nm: "天线右",
      sr: 1,
      ks: {
        o: {
          a: 1,
          k: [
            {
              i: { x: [0.667], y: [1] },
              o: { x: [0.333], y: [0] },
              t: 50,
              s: [100],
            },
            { t: 60, s: [0] },
          ],
          ix: 11,
        },
        r: { a: 0, k: 45, ix: 10 },
        p: { a: 0, k: [12.297, 5.7, 0], ix: 2 },
        a: { a: 0, k: [-0.376, -4.176, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0.408, 0],
                    [0, -0.408],
                    [0, 0],
                    [-0.408, 0],
                    [0, 0.408],
                    [0, 0],
                  ],
                  o: [
                    [-0.408, 0],
                    [0, 0],
                    [0, 0.408],
                    [0.408, 0],
                    [0, 0],
                    [0, -0.408],
                  ],
                  v: [
                    [0, -3.388],
                    [-0.739, -2.649],
                    [-0.739, 2.649],
                    [0, 3.388],
                    [0.739, 2.649],
                    [0.739, -2.649],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "路径 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "st",
              c: {
                a: 0,
                k: [0.270588248968, 0.270588248968, 0.270588248968, 1],
                ix: 3,
              },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "描边 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0, 0.63137254902, 0.839215686275, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "填充 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [-0.26, -6.371], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "变换",
            },
          ],
          nm: "矩形 1",
          np: 3,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 60,
      st: 0,
      bm: 0,
    },
  ],
  markers: [],
};
class St extends ot {
  constructor(t) {
    super(t), (this.name = "loading");
    const e = R("loading");
    c.loadAnimation({
      name: "fullscreen",
      container: e,
      renderer: "svg",
      loop: !0,
      autoplay: !0,
      animationData: Qt,
    }),
      E(t.template.$loading, e);
  }
}
let bt = class {
  constructor(t) {
    (this.art = t), (this.timer = null);
  }
  set show(t) {
    const {
      constructor: e,
      template: { $player: i, $noticeInner: r },
    } = this.art;
    t
      ? ((r.innerText = t instanceof Error ? t.message.trim() : t),
        p(i, "art-notice-show"),
        clearTimeout(this.timer),
        (this.timer = setTimeout(() => {
          (r.innerText = ""), m(i, "art-notice-show");
        }, e.NOTICE_TIME)))
      : m(i, "art-notice-show");
  }
};
class Dt extends ot {
  constructor(t) {
    super(t), (this.name = "mask");
    const { template: e, icons: i, events: r } = t,
      a = E(e.$state, i.state),
      s = E(e.$state, i.error);
    I(s, "display", "none"),
      t.on("destroy", () => {
        I(a, "display", "none"), I(s, "display", null);
      }),
      r.proxy(e.$state, "click", () => t.play());
  }
}
class Rt {
  constructor(t) {
    const e = {
      state:
        '<svg viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="pid-64-svgo-a" d="M0 0h80v80H0z"></path><path d="M52.546 8.014a3.998 3.998 0 014.222 3.077c.104.446.093.808.039 1.138a2.74 2.74 0 01-.312.881c-.073.132-.16.254-.246.376l-.257.366-.521.73c-.7.969-1.415 1.926-2.154 2.866l-.015.02a240.945 240.945 0 015.986.341l1.643.123.822.066.41.034.206.018.103.008.115.012c1.266.116 2.516.45 3.677.975a11.663 11.663 0 013.166 2.114c.931.87 1.719 1.895 2.321 3.022a11.595 11.595 0 011.224 3.613c.03.157.046.316.068.474l.015.119.013.112.022.206.085.822.159 1.646c.1 1.098.19 2.198.27 3.298.315 4.4.463 8.829.36 13.255a166.489 166.489 0 01-.843 13.213c-.012.127-.034.297-.053.454a7.589 7.589 0 01-.072.475l-.04.237-.05.236a11.762 11.762 0 01-.74 2.287 11.755 11.755 0 01-5.118 5.57 11.705 11.705 0 01-3.623 1.263c-.158.024-.316.052-.475.072l-.477.053-.821.071-1.644.134c-1.096.086-2.192.16-3.288.23a260.08 260.08 0 01-6.578.325c-8.772.324-17.546.22-26.313-.302a242.458 242.458 0 01-3.287-.22l-1.643-.129-.822-.069-.41-.035-.206-.018c-.068-.006-.133-.01-.218-.02a11.566 11.566 0 01-3.7-.992 11.732 11.732 0 01-5.497-5.178 11.73 11.73 0 01-1.215-3.627c-.024-.158-.051-.316-.067-.475l-.026-.238-.013-.119-.01-.103-.07-.823-.132-1.648a190.637 190.637 0 01-.22-3.298c-.256-4.399-.358-8.817-.258-13.233.099-4.412.372-8.811.788-13.197a11.65 11.65 0 013.039-6.835 11.585 11.585 0 016.572-3.563c.157-.023.312-.051.47-.07l.47-.05.82-.07 1.643-.13a228.493 228.493 0 016.647-.405l-.041-.05a88.145 88.145 0 01-2.154-2.867l-.52-.73-.258-.366c-.086-.122-.173-.244-.246-.376a2.74 2.74 0 01-.312-.881 2.808 2.808 0 01.04-1.138 3.998 3.998 0 014.22-3.077 2.8 2.8 0 011.093.313c.294.155.538.347.742.568.102.11.19.23.28.35l.27.359.532.72a88.059 88.059 0 012.06 2.936 73.036 73.036 0 011.929 3.03c.187.313.373.628.556.945 2.724-.047 5.447-.056 8.17-.038.748.006 1.496.015 2.244.026.18-.313.364-.624.549-.934a73.281 73.281 0 011.93-3.03 88.737 88.737 0 012.059-2.935l.533-.72.268-.359c.09-.12.179-.24.281-.35a2.8 2.8 0 011.834-.881zM30.13 34.631a4 4 0 00-.418 1.42 91.157 91.157 0 00-.446 9.128c0 2.828.121 5.656.364 8.483l.11 1.212a4 4 0 005.858 3.143c2.82-1.498 5.55-3.033 8.193-4.606a177.41 177.41 0 005.896-3.666l1.434-.942a4 4 0 00.047-6.632 137.703 137.703 0 00-7.377-4.708 146.88 146.88 0 00-6.879-3.849l-1.4-.725a4 4 0 00-5.382 1.742z" id="pid-64-svgo-d"></path><filter x="-15.4%" y="-16.3%" width="130.9%" height="132.5%" filterUnits="objectBoundingBox" id="pid-64-svgo-c"><feOffset dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset><feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0" in="shadowBlurOuter1" result="shadowMatrixOuter1"></feColorMatrix><feOffset in="SourceAlpha" result="shadowOffsetOuter2"></feOffset><feGaussianBlur stdDeviation="3.5" in="shadowOffsetOuter2" result="shadowBlurOuter2"></feGaussianBlur><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" in="shadowBlurOuter2" result="shadowMatrixOuter2"></feColorMatrix><feMerge><feMergeNode in="shadowMatrixOuter1"></feMergeNode><feMergeNode in="shadowMatrixOuter2"></feMergeNode></feMerge></filter></defs><g fill="none" fill-rule="evenodd" opacity=".8"><mask id="pid-64-svgo-b" fill="#fff"><use xlink:href="#pid-64-svgo-a"></use></mask><g mask="url(#pid-64-svgo-b)"><use fill="#000" filter="url(#pid-64-svgo-c)" xlink:href="#pid-64-svgo-d"></use><use fill="#FFF" xlink:href="#pid-64-svgo-d"></use></g></g></svg>',
      check:
        '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 24 24" style="width: 100%; height: 100%;">\r\n<path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" fill="#fff" />\r\n</svg>',
      arrowLeft:
        '<svg xmlns="http://www.w3.org/2000/svg" height="32" width="32" version="1.1" viewBox="0 0 32 32">\r\n    <path d="M 19.41,20.09 14.83,15.5 19.41,10.91 18,9.5 l -6,6 6,6 z" fill="#fff" />\r\n</svg>',
      arrowRight:
        '<svg xmlns="http://www.w3.org/2000/svg" height="32" width="32" version="1.1" viewBox="0 0 32 32">\r\n    <path d="m 12.59,20.34 4.58,-4.59 -4.58,-4.59 1.41,-1.41 6,6 -6,6 z" fill="#fff"/>\r\n</svg>',
      lock: '<?xml version="1.0" standalone="no"?>\r\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n<svg t="1650612139149" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="12683" xmlns:xlink="http://www.w3.org/1999/xlink" width="20" height="20"><defs>\r\n<style type="text/css"></style></defs><path d="M298.666667 426.666667V341.333333a213.333333 213.333333 0 1 1 426.666666 0v85.333334h42.666667a85.333333 85.333333 0 0 1 85.333333 85.333333v256a85.333333 85.333333 0 0 1-85.333333 85.333333H256a85.333333 85.333333 0 0 1-85.333333-85.333333v-256a85.333333 85.333333 0 0 1 85.333333-85.333333h42.666667z m213.333333-213.333334a128 128 0 0 0-128 128v85.333334h256V341.333333a128 128 0 0 0-128-128z" fill="#ffffff" p-id="12684"></path>\r\n</svg>',
      unlock:
        '<?xml version="1.0" standalone="no"?>\r\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n<svg t="1650612464266" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="14150" xmlns:xlink="http://www.w3.org/1999/xlink" width="20" height="20"><defs>\r\n<style type="text/css"></style></defs><path d="M666.752 194.517333L617.386667 268.629333A128 128 0 0 0 384 341.333333l0.042667 85.333334h384a85.333333 85.333333 0 0 1 85.333333 85.333333v256a85.333333 85.333333 0 0 1-85.333333 85.333333H256a85.333333 85.333333 0 0 1-85.333333-85.333333v-256a85.333333 85.333333 0 0 1 85.333333-85.333333h42.666667V341.333333a213.333333 213.333333 0 0 1 368.085333-146.816z" fill="#ffffff" p-id="14151"></path></svg>',
      switchOn:
        '<?xml version="1.0" standalone="no"?>\r\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n<svg class="icon" width="26" height="26" viewBox="0 0 1664 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">\r\n    <path fill="var(--art-theme)" d="M1152 0H512a512 512 0 0 0 0 1024h640a512 512 0 0 0 0-1024z m0 960a448 448 0 1 1 448-448 448 448 0 0 1-448 448z"  />\r\n</svg>',
      switchOff:
        '<?xml version="1.0" standalone="no"?>\r\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n<svg class="icon" width="26" height="26" viewBox="0 0 1740 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">\r\n    <path fill="#ffffff" d="M511.8976 1024h670.5152c282.4192-0.4096 511.1808-229.4784 511.1808-511.8976 0-282.4192-228.7616-511.488-511.1808-511.8976H511.8976C229.4784 0.6144 0.7168 229.6832 0.7168 512.1024c0 282.4192 228.7616 511.488 511.1808 511.8976zM511.3344 48.64A464.5888 464.5888 0 1 1 48.0256 513.024 463.872 463.872 0 0 1 511.3344 48.4352V48.64z" />\r\n</svg>',
      error:
        '<?xml version="1.0" standalone="no"?>\r\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n<svg t="1652850026663" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2749" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50">\r\n<path d="M593.8176 168.5504l356.00384 595.21024c26.15296 43.74528 10.73152 99.7376-34.44736 125.05088-14.39744 8.06912-30.72 12.30848-47.37024 12.30848H155.97568C103.75168 901.12 61.44 860.16 61.44 809.61536c0-16.09728 4.38272-31.92832 12.71808-45.8752L430.16192 168.5504c26.17344-43.7248 84.00896-58.65472 129.20832-33.34144a93.0816 93.0816 0 0 1 34.44736 33.34144zM512 819.2a61.44 61.44 0 1 0 0-122.88 61.44 61.44 0 0 0 0 122.88z m0-512a72.31488 72.31488 0 0 0-71.76192 81.3056l25.72288 205.7216a46.40768 46.40768 0 0 0 92.07808 0l25.72288-205.74208A72.31488 72.31488 0 0 0 512 307.2z" p-id="2750">\r\n</path>\r\n</svg>',
      close:
        '<?xml version="1.0" standalone="no"?>\r\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n<svg t="1655876154826" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="22" height="22">\r\n<path d="M571.733333 512l268.8-268.8c17.066667-17.066667 17.066667-42.666667 0-59.733333-17.066667-17.066667-42.666667-17.066667-59.733333 0L512 452.266667 243.2 183.466667c-17.066667-17.066667-42.666667-17.066667-59.733333 0-17.066667 17.066667-17.066667 42.666667 0 59.733333L452.266667 512 183.466667 780.8c-17.066667 17.066667-17.066667 42.666667 0 59.733333 8.533333 8.533333 19.2 12.8 29.866666 12.8s21.333333-4.266667 29.866667-12.8L512 571.733333l268.8 268.8c8.533333 8.533333 19.2 12.8 29.866667 12.8s21.333333-4.266667 29.866666-12.8c17.066667-17.066667 17.066667-42.666667 0-59.733333L571.733333 512z" p-id="2131">\r\n</path>\r\n</svg>',
      indicator:
        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18" preserveAspectRatio="xMidYMid meet"\r\n    style="width: 100%; height: 100%; transform: translate3d(0px, 0px, 0px);">\r\n    <defs>\r\n        <clipPath id="__lottie_element_403">\r\n            <rect width="18" height="18" x="0" y="0"></rect>\r\n        </clipPath>\r\n    </defs>\r\n    <g clip-path="url(#__lottie_element_403)">\r\n        <g transform="matrix(0.9883429408073425,-0.7275781631469727,0.6775955557823181,0.920446515083313,7.3224687576293945,-0.7606706619262695)"\r\n            opacity="1" style="display: block;">\r\n            <g opacity="1"\r\n                transform="matrix(0.9937776327133179,-0.11138220876455307,0.11138220876455307,0.9937776327133179,-2.5239999294281006,1.3849999904632568)">\r\n                <path fill="rgb(51,51,51)" fill-opacity="1"\r\n                    d=" M0.75,-1.25 C0.75,-1.25 0.75,1.25 0.75,1.25 C0.75,1.663925051689148 0.4139249920845032,2 0,2 C0,2 0,2 0,2 C-0.4139249920845032,2 -0.75,1.663925051689148 -0.75,1.25 C-0.75,1.25 -0.75,-1.25 -0.75,-1.25 C-0.75,-1.663925051689148 -0.4139249920845032,-2 0,-2 C0,-2 0,-2 0,-2 C0.4139249920845032,-2 0.75,-1.663925051689148 0.75,-1.25z">\r\n                </path>\r\n            </g>\r\n        </g>\r\n        <g transform="matrix(1.1436611413955688,0.7535901665687561,-0.6317168474197388,0.9587040543556213,16.0070743560791,2.902894973754883)"\r\n            opacity="1" style="display: block;">\r\n            <g opacity="1"\r\n                transform="matrix(0.992861807346344,0.1192704513669014,-0.1192704513669014,0.992861807346344,-2.5239999294281006,1.3849999904632568)">\r\n                <path fill="rgb(51,51,51)" fill-opacity="1"\r\n                    d=" M0.75,-1.25 C0.75,-1.25 0.75,1.25 0.75,1.25 C0.75,1.663925051689148 0.4139249920845032,2 0,2 C0,2 0,2 0,2 C-0.4139249920845032,2 -0.75,1.663925051689148 -0.75,1.25 C-0.75,1.25 -0.75,-1.25 -0.75,-1.25 C-0.75,-1.663925051689148 -0.4139249920845032,-2 0,-2 C0,-2 0,-2 0,-2 C0.4139249920845032,-2 0.75,-1.663925051689148 0.75,-1.25z">\r\n                </path>\r\n            </g>\r\n        </g>\r\n        <g transform="matrix(1,0,0,1,8.890999794006348,8.406000137329102)" opacity="1" style="display: block;">\r\n            <g opacity="1" transform="matrix(1,0,0,1,0.09099999815225601,1.1009999513626099)">\r\n                <path fill="rgb(255,255,255)" fill-opacity="1"\r\n                    d=" M7,-3 C7,-3 7,3 7,3 C7,4.379749774932861 5.879749774932861,5.5 4.5,5.5 C4.5,5.5 -4.5,5.5 -4.5,5.5 C-5.879749774932861,5.5 -7,4.379749774932861 -7,3 C-7,3 -7,-3 -7,-3 C-7,-4.379749774932861 -5.879749774932861,-5.5 -4.5,-5.5 C-4.5,-5.5 4.5,-5.5 4.5,-5.5 C5.879749774932861,-5.5 7,-4.379749774932861 7,-3z">\r\n                </path>\r\n                <path stroke-linecap="butt" stroke-linejoin="miter" fill-opacity="0" stroke-miterlimit="4"\r\n                    stroke="rgb(51,51,51)" stroke-opacity="1" stroke-width="1.5"\r\n                    d=" M7,-3 C7,-3 7,3 7,3 C7,4.379749774932861 5.879749774932861,5.5 4.5,5.5 C4.5,5.5 -4.5,5.5 -4.5,5.5 C-5.879749774932861,5.5 -7,4.379749774932861 -7,3 C-7,3 -7,-3 -7,-3 C-7,-4.379749774932861 -5.879749774932861,-5.5 -4.5,-5.5 C-4.5,-5.5 4.5,-5.5 4.5,-5.5 C5.879749774932861,-5.5 7,-4.379749774932861 7,-3z">\r\n                </path>\r\n            </g>\r\n        </g>\r\n        <g transform="matrix(1,0,0,1,8.89900016784668,8.083999633789062)" opacity="1" style="display: block;">\r\n            <g opacity="1" transform="matrix(1,0,0,1,-2.5239999294281006,1.3849999904632568)">\r\n                <path fill="rgb(51,51,51)" fill-opacity="1"\r\n                    d=" M0.875,-1.125 C0.875,-1.125 0.875,1.125 0.875,1.125 C0.875,1.607912540435791 0.48291251063346863,2 0,2 C0,2 0,2 0,2 C-0.48291251063346863,2 -0.875,1.607912540435791 -0.875,1.125 C-0.875,1.125 -0.875,-1.125 -0.875,-1.125 C-0.875,-1.607912540435791 -0.48291251063346863,-2 0,-2 C0,-2 0,-2 0,-2 C0.48291251063346863,-2 0.875,-1.607912540435791 0.875,-1.125z">\r\n                </path>\r\n            </g>\r\n        </g>\r\n        <g transform="matrix(1,0,0,1,14.008999824523926,8.083999633789062)" opacity="1" style="display: block;">\r\n            <g opacity="1" transform="matrix(1,0,0,1,-2.5239999294281006,1.3849999904632568)">\r\n                <path fill="rgb(51,51,51)" fill-opacity="1"\r\n                    d=" M0.8999999761581421,-1.100000023841858 C0.8999999761581421,-1.100000023841858 0.8999999761581421,1.100000023841858 0.8999999761581421,1.100000023841858 C0.8999999761581421,1.596709966659546 0.4967099726200104,2 0,2 C0,2 0,2 0,2 C-0.4967099726200104,2 -0.8999999761581421,1.596709966659546 -0.8999999761581421,1.100000023841858 C-0.8999999761581421,1.100000023841858 -0.8999999761581421,-1.100000023841858 -0.8999999761581421,-1.100000023841858 C-0.8999999761581421,-1.596709966659546 -0.4967099726200104,-2 0,-2 C0,-2 0,-2 0,-2 C0.4967099726200104,-2 0.8999999761581421,-1.596709966659546 0.8999999761581421,-1.100000023841858z">\r\n                </path>\r\n            </g>\r\n        </g>\r\n    </g>\r\n</svg>',
      issue:
        '<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" data-pointer="none"\r\n    viewBox="0 0 22 22">\r\n    <defs>\r\n        <filter id="__j9H-pv6__a" width="162.5%" height="162.5%" x="-31.2%" y="-25%" filterUnits="objectBoundingBox">\r\n            <feOffset dy="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>\r\n            <feGaussianBlur in="shadowOffsetOuter1" result="shadowBlurOuter1" stdDeviation="1.5"></feGaussianBlur>\r\n            <feColorMatrix in="shadowBlurOuter1" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0"></feColorMatrix>\r\n        </filter>\r\n        <path id="__j9H-pv6__b"\r\n            d="m6 16-3 3V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H6Zm4-4v2h2v-2h-2Zm2-.998c0-.34.149-.523.636-.925.022-.018.296-.24.379-.31a5.81 5.81 0 0 0 .173-.152C13.705 9.145 14 8.656 14 8a3 3 0 0 0-5.698-1.314c-.082.17-.153.41-.213.72A.5.5 0 0 0 8.581 8h1.023a.5.5 0 0 0 .476-.348.851.851 0 0 1 .114-.244A.999.999 0 0 1 12 8c0 1.237-2 1.16-2 3h2Z">\r\n        </path>\r\n    </defs>\r\n    <g fill-rule="evenodd">\r\n        <use xlink:href="#__j9H-pv6__b" filter="url(#__j9H-pv6__a)"></use>\r\n        <use xlink:href="#__j9H-pv6__b"></use>\r\n    </g>\r\n</svg>',
      ...t.option.icons,
    };
    for (const i in e) P(this, i, { get: () => R(i, e[i]) });
  }
}
class Lt extends ot {
  constructor(t) {
    super(t);
    const {
      option: e,
      controls: i,
      template: { $setting: r },
      events: { hover: a },
    } = t;
    (this.name = "setting"),
      (this.$parent = r),
      (this.option = []),
      (this.events = []),
      (this.cache = new Map()),
      (this.timer = null),
      e.setting,
      e.setting &&
        (a(
          r,
          () => {
            this.timer && clearTimeout(this.timer),
              (t.isInput = !0),
              (this.show = !0);
          },
          () => {
            this.timer && clearTimeout(this.timer),
              (this.timer = setTimeout(() => {
                (t.isInput = !1), (this.show = !1);
              }, 800));
          }
        ),
        this.init(),
        t.on("blur", () => {
          this.show && ((this.show = !1), this.render(this.option));
        }),
        t.on("focus", (t) => {
          const e = S(t, i.setting),
            r = S(t, this.$parent);
          !this.show || e || r || ((this.show = !1), this.render(this.option));
        }));
  }
  static makeRecursion(t, e, i) {
    for (let r = 0; r < t.length; r++) {
      const a = t[r];
      (a.$parentItem = e),
        (a.$parentList = i),
        Lt.makeRecursion(a.selector || [], a, t);
    }
    return t;
  }
  get defaultSettings() {
    const t = [],
      { option: e } = this.art;
    return (
      e.aspectRatio &&
        t.push(
          (function (t) {
            const {
              i18n: e,
              icons: i,
              constructor: { SETTING_ITEM_WIDTH: r, ASPECT_RATIO: a },
            } = t;
            function s(t) {
              return "default" === t ? e.get("Default") : t;
            }
            function n(t, e, i) {
              e && (e.innerText = s(i));
              const r = f(".art-setting-item", t).find(
                (t) => t.dataset.value === i
              );
              r && x(r, "art-current");
            }
            return {
              width: r,
              name: "aspect-ratio",
              html: e.get("Aspect Ratio"),
              tooltip: s(t.aspectRatio),
              selector: a.map((e) => ({
                value: e,
                name: `aspect-ratio-${e}`,
                default: e === t.aspectRatio,
                html: s(e),
              })),
              onSelect: (e) => ((t.aspectRatio = e.value), e.html),
              mounted: (e, i) => {
                n(e, i.$tooltip, t.aspectRatio),
                  t.on("aspectRatio", () => {
                    n(e, i.$tooltip, t.aspectRatio);
                  });
              },
            };
          })(this.art)
        ),
      e.flip &&
        t.push(
          (function (t) {
            const {
              i18n: e,
              constructor: { SETTING_ITEM_WIDTH: i, FLIP: r },
            } = t;
            function a(t, i, r) {
              i && (i.innerText = e.get(V(r)));
              const a = f(".art-setting-item", t).find(
                (t) => t.dataset.value === r
              );
              a && x(a, "art-current");
            }
            return {
              width: i,
              name: "flip",
              html: e.get("Video Flip"),
              tooltip: e.get(V(t.flip)),
              selector: r.map((i) => ({
                value: i,
                name: `aspect-ratio-${i}`,
                default: i === t.flip,
                html: e.get(V(i)),
              })),
              onSelect: (e) => ((t.flip = e.value), e.html),
              mounted: (e, i) => {
                a(e, i.$tooltip, t.flip),
                  t.on("flip", () => {
                    a(e, i.$tooltip, t.flip);
                  });
              },
            };
          })(this.art)
        ),
      e.theme &&
        t.push(
          (function (t) {
            const {
                option: e,
                i18n: i,
                storage: r,
                constructor: { SETTING_ITEM_WIDTH: a, THEM_COLOR: s },
              } = t,
              n = (t) => `<span style="color: ${t}">${s[t]}</span>`,
              o = r.mediaGet("theme") || e.theme;
            return {
              width: a,
              name: "them-color",
              html: i.get("Theme"),
              tooltip: n(o),
              selector: Object.keys(s).map((t, e) => ({
                default: o === t,
                html: n(t),
                value: t,
              })),
              onSelect: (e) => (
                (t.theme = e.value), r.mediaSet("theme", e.value), e.html
              ),
            };
          })(this.art)
        ),
      t
    );
  }
  init() {
    const { option: t } = this.art,
      e = [...this.defaultSettings, ...t.settings];
    (this.option = Lt.makeRecursion(e)),
      this.destroy(),
      this.render(this.option);
  }
  destroy() {
    for (let t = 0; t < this.events.length; t++)
      this.art.events.remove(this.events[t]);
    (this.$parent.innerHTML = ""), (this.events = []), (this.cache = new Map());
  }
  find(t = "", e = this.option) {
    for (let i = 0; i < e.length; i++) {
      const r = e[i];
      if (r.name === t) return r;
      {
        const e = this.find(t, r.selector || []);
        if (e) return e;
      }
    }
  }
  remove(t) {
    const e = this.find(t);
    M(e, `Can't find [${t}] from the [setting]`);
    const i = e.$parentItem ? e.$parentItem.selector : this.option;
    return (
      i.splice(i.indexOf(e), 1),
      (this.option = Lt.makeRecursion(this.option)),
      this.destroy(),
      this.render(this.option),
      this.option
    );
  }
  update(t) {
    const e = this.find(t.name);
    return (
      e
        ? (Object.assign(e, t),
          (this.option = Lt.makeRecursion(this.option)),
          this.destroy(),
          this.render(this.option))
        : this.add(t),
      this.option
    );
  }
  add(t) {
    return (
      this.option.push(t),
      (this.option = Lt.makeRecursion(this.option)),
      this.destroy(),
      this.render(this.option),
      this.option
    );
  }
  creatHeader(t) {
    const { icons: e, proxy: i, constructor: r } = this.art,
      a = D("div");
    I(a, "height", `${r.SETTING_ITEM_HEIGHT}px`),
      p(a, "art-setting-item"),
      p(a, "art-setting-item-back");
    const s = E(a, '<div class="art-setting-item-left"></div>'),
      n = D("div");
    p(n, "art-setting-item-left-icon"),
      E(n, e.arrowLeft),
      E(s, n),
      E(s, t.$parentItem.html);
    const o = i(a, "click", () => this.render(t.$parentList));
    return this.events.push(o), a;
  }
  creatItem(t, e) {
    const { icons: i, proxy: r, constructor: a } = this.art,
      s = D("div");
    p(s, "art-setting-item"),
      I(s, "height", `${a.SETTING_ITEM_HEIGHT}px`),
      K(e.name) && (s.dataset.name = e.name),
      K(e.value) && (s.dataset.value = e.value);
    const n = E(s, '<div class="art-setting-item-left"></div>'),
      o = E(s, '<div class="art-setting-item-right"></div>'),
      h = D("div");
    p(h, "art-setting-item-left-text"),
      E(h, e.html || ""),
      E(n, h),
      (e.$html = h),
      P(e, "html", {
        configurable: !0,
        get: () => h.innerHTML,
        set(t) {
          K(t) && (h.innerHTML = t);
        },
      });
    const l = D("div");
    switch (
      (p(l, "art-setting-item-right-tooltip"),
      E(l, e.tooltip || ""),
      E(o, l),
      (e.$tooltip = l),
      P(e, "tooltip", {
        configurable: !0,
        get: () => l.innerHTML,
        set(t) {
          K(t) && (l.innerHTML = t);
        },
      }),
      t)
    ) {
      case "switch": {
        const t = D("div");
        p(t, "art-setting-item-right-icon");
        const r = E(t, i.switchOn),
          a = E(t, i.switchOff);
        I(e.switch ? a : r, "display", "none"),
          E(o, t),
          (e.$switch = e.switch),
          P(e, "switch", {
            configurable: !0,
            get: () => e.$switch,
            set(t) {
              (e.$switch = t),
                t
                  ? (I(a, "display", "none"), I(r, "display", null))
                  : (I(a, "display", null), I(r, "display", "none"));
            },
          });
        break;
      }
      case "range":
        {
          const t = D("div");
          p(t, "art-setting-item-right-icon");
          const i = E(t, '<input type="range">');
          (i.value = e.range[0] || 0),
            (i.min = e.range[1] || 0),
            (i.max = e.range[2] || 10),
            (i.step = e.range[3] || 1),
            p(i, "art-setting-range"),
            E(o, t),
            (e.$range = i),
            P(e, "range", {
              configurable: !0,
              get: () => i.valueAsNumber,
              set(t) {
                i.value = Number(t);
              },
            });
        }
        break;
      case "selector":
        if (e.selector && e.selector.length) {
          const t = D("div");
          p(t, "art-setting-item-right-icon"), E(t, i.arrowRight), E(o, t);
        }
    }
    switch (t) {
      case "switch":
        if (e.onSwitch) {
          const t = r(s, "click", async (t) => {
            e.switch = await e.onSwitch.call(this.art, e, s, t);
          });
          this.events.push(t);
        }
        break;
      case "range":
        if (e.$range) {
          if (e.onRange) {
            const t = r(e.$range, "change", async (t) => {
              e.tooltip = await e.onRange.call(this.art, e, s, t);
            });
            this.events.push(t);
          }
          if (e.onChange) {
            const t = r(e.$range, "input", async (t) => {
              e.tooltip = await e.onChange.call(this.art, e, s, t);
            });
            this.events.push(t);
          }
        }
        break;
      case "selector": {
        const t = r(s, "click", async (t) => {
          if (e.selector && e.selector.length) this.render(e.selector, e.width);
          else {
            x(s, "art-current");
            for (let t = 0; t < e.$parentItem.selector.length; t++) {
              const i = e.$parentItem.selector[t];
              i.default = i === e;
            }
            if (
              (e.$parentList && this.render(e.$parentList),
              e.$parentItem && e.$parentItem.onSelect)
            ) {
              const i = await e.$parentItem.onSelect.call(this.art, e, s, t);
              e.$parentItem.$tooltip &&
                K(i) &&
                (e.$parentItem.$tooltip.innerHTML = i);
            }
          }
        });
        this.events.push(t), e.default && p(s, "art-current");
      }
    }
    return s;
  }
  updateStyle(t) {
    const {
      controls: e,
      constructor: i,
      template: { $player: r, $setting: a },
    } = this.art;
    if (e.setting && !h) {
      const s = t || i.SETTING_WIDTH,
        { left: n, width: o } = e.setting.getBoundingClientRect(),
        { left: h, width: l } = r.getBoundingClientRect(),
        A = n - h + o / 2 - s / 2;
      A + s > l
        ? (I(a, "left", null), I(a, "right", null))
        : (I(a, "left", `${A}px`), I(a, "right", "auto"));
    }
  }
  render(t, e) {
    const { constructor: i } = this.art;
    if (this.cache.has(t)) {
      const e = this.cache.get(t);
      x(e, "art-current"),
        I(this.$parent, "width", `${e.dataset.width}px`),
        I(this.$parent, "height", `${e.dataset.height}px`),
        this.updateStyle(Number(e.dataset.width));
    } else {
      const r = D("div");
      p(r, "art-setting-panel"),
        (r.dataset.width = e || i.SETTING_WIDTH),
        (r.dataset.height = t.length * i.SETTING_ITEM_HEIGHT),
        t[0] &&
          t[0].$parentItem &&
          (E(r, this.creatHeader(t[0])),
          (r.dataset.height =
            Number(r.dataset.height) + i.SETTING_ITEM_HEIGHT));
      for (let e = 0; e < t.length; e++) {
        const i = t[e];
        N(i, "switch")
          ? E(r, this.creatItem("switch", i))
          : N(i, "range")
          ? E(r, this.creatItem("range", i))
          : E(r, this.creatItem("selector", i));
      }
      E(this.$parent, r),
        this.cache.set(t, r),
        x(r, "art-current"),
        I(this.$parent, "width", `${r.dataset.width}px`),
        I(this.$parent, "height", `${r.dataset.height}px`),
        this.updateStyle(Number(r.dataset.width)),
        t[0] &&
          t[0].$parentItem &&
          t[0].$parentItem.mounted &&
          t[0].$parentItem.mounted.call(this.art, r, t[0].$parentItem);
    }
  }
}
class Tt {
  constructor() {
    (this.name = "xplayer"), (this.mediaName = "media"), (this.settings = {});
  }
  parseLocalStorage() {
    try {
      return JSON.parse(window.localStorage.getItem(this.name)) || {};
    } catch (t) {
      return this.settings;
    }
  }
  updateLocalStorage(t) {
    try {
      window.localStorage.setItem(this.name, JSON.stringify(t));
    } catch (e) {
      this.settings = t;
    }
  }
  get(t) {
    const e = this.parseLocalStorage();
    return t ? e[t] : e;
  }
  mediaGet(t) {
    const e = this.parseLocalStorage()[this.mediaName] || {};
    return t ? e[t] : e;
  }
  set(t, e) {
    const i = Object.assign({}, this.get(), { [t]: e });
    this.updateLocalStorage(i);
  }
  mediaSet(t, e) {
    const i = Object.assign({}, this.get(), {
      [this.mediaName]: Object.assign({}, this.mediaGet(), { [t]: e }),
    });
    this.updateLocalStorage(i);
  }
  del(t) {
    const e = this.get();
    delete e[t], this.updateLocalStorage(e);
  }
  mediaDel(t) {
    const e = this.mediaGet();
    delete e[t];
    const i = Object.assign({}, this.get(), { [this.mediaName]: e });
    this.updateLocalStorage(i);
  }
  clear() {
    try {
      window.localStorage.removeItem(this.name);
    } catch (t) {
      this.settings = {};
    }
  }
}
function Mt(t) {
  return (
    t.on("control", (e) => {
      e
        ? m(t.template.$player, "art-mini-progress-bar")
        : p(t.template.$player, "art-mini-progress-bar");
    }),
    { name: "mini-progress-bar" }
  );
}
function Ft(t) {
  const {
    constructor: e,
    template: { $player: i, $video: r },
  } = t;
  return (
    t.on("fullscreenWeb", (a) => {
      if (a) {
        const { videoWidth: a, videoHeight: s } = r,
          { clientWidth: n, clientHeight: o } = document.documentElement;
        ((a > s && n < o) || (a < s && n > o)) &&
          setTimeout(() => {
            I(i, "width", `${o}px`),
              I(i, "height", `${n}px`),
              I(i, "transform-origin", "0 0"),
              I(i, "transform", `rotate(90deg) translate(0, -${n}px)`),
              p(i, "art-auto-orientation"),
              (t.isRotate = !0),
              t.emit("resize");
          }, e.AUTO_ORIENTATION_TIME);
      } else
        v(i, "art-auto-orientation") &&
          (m(i, "art-auto-orientation"), (t.isRotate = !1), t.emit("resize"));
    }),
    t.on("fullscreen", async (t) => {
      const e = screen.orientation.type;
      if (t) {
        const { videoWidth: t, videoHeight: a } = r,
          { clientWidth: s, clientHeight: n } = document.documentElement;
        if ((t > a && s < n) || (t < a && s > n)) {
          const t = e.startsWith("portrait") ? "landscape" : "portrait";
          await screen.orientation.lock(t),
            p(i, "art-auto-orientation-fullscreen");
        }
      } else
        v(i, "art-auto-orientation-fullscreen") &&
          (await screen.orientation.lock(e),
          m(i, "art-auto-orientation-fullscreen"));
    }),
    {
      name: "autoOrientation",
      get state() {
        return v(i, "art-auto-orientation");
      },
    }
  );
}
function Pt(t) {
  const {
      i18n: e,
      icons: i,
      storage: r,
      constructor: a,
      proxy: s,
      template: { $poster: n },
    } = t,
    o = t.layers.add({
      name: "auto-playback",
      html: '\n            <div class="art-auto-playback-close"></div>\n            <div class="art-auto-playback-last"></div>\n        ',
    }),
    h = g(".art-auto-playback-last", o),
    l = g(".art-auto-playback-close", o);
  return (
    t.on("video:timeupdate", () => {
      if (t.playing) {
        const e = r.get("times") || {},
          i = Object.keys(e);
        i.length > a.AUTO_PLAYBACK_MAX && delete e[i[0]],
          (e[t.option.id || t.option.url] = t.currentTime),
          r.set("times", e);
      }
    }),
    t.on("ready", () => {
      const n = (r.get("times") || {})[t.option.id || t.option.url];
      n &&
        n >= a.AUTO_PLAYBACK_MIN &&
        (E(l, i.close),
        I(o, "display", "flex"),
        (h.innerText = `${e.get("Last Seen")} ${z(n)}`),
        s(l, "click", () => {
          I(o, "display", "none");
        }),
        t.once("video:timeupdate", () => {
          setTimeout(() => {
            I(o, "display", "none");
          }, a.AUTO_PLAYBACK_TIMEOUT);
        }));
    }),
    {
      name: "auto-playback",
      get times() {
        return r.get("times") || {};
      },
      clear: () => r.del("times"),
      delete(t) {
        const e = r.get("times") || {};
        return delete e[t], r.set("times", e), e;
      },
    }
  );
}
function _t(t) {
  const {
    constructor: e,
    proxy: i,
    template: { $player: r, $video: a },
  } = t;
  let s = null,
    n = !1,
    o = 1;
  const h = () => {
    clearTimeout(s),
      n && ((n = !1), (t.playbackRate = o), m(r, "art-fast-forward"));
  };
  return (
    i(a, "touchstart", (i) => {
      1 === i.touches.length &&
        t.playing &&
        !t.isLock &&
        (s = setTimeout(() => {
          (n = !0),
            (o = t.playbackRate),
            (t.playbackRate = e.FAST_FORWARD_VALUE),
            p(r, "art-fast-forward");
        }, e.FAST_FORWARD_TIME));
    }),
    i(document, "touchmove", h),
    i(document, "touchend", h),
    {
      name: "fastForward",
      get state() {
        return v(r, "art-fast-forward");
      },
    }
  );
}
function Nt(t) {
  const {
    layers: e,
    icons: i,
    template: { $player: r },
  } = t;
  return (
    e.add({
      name: "lock",
      mounted(e) {
        const r = E(e, i.lock),
          a = E(e, i.unlock);
        I(r, "display", "none"),
          t.on("lock", (t) => {
            t
              ? (I(r, "display", "inline-flex"), I(a, "display", "none"))
              : (I(r, "display", "none"), I(a, "display", "inline-flex"));
          });
      },
      click() {
        v(r, "art-lock")
          ? (m(r, "art-lock"), (this.isLock = !1), t.emit("lock", !1))
          : (p(r, "art-lock"), (this.isLock = !0), t.emit("lock", !0));
      },
    }),
    {
      name: "lock",
      get state() {
        return v(r, "art-lock");
      },
    }
  );
}
class Ut {
  constructor(t) {
    (this.art = t), (this.id = 0);
    const { option: e } = t;
    e.miniProgressBar && !e.isLive && this.add(Mt),
      e.lock && h && this.add(Nt),
      e.autoPlayback && !e.isLive && this.add(Pt),
      e.autoOrientation && h && this.add(Ft),
      e.fastForward && h && !e.isLive && this.add(_t);
    for (let i = 0; i < e.plugins.length; i++) this.add(e.plugins[i]);
  }
  async add(t) {
    this.id += 1;
    const e = await t.call(this.art, this.art),
      i = (e && e.name) || t.name || `plugin${this.id}`;
    return (
      M(
        !N(this, i),
        `Cannot add a plugin that already has the same name: ${i}`
      ),
      P(this, i, { value: e }),
      this
    );
  }
}
class Gt extends ot {
  constructor(t) {
    super(t);
    const {
      i18n: e,
      icons: i,
      proxy: r,
      template: { $headRight: a },
    } = t;
    w(E(a, i.issue), e.get("Issue"), "left"),
      r(a, "click", () => {
        window.open("https://chat.cdnkan.top/", "_blank");
      });
  }
}
let Ot = 0;
const jt = [];
class Yt extends t {
  constructor(t, e) {
    super(), (this.id = ++Ot);
    const i = G(Yt.option, t);
    (i.container = t.container),
      (this.option = i),
      (this.isLock = !1),
      (this.isReady = !1),
      (this.isFocus = !1),
      (this.isInput = !1),
      (this.isRotate = !1),
      (this.isDestroy = !1),
      (this.template = new J(this)),
      (this.events = new kt(this)),
      (this.storage = new Tt(this)),
      (this.icons = new Rt(this)),
      (this.i18n = new X(this)),
      (this.notice = new bt(this)),
      (this.player = new nt(this)),
      (this.layers = new wt(this)),
      (this.Head = new Gt(this)),
      (this.controls = new yt(this)),
      (this.contextmenu = new It(this)),
      (this.info = new Ct(this)),
      (this.loading = new St(this)),
      (this.hotkey = new xt(this)),
      (this.mask = new Dt(this)),
      (this.setting = new Lt(this)),
      (this.plugins = new Ut(this)),
      "function" == typeof e && this.on("ready", () => e.call(this, this)),
      jt.push(this);
  }
  static get instances() {
    return jt;
  }
  static get version() {
    return "5.10";
  }
  static get config() {
    return W;
  }
  static get utils() {
    return q;
  }
  static get Emitter() {
    return t;
  }
  static get html() {
    return J.html;
  }
  static get option() {
    return {
      id: "",
      container: "#artplayer",
      url: "",
      poster: "",
      type: "",
      theme: "#f00",
      volume: 0.7,
      isLive: !1,
      muted: !1,
      autoplay: !1,
      autoSize: !1,
      autoMini: !1,
      loop: !1,
      flip: !1,
      playbackRate: !1,
      aspectRatio: !1,
      setting: !1,
      hotkey: !0,
      pip: !1,
      mutex: !0,
      backdrop: !0,
      fullscreen: !1,
      miniProgressBar: !1,
      useSSR: !1,
      playsInline: !0,
      lock: !1,
      fastForward: !1,
      autoPlayback: !1,
      autoOrientation: !1,
      layers: [],
      contextmenu: [],
      controls: [],
      settings: [],
      quality: [],
      highlight: [],
      plugins: [],
      thumbnails: { url: "", number: 60, column: 10, width: 0, height: 0 },
      i18n: {},
      icons: {},
      cssVar: {},
      customType: {},
      lang: navigator.language.toLowerCase(),
    };
  }
  get proxy() {
    return this.events.proxy;
  }
  get query() {
    return this.template.query;
  }
  get video() {
    return this.template.$video;
  }
  destroy(t = !0) {
    this.events.destroy(),
      this.template.destroy(t),
      jt.splice(jt.indexOf(this), 1),
      (this.isDestroy = !0),
      this.emit("destroy");
  }
}
function Ht(t) {
  switch (t) {
    case 1:
    case 2:
    case 3:
    default:
      return 0;
    case 4:
    case 5:
      return 1;
  }
}
function Vt(t) {
  return fetch(t)
    .then((t) => t.text())
    .then((t) =>
      (function (t) {
        if ("string" != typeof t) return [];
        const e = t.matchAll(
          /<d (?:.*? )??p="(?<p>.+?)"(?: .*?)?>(?<text>.+?)<\/d>/gs
        );
        return Array.from(e)
          .map((t) => {
            const e = t.groups.p.split(",");
            return e.length >= 8
              ? {
                  text: t.groups.text
                    .trim()
                    .replaceAll("&quot;", '"')
                    .replaceAll("&apos;", "'")
                    .replaceAll("&lt;", "<")
                    .replaceAll("&gt;", ">")
                    .replaceAll("&amp;", "&"),
                  time: Number(e[0]),
                  mode: Ht(Number(e[1])),
                  fontSize: Number(e[2]),
                  color: `#${Number(e[3]).toString(16)}`,
                  timestamp: Number(e[4]),
                  pool: Number(e[5]),
                  userID: e[6],
                  rowID: Number(e[7]),
                }
              : null;
          })
          .filter(Boolean);
      })(t)
    );
}
(Yt.CONTEXTMENU = !0),
  (Yt.NOTICE_TIME = 2e3),
  (Yt.SETTING_WIDTH = 250),
  (Yt.SETTING_ITEM_WIDTH = 200),
  (Yt.SETTING_ITEM_HEIGHT = 35),
  (Yt.RESIZE_TIME = 200),
  (Yt.SCROLL_TIME = 200),
  (Yt.SCROLL_GAP = 50),
  (Yt.AUTO_PLAYBACK_MAX = 10),
  (Yt.AUTO_PLAYBACK_MIN = 5),
  (Yt.AUTO_PLAYBACK_TIMEOUT = 3e3),
  (Yt.RECONNECT_TIME_MAX = 3),
  (Yt.RECONNECT_SLEEP_TIME = 1e3),
  (Yt.CONTROL_HIDE_TIME = 2e3),
  (Yt.DBCLICK_TIME = 300),
  (Yt.DBCLICK_FULLSCREEN = !0),
  (Yt.MOBILE_DBCLICK_PLAY = !0),
  (Yt.MOBILE_CLICK_PLAY = !1),
  (Yt.AUTO_ORIENTATION_TIME = 200),
  (Yt.INFO_LOOP_TIME = 1e3),
  (Yt.FAST_FORWARD_VALUE = 3),
  (Yt.FAST_FORWARD_TIME = 1e3),
  (Yt.TOUCH_MOVE_RATIO = 0.5),
  (Yt.VOLUME_STEP = 0.1),
  (Yt.SEEK_STEP = 5),
  (Yt.PLAYBACK_RATE = ["2.0", "1.5", "1.25", "1.0", "0.75", "0.5"]),
  (Yt.ASPECT_RATIO = ["default", "4:3", "16:9"]),
  (Yt.FLIP = ["normal", "horizontal", "vertical"]),
  (Yt.FULLSCREEN_WEB_IN_BODY = !1),
  (Yt.LOG_VERSION = !0),
  (Yt.USE_RAF = !1),
  (Yt.THEM_COLOR = {
    "#23ade5": "哔哩蓝",
    "#ce0021": "中国红",
    "#f1511b": "西瓜红",
    "#71db00": "奇异绿",
    "#ff6f00": "芒果橙",
    "#fb7299": "少女粉",
    "#d159cd": "葡萄紫",
    "#ffee16": "洋气黄",
  });
const Kt =
    "IWZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO29ubWVzc2FnZT10PT57Y29uc3R7ZGF0YTplfT10LGk9ZnVuY3Rpb24oe3RhcmdldDp0LGVtaXRzOmUsY2xpZW50V2lkdGg6aSxjbGllbnRIZWlnaHQ6bixtYXJnaW5Cb3R0b206cyxtYXJnaW5Ub3A6aCxhbnRpT3ZlcmxhcDpvfSl7Y29uc3Qgcj1lLmZpbHRlcigoZT0+ZS5tb2RlPT09dC5tb2RlJiZlLnRvcDw9bi1zKSkuc29ydCgoKHQsZSk9PnQudG9wLWUudG9wKSk7aWYoMD09PXIubGVuZ3RoKXJldHVybiBoO3IudW5zaGlmdCh7dG9wOjAsbGVmdDowLHJpZ2h0OjAsaGVpZ2h0Omgsd2lkdGg6aSxzcGVlZDowLGRpc3RhbmNlOml9KSxyLnB1c2goe3RvcDpuLXMsbGVmdDowLHJpZ2h0OjAsaGVpZ2h0OnMsd2lkdGg6aSxzcGVlZDowLGRpc3RhbmNlOml9KTtmb3IobGV0IGE9MTthPHIubGVuZ3RoO2ErPTEpe2NvbnN0IGU9clthXSxpPXJbYS0xXSxuPWkudG9wK2kuaGVpZ2h0O2lmKGUudG9wLW4+PXQuaGVpZ2h0KXJldHVybiBufWNvbnN0IHA9W107Zm9yKGxldCBhPTE7YTxyLmxlbmd0aC0xO2ErPTEpe2NvbnN0IHQ9clthXTtpZihwLmxlbmd0aCl7Y29uc3QgZT1wW3AubGVuZ3RoLTFdO2VbMF0udG9wPT09dC50b3A/ZS5wdXNoKHQpOnAucHVzaChbdF0pfWVsc2UgcC5wdXNoKFt0XSl9aWYoIW8pe3N3aXRjaCh0Lm1vZGUpe2Nhc2UgMDpwLnNvcnQoKCh0LGUpPT57Y29uc3QgaT1NYXRoLm1pbiguLi5lLm1hcCgodD0+dC5yaWdodCkpKSxuPU1hdGgubWluKC4uLnQubWFwKCh0PT50LnJpZ2h0KSkpO3JldHVybiBpKmUubGVuZ3RoLW4qdC5sZW5ndGh9KSk7YnJlYWs7Y2FzZSAxOnAuc29ydCgoKHQsZSk9Pntjb25zdCBpPU1hdGgubWF4KC4uLmUubWFwKCh0PT50LndpZHRoKSkpO3JldHVybiBNYXRoLm1heCguLi50Lm1hcCgodD0+dC53aWR0aCkpKSp0Lmxlbmd0aC1pKmUubGVuZ3RofSkpfXJldHVybiBwWzBdWzBdLnRvcH1zd2l0Y2godC5tb2RlKXtjYXNlIDA6e2NvbnN0IGU9cC5maW5kKChlPT5lLmV2ZXJ5KChlPT4hKGk8ZS5kaXN0YW5jZSkmJih0LnNwZWVkPGUuc3BlZWR8fGUucmlnaHQvKHQuc3BlZWQtZS5zcGVlZCk+ZS50aW1lKSkpKSk7cmV0dXJuIGUmJmVbMF0/ZVswXS50b3A6dm9pZCAwfWNhc2UgMTpyZXR1cm59fShlKTtzZWxmLnBvc3RNZXNzYWdlKHt0b3A6aSxpZDplLmlkfSl9fSgpOwo=",
  zt =
    "undefined" != typeof window &&
    window.Blob &&
    new Blob([atob(Kt)], { type: "text/javascript;charset=utf-8" });
function qt(t) {
  let e;
  try {
    if (((e = zt && (window.URL || window.webkitURL).createObjectURL(zt)), !e))
      throw "";
    const i = new Worker(e, { name: null == t ? void 0 : t.name });
    return (
      i.addEventListener("error", () => {
        (window.URL || window.webkitURL).revokeObjectURL(e);
      }),
      i
    );
  } catch (i) {
    return new Worker("data:application/javascript;base64," + Kt, {
      name: null == t ? void 0 : t.name,
    });
  } finally {
    e && (window.URL || window.webkitURL).revokeObjectURL(e);
  }
}
class Wt {
  constructor(t, e) {
    const { constructor: i, template: r, storage: a } = t;
    if (
      ((this.originOption = e),
      (this.utils = i.utils),
      (this.$danmuku = r.$danmuku),
      (this.$player = r.$player),
      (this.storage = a),
      (this.art = t),
      (this.danmus = []),
      (this.queue = []),
      (this.option = {}),
      (this.$refs = []),
      (this.isStop = !1),
      (this.isHide = !1),
      (this.timer = null),
      this.config(e),
      this.option.useWorker)
    )
      try {
        this.worker = new qt();
      } catch (s) {}
    (this.start = this.start.bind(this)),
      (this.stop = this.stop.bind(this)),
      (this.reset = this.reset.bind(this)),
      (this.destroy = this.destroy.bind(this)),
      t.on("video:play", this.start),
      t.on("video:playing", this.start),
      t.on("video:pause", this.stop),
      t.on("video:waiting", this.stop),
      t.on("resize", this.reset),
      t.on("destroy", this.destroy),
      this.load();
  }
  static get originOption() {
    return this.originOption;
  }
  static get option() {
    return {
      danmuku: [],
      switch: 1,
      speed: 5,
      margin: ["2%", "25%"],
      opacity: 1,
      color: "#FFFFFF",
      mode: 0,
      fontSize: 25,
      filter: () => !0,
      antiOverlap: !0,
      useWorker: !0,
      synchronousPlayback: !1,
      lockTime: 5,
      maxLength: 100,
      minWidth: 200,
      maxWidth: 400,
      mount: void 0,
      theme: "dark",
      heatmap: !1,
      beforeEmit: () => !0,
    };
  }
  get isRotate() {
    return (
      this.art.plugins.autoOrientation && this.art.plugins.autoOrientation.state
    );
  }
  getMargin(t) {
    const { clamp: e } = this.utils,
      { clientHeight: i } = this.$player;
    return t ? e(i * ((100 - t) / 100), 0, i) : 0;
  }
  getFontSize(t) {
    const { isMobile: e } = this.utils;
    let i = Math.max(12, this.getScaleSize(t, 25));
    return e && (i *= 0.75), i;
  }
  getScaleSize(t, e) {
    const { clientHeight: i } = this.$player,
      r = (t * e) / 25;
    return i <= 314
      ? 16
      : i <= 499
      ? r * (0.0385 * i + 3.29)
      : i <= 608
      ? r * (0.041 * i)
      : i <= 700
      ? r * (0.022 * i + 12)
      : i <= 816
      ? 27 * r
      : i <= 980
      ? r * (0.0365 * i - 2.5)
      : i <= 1300
      ? r * (0.022 * i + 18.5)
      : 40 * r;
  }
  filter(t, e) {
    return this.queue.filter((e) => e.$state === t).map(e);
  }
  getLeft(t) {
    const e = t.getBoundingClientRect();
    return this.isRotate ? e.top : e.left;
  }
  getRef() {
    const t = this.$refs.pop();
    if (t) return t;
    const e = document.createElement("div");
    return (
      (e.style.cssText =
        '\n            user-select: none;\n            position: absolute;\n            white-space: pre;\n            pointer-events: none;\n            perspective: 500px;\n            display: inline-block;\n            will-change: transform;\n            font-weight: normal;\n            line-height: 1.125;\n            visibility: hidden;\n            font-family: SimHei, "Microsoft JhengHei", Arial, Helvetica, sans-serif;\n            text-shadow: rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) -1px 0px 1px;\n        '),
      e
    );
  }
  getReady() {
    const { currentTime: t } = this.art;
    return this.queue.filter(
      (e) =>
        "ready" === e.$state ||
        ("wait" === e.$state && t + 0.1 >= e.time && e.time >= t - 0.1)
    );
  }
  getEmits() {
    const t = [],
      { clientWidth: e } = this.$player,
      i = this.getLeft(this.$player);
    return (
      this.filter("emit", (r) => {
        const a = r.$ref.offsetTop,
          s = this.getLeft(r.$ref) - i,
          n = r.$ref.clientHeight,
          o = r.$ref.clientWidth,
          h = s + o,
          l = e - h,
          A = h / r.$restTime,
          d = {};
        (d.top = a),
          (d.left = s),
          (d.height = n),
          (d.width = o),
          (d.right = l),
          (d.speed = A),
          (d.distance = h),
          (d.time = r.$restTime),
          (d.mode = r.mode),
          t.push(d);
      }),
      t
    );
  }
  postMessage(t = {}) {
    return new Promise((e) => {
      if (this.option.useWorker && this.worker && this.worker.postMessage)
        (t.id = Date.now()),
          this.worker.postMessage(t),
          (this.worker.onmessage = (i) => {
            const { data: r } = i;
            r.id === t.id && e(r);
          });
      else {
        const i = (function ({
          target: t,
          emits: e,
          clientWidth: i,
          clientHeight: r,
          marginBottom: a,
          marginTop: s,
          antiOverlap: n,
        }) {
          const o = e
            .filter((e) => e.mode === t.mode && e.top <= r - a)
            .sort((t, e) => t.top - e.top);
          if (0 === o.length) return s;
          o.unshift({
            top: 0,
            left: 0,
            right: 0,
            height: s,
            width: i,
            speed: 0,
            distance: i,
          }),
            o.push({
              top: r - a,
              left: 0,
              right: 0,
              height: a,
              width: i,
              speed: 0,
              distance: i,
            });
          for (let l = 1; l < o.length; l += 1) {
            const e = o[l],
              i = o[l - 1],
              r = i.top + i.height;
            if (e.top - r >= t.height) return r;
          }
          const h = [];
          for (let l = 1; l < o.length - 1; l += 1) {
            const t = o[l];
            if (h.length) {
              const e = h[h.length - 1];
              e[0].top === t.top ? e.push(t) : h.push([t]);
            } else h.push([t]);
          }
          if (!n) {
            switch (t.mode) {
              case 0:
                h.sort((t, e) => {
                  const i = Math.min(...e.map((t) => t.right)),
                    r = Math.min(...t.map((t) => t.right));
                  return i * e.length - r * t.length;
                });
                break;
              case 1:
                h.sort((t, e) => {
                  const i = Math.max(...e.map((t) => t.width));
                  return (
                    Math.max(...t.map((t) => t.width)) * t.length - i * e.length
                  );
                });
            }
            return h[0][0].top;
          }
          switch (t.mode) {
            case 0: {
              const e = h.find((e) =>
                e.every(
                  (e) =>
                    !(i < e.distance) &&
                    (t.speed < e.speed ||
                      e.right / (t.speed - e.speed) > e.time)
                )
              );
              return e && e[0] ? e[0].top : void 0;
            }
            case 1:
              return;
          }
        })(t);
        e({ top: i });
      }
    });
  }
  async load() {
    try {
      "function" == typeof this.option.danmuku
        ? (this.danmus = await this.option.danmuku())
        : "function" == typeof this.option.danmuku.then
        ? (this.danmus = await this.option.danmuku)
        : "string" == typeof this.option.danmuku
        ? (this.danmus = await Vt(this.option.danmuku))
        : (this.danmus = this.option.danmuku),
        this.utils.errorHandle(
          Array.isArray(this.danmus),
          "Danmuku need return an array as result"
        ),
        this.art.emit("YTDM:loaded", this.danmus),
        (this.queue = []),
        (this.$danmuku.innerText = ""),
        this.danmus.forEach((t) => this.emit(t));
    } catch (t) {
      throw (this.art.emit("YTDM:error", t), t);
    }
    return this;
  }
  config(t) {
    const { clamp: e } = this.utils;
    return (
      (this.option = { ...this.option, ...t }),
      (this.option.lockTime = e(Math.floor(this.option.lockTime), 0, 60)),
      (this.option.maxLength = e(this.option.maxLength, 0, 500)),
      (this.option.minWidth = e(this.option.minWidth, 0, 500)),
      (this.option.maxWidth = e(this.option.maxWidth, 0, 1 / 0)),
      this.art.emit("YTDM:config", this.option),
      this
    );
  }
  dmSettingConfig(t) {
    const { clamp: e } = this.utils;
    null != t.switch &&
      ((this.option.switch = t.switch), this.setStorage("switch", t.switch)),
      null != t.margin &&
        (0 == t.margin && (this.option.antiOverlap = !1),
        (this.option.antiOverlap = !0),
        (this.option.margin = this.getMargin(t.margin)),
        this.setStorage("margin", t.margin)),
      null != t.speed &&
        ((this.option.speed = e(t.speed, 1, 10)),
        this.setStorage("speed", t.speed)),
      null != t.opacity &&
        ((this.option.opacity = e(t.opacity, 0, 1)),
        this.setStorage("opacity", t.opacity)),
      null != t.fontSize &&
        ((this.option.fontSize = this.getFontSize(t.fontSize)),
        this.setStorage("fontSize", t.fontSize));
  }
  setStorage(t, e) {
    const i = this.storage.get("danmus") || {};
    JSON.stringify(i[t]) !== JSON.stringify(e) &&
      this.storage.set("danmus", { ...i, [t]: e });
  }
  getStorage(t) {
    const e = this.storage.get("danmus") || {};
    return null != t ? (null != e[t] ? e[t] : this.option[t]) : e;
  }
  makeWait(t) {
    (t.$state = "wait"),
      t.$ref &&
        ((t.$ref.style.visibility = "hidden"),
        (t.$ref.style.marginLeft = "0px"),
        (t.$ref.style.transform = "translateX(0px)"),
        (t.$ref.style.transition = "transform 0s linear 0s"),
        this.$refs.push(t.$ref),
        (t.$ref = null));
  }
  continue() {
    const { clientWidth: t } = this.$player;
    return (
      this.filter("stop", (e) => {
        switch (
          ((e.$state = "emit"), (e.$lastStartTime = Date.now()), e.mode)
        ) {
          case 0: {
            const i = t + e.$ref.clientWidth;
            (e.$ref.style.transform = `translateX(${-i}px)`),
              (e.$ref.style.transition = `transform ${e.$restTime}s linear 0s`);
            break;
          }
        }
      }),
      this
    );
  }
  suspend() {
    const { clientWidth: t } = this.$player;
    return (
      this.filter("emit", (e) => {
        switch (((e.$state = "stop"), e.mode)) {
          case 0: {
            const i = t - (this.getLeft(e.$ref) - this.getLeft(this.$player));
            (e.$ref.style.transform = `translateX(${-i}px)`),
              (e.$ref.style.transition = "transform 0s linear 0s");
            break;
          }
        }
      }),
      this
    );
  }
  reset() {
    const t = this.getStorage();
    return (
      (this.option.fontSize = this.getFontSize(t.fontSize || 1)),
      (this.option.margin = this.getMargin(t.margin || 50)),
      this
    );
  }
  update() {
    return (
      (this.timer = window.requestAnimationFrame(async () => {
        if (this.art.playing && !this.isHide) {
          this.filter("emit", (t) => {
            const e = (Date.now() - t.$lastStartTime) / 1e3;
            (t.$restTime -= e),
              (t.$lastStartTime = Date.now()),
              t.$restTime <= 0 && this.makeWait(t);
          });
          const t = this.getReady(),
            { clientWidth: e, clientHeight: i } = this.$player;
          for (let r = 0; r < t.length; r++) {
            const a = t[r];
            (a.$ref = this.getRef()),
              (a.$ref.innerText = a.text),
              this.$danmuku.appendChild(a.$ref),
              (a.$ref.style.left = `${e}px`),
              (a.$ref.style.opacity = this.option.opacity),
              (a.$ref.style.fontSize = `${this.option.fontSize}px`),
              (a.$ref.style.color = a.color),
              (a.$ref.style.border = a.border ? `1px solid ${a.color}` : null),
              (a.$ref.style.backgroundColor = a.border
                ? "rgb(0 0 0 / 50%)"
                : null),
              (a.$ref.style.marginLeft = "0px"),
              (a.$lastStartTime = Date.now()),
              (a.$restTime =
                this.option.synchronousPlayback && this.art.playbackRate
                  ? this.option.speed / Number(this.art.playbackRate)
                  : this.option.speed);
            const s = {
                mode: a.mode,
                height: a.$ref.clientHeight,
                speed: (e + a.$ref.clientWidth) / a.$restTime,
              },
              { top: n } = await this.postMessage({
                target: s,
                emits: this.getEmits(),
                antiOverlap: this.option.antiOverlap,
                clientWidth: e,
                clientHeight: i,
                marginBottom: this.option.margin,
                marginTop: 10,
              });
            if (a.$ref)
              if (this.isStop || void 0 === n)
                (a.$state = "ready"), this.$refs.push(a.$ref), (a.$ref = null);
              else
                switch (
                  ((a.$state = "emit"),
                  (a.$ref.style.visibility = "visible"),
                  a.mode)
                ) {
                  case 0: {
                    a.$ref.style.top = `${n}px`;
                    const t = e + a.$ref.clientWidth;
                    (a.$ref.style.transform = `translateX(${-t}px)`),
                      (a.$ref.style.transition = `transform ${a.$restTime}s linear 0s`);
                    break;
                  }
                  case 1:
                    (a.$ref.style.left = "50%"),
                      (a.$ref.style.top = `${n}px`),
                      (a.$ref.style.marginLeft = `-${
                        a.$ref.clientWidth / 2
                      }px`);
                }
          }
        }
        this.isStop || this.update();
      })),
      this
    );
  }
  stop() {
    return (
      (this.isStop = !0),
      this.suspend(),
      window.cancelAnimationFrame(this.timer),
      this.art.emit("YTDM:stop"),
      this
    );
  }
  start() {
    return (
      (this.isStop = !1),
      this.continue(),
      this.update(),
      this.art.emit("YTDM:start"),
      this
    );
  }
  show() {
    return (
      (this.isHide = !1),
      this.start(),
      (this.$danmuku.style.display = "block"),
      this.art.emit("YTDM:show"),
      this
    );
  }
  hide() {
    return (
      (this.isHide = !0),
      this.stop(),
      this.queue.forEach((t) => this.makeWait(t)),
      (this.$danmuku.style.display = "none"),
      this.art.emit("YTDM:hide"),
      this
    );
  }
  emit(t) {
    return t.text.trim() && this.option.filter(t)
      ? (t.time
          ? (t.time = this.utils.clamp(t.time, 0, 1 / 0))
          : (t.time = this.art.currentTime + 0.5),
        void 0 === t.mode && (t.mode = this.option.mode),
        void 0 === t.color && (t.color = this.option.color),
        this.queue.push({
          ...t,
          $state: "wait",
          $ref: null,
          $restTime: 0,
          $lastStartTime: 0,
        }),
        this)
      : this;
  }
  destroy() {
    this.stop(),
      this.worker && this.worker.terminate && this.worker.terminate(),
      this.art.off("video:play", this.start),
      this.art.off("video:playing", this.start),
      this.art.off("video:pause", this.stop),
      this.art.off("video:waiting", this.stop),
      this.art.off("resize", this.reset),
      this.art.off("destroy", this.destroy),
      this.art.emit("YTDM:destroy");
  }
}
const Jt =
    '<svg xmlns="http://www.w3.org/2000/svg"  width="24" height="24" data-pointer="none" viewBox="0 0 24 24">\r\n    <path fill-rule="evenodd"\r\n        d="M11.989 4.828c-.47 0-.975.004-1.515.012l-1.71-2.566a1.008 1.008 0 0 0-1.678 1.118l.999 1.5c-.681.018-1.403.04-2.164.068a4.013 4.013 0 0 0-3.83 3.44c-.165 1.15-.245 2.545-.245 4.185 0 1.965.115 3.67.35 5.116a4.012 4.012 0 0 0 3.763 3.363l.906.046c1.205.063 1.808.095 3.607.095a.988.988 0 0 0 0-1.975c-1.758 0-2.339-.03-3.501-.092l-.915-.047a2.037 2.037 0 0 1-1.91-1.708c-.216-1.324-.325-2.924-.325-4.798 0-1.563.076-2.864.225-3.904.14-.977.96-1.713 1.945-1.747 2.444-.087 4.465-.13 6.063-.131 1.598 0 3.62.044 6.064.13.96.034 1.71.81 1.855 1.814.075.524.113 1.962.141 3.065v.002c.01.342.017.65.025.88a.987.987 0 1 0 1.974-.068c-.008-.226-.016-.523-.025-.856v-.027c-.03-1.118-.073-2.663-.16-3.276-.273-1.906-1.783-3.438-3.74-3.507-.9-.032-1.743-.058-2.531-.078l1.05-1.46a1.008 1.008 0 0 0-1.638-1.177l-1.862 2.59c-.38-.004-.744-.007-1.088-.007h-.13Zm.521 4.775h-1.32v4.631h2.222v.847h-2.618v1.078h2.618l.003.678c.36.026.714.163 1.01.407h.11v-1.085h2.694v-1.078h-2.695v-.847H16.8v-4.63h-1.276a8.59 8.59 0 0 0 .748-1.42L15.183 7.8a14.232 14.232 0 0 1-.814 1.804h-1.518l.693-.308a8.862 8.862 0 0 0-.814-1.408l-1.045.352c.297.396.572.847.825 1.364Zm-4.18 3.564.154-1.485h1.98V8.294h-3.2v.98H9.33v1.43H7.472l-.308 3.453h2.277c0 1.166-.044 1.925-.12 2.277-.078.352-.386.528-.936.528-.308 0-.616-.022-.902-.055l.297 1.067.062.005c.285.02.551.04.818.04 1.001-.067 1.562-.419 1.694-1.057.11-.638.176-1.903.176-3.795h-2.2Zm7.458.11v-.858h-1.254v.858h1.254Zm-2.376-.858v.858h-1.199v-.858h1.2Zm-1.199-.946h1.2v-.902h-1.2v.902Zm2.321 0v-.902h1.254v.902h-1.254Z"\r\n        clip-rule="evenodd"></path>\r\n    <path fill="var(--art-theme)" fill-rule="evenodd"\r\n        d="M22.846 14.627a1 1 0 0 0-1.412.075l-5.091 5.703-2.216-2.275-.097-.086-.008-.005a1 1 0 0 0-1.322 1.493l2.963 3.041.093.083.007.005c.407.315 1 .27 1.354-.124l5.81-6.505.08-.102.005-.008a1 1 0 0 0-.166-1.295Z"\r\n        clip-rule="evenodd"></path>\r\n</svg>',
  Zt =
    '<svg xmlns=" http://www.w3.org/2000/svg"  width="24" height="24"  data-pointer="none" viewBox="0 0 24 24">\r\n    <path fill-rule="evenodd"\r\n        d="m8.085 4.891-.999-1.499a1.008 1.008 0 0 1 1.679-1.118l1.709 2.566c.54-.008 1.045-.012 1.515-.012h.13c.345 0 .707.003 1.088.007l1.862-2.59a1.008 1.008 0 0 1 1.637 1.177l-1.049 1.46c.788.02 1.631.046 2.53.078 1.958.069 3.468 1.6 3.74 3.507.088.613.13 2.158.16 3.276l.001.027c.01.333.017.63.025.856a.987.987 0 0 1-1.974.069c-.008-.23-.016-.539-.025-.881v-.002c-.028-1.103-.066-2.541-.142-3.065-.143-1.004-.895-1.78-1.854-1.813-2.444-.087-4.466-.13-6.064-.131-1.598 0-3.619.044-6.063.13a2.037 2.037 0 0 0-1.945 1.748c-.15 1.04-.225 2.341-.225 3.904 0 1.874.11 3.474.325 4.798.154.949.95 1.66 1.91 1.708a97.58 97.58 0 0 0 5.416.139.988.988 0 0 1 0 1.975c-2.196 0-3.61-.047-5.513-.141A4.012 4.012 0 0 1 2.197 17.7c-.236-1.446-.351-3.151-.351-5.116 0-1.64.08-3.035.245-4.184A4.013 4.013 0 0 1 5.92 4.96c.761-.027 1.483-.05 2.164-.069Zm4.436 4.707h-1.32v4.63h2.222v.848h-2.618v1.078h2.431a5.01 5.01 0 0 1 3.575-3.115V9.598h-1.276a8.59 8.59 0 0 0 .748-1.42l-1.089-.384a14.232 14.232 0 0 1-.814 1.804h-1.518l.693-.308a8.862 8.862 0 0 0-.814-1.408l-1.045.352c.297.396.572.847.825 1.364Zm-4.18 3.564.154-1.485h1.98V8.289h-3.2v.979h2.067v1.43H7.483l-.308 3.454h2.277c0 1.166-.044 1.925-.12 2.277-.078.352-.386.528-.936.528-.308 0-.616-.022-.902-.055l.297 1.067.062.004c.285.02.551.04.818.04 1.001-.066 1.562-.418 1.694-1.056.11-.638.176-1.903.176-3.795h-2.2Zm7.458.11v-.858h-1.254v.858H15.8Zm-2.376-.858v.858h-1.199v-.858h1.2Zm-1.199-.946h1.2v-.902h-1.2v.902Zm2.321 0v-.902H15.8v.902h-1.254Zm3.517 10.594a4 4 0 1 0 0-8 4 4 0 0 0 0 8Zm-.002-1.502a2.5 2.5 0 0 1-2.217-3.657l3.326 3.398a2.49 2.49 0 0 1-1.109.259Zm2.5-2.5c0 .42-.103.815-.286 1.162l-3.328-3.401a2.5 2.5 0 0 1 3.614 2.239Z"\r\n        clip-rule="evenodd"></path>\r\n</svg>',
  Xt =
    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" data-pointer="none" viewBox="0 0 24 24">\r\n    <path fill-rule="evenodd"\r\n        d="m15.645 4.881 1.06-1.473a.998.998 0 1 0-1.622-1.166L13.22 4.835a110.67 110.67 0 0 0-1.1-.007h-.131c-.47 0-.975.004-1.515.012L8.783 2.3A.998.998 0 0 0 7.12 3.408l.988 1.484c-.688.019-1.418.042-2.188.069a4.013 4.013 0 0 0-3.83 3.44c-.165 1.15-.245 2.545-.245 4.185 0 1.965.115 3.67.35 5.116a4.012 4.012 0 0 0 3.763 3.363c1.903.094 3.317.141 5.513.141a.988.988 0 0 0 0-1.975 97.58 97.58 0 0 1-5.416-.139 2.037 2.037 0 0 1-1.91-1.708c-.216-1.324-.325-2.924-.325-4.798 0-1.563.076-2.864.225-3.904.14-.977.96-1.713 1.945-1.747 2.444-.087 4.465-.13 6.063-.131 1.598 0 3.62.044 6.064.13.96.034 1.71.81 1.855 1.814.075.524.113 1.962.141 3.065v.002c.005.183.01.07.014-.038.004-.096.008-.189.011-.081a.987.987 0 1 0 1.974-.069c-.004-.105-.007-.009-.011.09-.002.056-.004.112-.007.135l-.002.01a.574.574 0 0 1-.005-.091v-.027c-.03-1.118-.073-2.663-.16-3.276-.273-1.906-1.783-3.438-3.74-3.507-.905-.032-1.752-.058-2.543-.079Zm-3.113 4.703h-1.307v4.643h2.2v.04l.651-1.234c.113-.215.281-.389.482-.509v-.11h.235c.137-.049.283-.074.433-.074h1.553V9.584h-1.264a8.5 8.5 0 0 0 .741-1.405l-1.078-.381c-.24.631-.501 1.23-.806 1.786h-1.503l.686-.305c-.228-.501-.5-.959-.806-1.394l-1.034.348c.294.392.566.839.817 1.35Zm-1.7 5.502h2.16l-.564 1.068h-1.595v-1.068Zm-2.498-1.863.152-1.561h1.96V8.289H7.277v.969h2.048v1.435h-1.84l-.306 3.51h2.254c0 1.155-.043 1.906-.12 2.255-.076.348-.38.523-.925.523-.305 0-.61-.022-.893-.055l.294 1.056.061.005c.282.02.546.039.81.039.991-.065 1.547-.414 1.677-1.046.11-.631.175-1.883.175-3.757H8.334Zm5.09-.8v.85h-1.188v-.85h1.187Zm-1.188-.955h1.187v-.893h-1.187v.893Zm2.322.007v-.893h1.241v.893h-1.241Zm.528 2.757a1.26 1.26 0 0 1 1.087-.627l4.003-.009a1.26 1.26 0 0 1 1.094.63l1.721 2.982c.226.39.225.872-.001 1.263l-1.743 3a1.26 1.26 0 0 1-1.086.628l-4.003.009a1.26 1.26 0 0 1-1.094-.63l-1.722-2.982a1.26 1.26 0 0 1 .002-1.263l1.742-3Zm1.967.858a1.26 1.26 0 0 0-1.08.614l-.903 1.513a1.26 1.26 0 0 0-.002 1.289l.885 1.492c.227.384.64.62 1.086.618l2.192-.005a1.26 1.26 0 0 0 1.08-.615l.904-1.518a1.26 1.26 0 0 0 .001-1.288l-.884-1.489a1.26 1.26 0 0 0-1.086-.616l-2.193.005Zm2.517 2.76a1.4 1.4 0 1 1-2.8 0 1.4 1.4 0 0 1 2.8 0Z"\r\n        clip-rule="evenodd"></path>\r\n</svg>',
  $t =
    '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22" width="24" height="24">\r\n    <path d="M17 16H5c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM6.96 15c.39 0 .74-.24.89-.6l.65-1.6h5l.66 1.6c.15.36.5.6.89.6.69 0 1.15-.71.88-1.34l-3.88-8.97C11.87 4.27 11.46 4 11 4s-.87.27-1.05.69l-3.88 8.97c-.27.63.2 1.34.89 1.34zM11 5.98L12.87 11H9.13L11 5.98z"></path>\r\n</svg>';
class te {
  constructor(t, e, i) {
    (this.slider = t.querySelector(e)),
      (this.track = this.slider.querySelector(".track")),
      (this.lineFill = this.slider.querySelector(".line-fill")),
      (this.thumb = this.slider.querySelector(".thumb")),
      (this.value = this.slider.querySelector(".value"));
    const {
      currentValue: r = 0,
      minValue: a = 0,
      maxValue: s = i.text ? i.text.length - 1 : 100,
      callback: n = null,
      text: o = null,
    } = i;
    (this.currentValue = r),
      (this.minValue = a),
      (this.maxValue = s),
      (this.callback = this.debounce(n, 400)),
      (this.text = o),
      this.addEventListeners(),
      this.updateSlider();
  }
  debounce(t, e) {
    let i;
    return function (...r) {
      clearTimeout(i),
        (i = setTimeout(() => {
          t.apply(this, r);
        }, e));
    };
  }
  updateSlider() {
    const t =
      ((this.currentValue - this.minValue) / (this.maxValue - this.minValue)) *
      100;
    (this.lineFill.style.width = `${t}%`),
      (this.thumb.style.left = `${t}%`),
      this.updateValueText();
  }
  updateValueText() {
    if (this.text) {
      const { value: t, html: e } = this.text[this.currentValue];
      this.callback && this.callback(t), (this.value.textContent = e);
    } else
      this.callback && this.callback(this.currentValue),
        (this.value.textContent = `${this.currentValue}%`);
  }
  handleSliderClick(t) {
    const e =
      ("ontouchstart" in window
        ? t.changedTouches[0].clientX - this.track.getBoundingClientRect().left
        : t.clientX - this.track.getBoundingClientRect().left) /
      this.track.offsetWidth;
    (this.currentValue = Math.round(
      this.minValue + e * (this.maxValue - this.minValue)
    )),
      this.currentValue > this.maxValue ||
        this.currentValue < this.minValue ||
        this.updateSlider();
  }
  handleThumbDrag(t) {
    const e = "ontouchstart" in window ? t.touches[0].clientX : t.clientX,
      i = this.thumb.offsetLeft,
      r = this.track.offsetWidth,
      a = this.thumb.offsetWidth,
      s = (t) => {
        const s =
            "ontouchstart" in window ? t.touches[0].clientX - e : t.clientX - e,
          n = (Math.min(Math.max(i + s, 0), r - a) / (r - a)) * 100;
        (this.currentValue = Math.round(
          (n / 100) * (this.maxValue - this.minValue) + this.minValue
        )),
          this.updateSlider();
      },
      n = () => {
        window.removeEventListener(
          "ontouchstart" in window ? "touchmove" : "mousemove",
          s,
          { passive: !1 }
        ),
          window.removeEventListener(
            "ontouchstart" in window ? "touchend" : "mouseup",
            n,
            { passive: !1 }
          );
      };
    window.addEventListener(
      "ontouchstart" in window ? "touchmove" : "mousemove",
      s,
      { passive: !1 }
    ),
      window.addEventListener(
        "ontouchstart" in window ? "touchend" : "mouseup",
        n,
        { passive: !1 }
      );
  }
  addEventListeners() {
    "ontouchstart" in window
      ? (this.slider.addEventListener(
          "touchstart",
          this.handleSliderClick.bind(this)
        ),
        this.thumb.addEventListener(
          "touchstart",
          this.handleThumbDrag.bind(this)
        ))
      : (this.slider.addEventListener(
          "click",
          this.handleSliderClick.bind(this)
        ),
        this.thumb.addEventListener(
          "mousedown",
          this.handleThumbDrag.bind(this)
        ));
  }
}
function ee(t, e) {
  const { option: i } = e,
    {
      template: { $controlsCenter: r, $player: a },
      constructor: {
        SETTING_ITEM_WIDTH: s,
        utils: {
          removeClass: n,
          addClass: o,
          append: h,
          setStyle: l,
          tooltip: A,
          query: d,
          inverseClass: u,
          getIcon: c,
          isMobile: g,
        },
      },
      storage: f,
      setting: p,
    } = t;
  l(r, "display", "flex");
  const m = c("danmu-on", Jt),
    v = c("danmu-off", Zt),
    E = c("danmu-config", Xt),
    y = c("danmu-style", $t);
  !(function () {
    const a = [
        "#FE0302",
        "#FF7204",
        "#FFAA02",
        "#FFD302",
        "#FFFF00",
        "#A0EE00",
        "#00CD00",
        "#019899",
        "#4266BE",
        "#89D5FF",
        "#CC0273",
        "#222222",
        "#9B9B9B",
        "#FFFFFF",
      ].map(
        (t) =>
          `<div class="art-danmuku-style-panel-color${
            i.color === t ? " art-current" : ""
          }" data-color="${t}" style="background-color:${t}"></div>`
      ),
      c = h(
        r,
        `<div class="art-danmuku-emitter" style="max-width: ${
          i.maxWidth ? `${i.maxWidth}px` : "100%"
        }">\n      <div class="settings">\n        <div class="dm-switch"></div>\n        <div class="dm-setting">\n          <div class="dm-setting-panel">\n            <div class="dm-setting-box">\n              <div class="dm-setting-area">\n                <div class="setting-item">\n                  不透明度:\n                  <div class="dm-opacity slider"><div class="track"><div class="line-fill"></div><div class="thumb"></div></div><div class="value"></div></div>\n                </div>\n                <div class="setting-item">\n                  显示区域:\n                  <div class="dm-shwoarea slider divider fiveths"><div class="track"><div class="line-fill"></div><div class="thumb"></div></div><div class="value"></div></div>\n                </div>\n                <div class="setting-item">\n                  字体大小:\n                  <div class="dm-fontsize slider"><div class="track"><div class="line-fill"></div><div class="thumb"></div></div><div class="value"></div></div>\n                </div>\n                <div class="setting-item">\n                  移动速度:\n                  <div class="dm-speed slider divider fiveths"><div class="track"><div class="line-fill"></div><div class="thumb"></div></div><div class="value"></div></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="art-danmuku-left">\n        <div class="art-danmuku-style">\n          <div class="art-danmuku-style-panel">\n            <div class="art-danmuku-style-panel-inner">\n              <div class="art-danmuku-style-panel-title">模式</div>\n              <div class="art-danmuku-style-panel-modes">\n                <div\n                  class="art-danmuku-style-panel-mode art-current"\n                  data-mode="0"\n                >\n                  滚动\n                </div>\n                <div class="art-danmuku-style-panel-mode" data-mode="1">\n                  静止\n                </div>\n              </div>\n              <div class="art-danmuku-style-panel-title">颜色</div>\n              <div class="art-danmuku-style-panel-colors">\n                ${a.join(
          ""
        )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <input\n          class="art-danmuku-input"\n          maxlength="${
          i.maxLength
        }"\n          placeholder="发个弹幕见证当下"\n        />\n      </div>\n      <div class="art-danmuku-send">发送</div>\n    </div>`
      ),
      f = d(".art-danmuku-style", c),
      I = d(".art-danmuku-input", c),
      C = d(".art-danmuku-send", c),
      B = d(".art-danmuku-style-panel-inner", c),
      k = d(".art-danmuku-style-panel-modes", c),
      x = d(".art-danmuku-style-panel-colors", c),
      w = d(".dm-switch", c),
      Q = d(".dm-setting", c),
      S = d(".dm-setting-panel", c);
    t.option.backdrop && o(B, "art-backdrop-filter"),
      i.theme && o(c, `art-danmuku-theme-${i.theme}`);
    let b,
      D = null,
      R = i.mode,
      L = i.color;
    h(f, y);
    const T = () => {
        e.show(),
          l(m, "display", null),
          l(v, "display", "none"),
          A(w, "关闭弹幕"),
          (I.disabled = !1),
          (I.placeholder = "发个弹幕见证当下"),
          C.removeAttribute("disabled"),
          Q.removeAttribute("disabled"),
          f.removeAttribute("disabled");
      },
      M = () => {
        e.hide(),
          l(m, "display", "none"),
          l(v, "display", null),
          A(w, "显示弹幕"),
          (I.disabled = !0),
          (I.placeholder = "弹幕已关闭"),
          C.setAttribute("disabled", ""),
          Q.setAttribute("disabled", ""),
          f.setAttribute("disabled", "");
      };
    h(w, m), h(w, v), i.switch, e.getStorage("switch") ? T() : M(), h(Q, E);
    const F = {
        currentValue: Math.round(100 * e.getStorage("opacity")),
        minValue: 10,
        callback: (t) => {
          e.dmSettingConfig({ opacity: t / 100 });
        },
      },
      P = [
        { html: "1/4", value: 25 },
        { html: "半屏", value: 50 },
        { html: "3/4", value: 75 },
        { html: "不重叠", value: 100 },
        { html: "不限", value: 0 },
      ],
      _ = {
        currentValue: P.findIndex((t) => t.value === e.getStorage("margin")),
        minValue: 0,
        text: P,
        callback: (t) => {
          e.dmSettingConfig({ margin: t });
        },
      },
      N = {
        currentValue: Math.round(100 * e.getStorage("fontSize")),
        minValue: 50,
        maxValue: 170,
        callback: (t) => {
          e.dmSettingConfig({ fontSize: t / 100 });
        },
      },
      U = [
        { html: "极慢", value: 10 },
        { html: "较慢", value: 8.5 },
        { html: "适中", value: 5 },
        { html: "较快", value: 2.5 },
        { html: "极快", value: 1 },
      ],
      G = {
        currentValue: U.findIndex((t) => t.value === e.getStorage("speed")),
        minValue: 0,
        text: U,
        callback: (t) => {
          e.dmSettingConfig({ speed: t });
        },
      };
    function O(t) {
      t <= 0
        ? ((D = null), (C.innerText = "发送"), n(C, "art-disabled"))
        : ((C.innerText = t), (D = setTimeout(() => O(t - 1), 1e3)));
    }
    function j() {
      const r = { mode: R, color: L, border: !0, text: I.value.trim() };
      null === D &&
        i.beforeEmit(r) &&
        ((I.value = ""),
        e.emit(r),
        o(C, "art-disabled"),
        O(i.lockTime),
        t.emit("YTDM:emit", r));
    }
    function Y() {
      r.clientWidth < i.minWidth
        ? (l(c, "display", "none"),
          g &&
            (function () {
              b = !0;
              const r = e.getStorage("fontSize"),
                a = e.getStorage("opacity"),
                n = [
                  { html: "极小", value: 0.5 },
                  { html: "较小", value: 0.7 },
                  { html: "适中", value: 1 },
                  { html: "较大", value: 1.5 },
                  { html: "极大", value: 1.7 },
                ];
              let o = n.findIndex((t) => t.value === r);
              (o = -1 != o ? o : 2), (n[o].default = !0);
              const h = [
                { html: "10%", value: 0.1 },
                { html: "25%", value: 0.25 },
                { html: "50%", value: 0.5 },
                { html: "75%", value: 0.75 },
                { html: "100%", value: 1 },
              ];
              let l = h.findIndex((t) => t.value === a);
              (l = -1 != l ? l : 4), (h[l].default = !0);
              const A = P.findIndex((t) => t.value === e.getStorage("margin")),
                d = U.findIndex((t) => t.value === e.getStorage("speed"));
              t.setting.update({
                name: "danmuku",
                html: "弹幕设置",
                tooltip: "更多",
                selector: [
                  {
                    html: "弹幕开关",
                    switch: !e.isHide,
                    onSwitch: (t) => (
                      e.isHide
                        ? (e.show(), T(), e.dmSettingConfig({ switch: 1 }))
                        : (e.hide(), M(), e.dmSettingConfig({ switch: 0 })),
                      !t.switch
                    ),
                  },
                  {
                    width: s,
                    html: "播放速度",
                    tooltip: U[d].html,
                    selector: (() => {
                      const t = [...U];
                      return (t[d].default = !0), t;
                    })(),
                    onSelect: (t) => (
                      e.dmSettingConfig({ speed: t.value }), t.html
                    ),
                  },
                  {
                    width: s,
                    html: "字体大小",
                    tooltip: n[o].html,
                    selector: n,
                    onSelect: (t) => (
                      e.dmSettingConfig({ fontSize: t.value }), t.html
                    ),
                  },
                  {
                    width: s,
                    html: "不透明度",
                    tooltip: h[l].html,
                    selector: h,
                    onSelect: (t) => (
                      e.dmSettingConfig({ opacity: t.value }), t.html
                    ),
                  },
                  {
                    width: s,
                    html: "显示范围",
                    tooltip: P[A].html,
                    selector: (() => {
                      const t = [...P];
                      return (t[A].default = !0), t;
                    })(),
                    onSelect: (t) => (
                      e.dmSettingConfig({ margin: t.value }), t.html
                    ),
                  },
                  {
                    html: "弹幕防重叠",
                    tooltip: 0 != i.margin ? "开启" : "关闭",
                    switch: 0 != i.margin,
                    onSwitch: (t) => (
                      e.dmSettingConfig({ antiOverlap: !t.switch }),
                      (t.tooltip = t.switch ? "关闭" : "开启"),
                      !t.switch
                    ),
                  },
                  {
                    html: "同步视频速度",
                    tooltip: i.synchronousPlayback ? "开启" : "关闭",
                    switch: i.synchronousPlayback,
                    onSwitch: (t) => (
                      e.dmSettingConfig({ synchronousPlayback: !t.switch }),
                      (t.tooltip = t.switch ? "关闭" : "开启"),
                      !t.switch
                    ),
                  },
                ],
              });
            })())
        : (l(c, "display", "flex"), g && b && (p.remove("danmuku"), (b = !1)));
    }
    new te(S, ".dm-opacity", F),
      new te(S, ".dm-shwoarea", _),
      new te(S, ".dm-fontsize", N),
      new te(S, ".dm-speed", G),
      t.proxy(C, "click", j),
      t.proxy(I, "keypress", (t) => {
        "Enter" === t.key && (t.preventDefault(), j());
      }),
      t.proxy(k, "click", (t) => {
        const { dataset: e } = t.target;
        e.mode && ((R = Number(e.mode)), u(t.target, "art-current"));
      }),
      t.proxy(x, "click", (t) => {
        const { dataset: e } = t.target;
        e.color && ((L = e.color), u(t.target, "art-current"));
      }),
      t.proxy(w, "click", () => {
        e.isHide
          ? (T(), e.dmSettingConfig({ switch: 1 }))
          : (M(), e.dmSettingConfig({ switch: 0 }));
      }),
      Y(),
      t.on("resize", () => {
        t.isInput || Y();
      }),
      t.on("destroy", () => {
        i.mount && c.parentElement === i.mount && i.mount.removeChild(c);
      });
  })();
}
const ie = {
    map: (t, e, i, r, a) => ((t - e) * (a - r)) / (i - e) + r,
    range(t, e, i) {
      const r = Math.round(t / i) * i;
      return Array.from(
        { length: Math.floor((e - t) / i) },
        (t, e) => e * i + r
      );
    },
  },
  re = (t, e) => {
    const i = e[0] - t[0],
      r = e[1] - t[1];
    return {
      length: Math.sqrt(Math.pow(i, 2) + Math.pow(r, 2)),
      angle: Math.atan2(r, i),
    };
  };
function ae(t, e, i) {
  const { query: r } = t.constructor.utils;
  t.controls.add({
    name: "heatmap",
    position: "top",
    html: "",
    style: {
      position: "absolute",
      top: "-15px",
      left: "0px",
      right: "0px",
      height: "15px",
      width: "100%",
      pointerEvents: "none",
    },
    mounted(a) {
      let s = null,
        n = null;
      function o() {
        if (
          ((s = null),
          (n = null),
          (a.innerHTML = ""),
          !e.danmus.length || !t.duration)
        )
          return;
        const o = { w: a.offsetWidth, h: a.offsetHeight },
          h = {
            xMin: 0,
            xMax: o.w,
            yMin: 0,
            yMax: 128,
            scale: 0.25,
            opacity: 0.2,
            minHeight: Math.floor(0.05 * o.h),
            sampling: Math.floor(o.w / 100),
            smoothing: 0.2,
            flattening: 0.2,
          };
        "object" == typeof i && Object.assign(h, i);
        const l = [],
          A = t.duration / o.w;
        for (let t = 0; t <= o.w; t += h.sampling) {
          const i = e.danmus.filter(
            ({ time: e }) => e > t * A && e <= (t + h.sampling) * A
          ).length;
          l.push([t, i]);
        }
        const d = l[l.length - 1],
          u = d[0],
          c = d[1];
        u !== o.w && l.push([o.w, c]);
        const g = l.map((t) => t[1]),
          f = (Math.min(...g) + Math.max(...g)) / 2;
        for (let t = 0; t < l.length; t++) {
          const e = l[t],
            i = e[1];
          e[1] = i * (i > f ? 1 + h.scale : 1 - h.scale) + h.minHeight;
        }
        const p = (t, e, i, r) => {
            const a = re(e || t, i || t),
              s = ie.map(Math.cos(a.angle) * h.flattening, 0, 1, 1, 0),
              n = a.angle * s + (r ? Math.PI : 0),
              o = a.length * h.smoothing;
            return [t[0] + Math.cos(n) * o, t[1] + Math.sin(n) * o];
          },
          m = l
            .map((t) => [
              ie.map(t[0], h.xMin, h.xMax, 0, o.w),
              ie.map(t[1], h.yMin, h.yMax, o.h, 0),
            ])
            .reduce(
              (t, e, i, r) =>
                0 === i
                  ? `M ${r[r.length - 1][0]},${o.h} L ${e[0]},${o.h} L ${
                      e[0]
                    },${e[1]}`
                  : `${t} ${((t, e, i) => {
                      const r = p(i[e - 1], i[e - 2], t),
                        a = p(t, i[e - 1], i[e + 1], !0),
                        s = e === i.length - 1 ? " z" : "";
                      return `C ${r[0]},${r[1]} ${a[0]},${a[1]} ${t[0]},${t[1]}${s}`;
                    })(e, i, r)}`,
              ""
            );
        (a.innerHTML = `\n                    <svg viewBox="0 0 ${o.w} ${o.h}">\n                        <defs>\n                            <linearGradient id="heatmap-solids" x1="0%" y1="0%" x2="100%" y2="0%">\n                                <stop offset="0%" style="stop-color:var(--art-theme);stop-opacity:${h.opacity}" />\n                                <stop offset="0%" style="stop-color:var(--art-theme);stop-opacity:${h.opacity}" id="heatmap-start" />\n                                <stop offset="0%" style="stop-color:var(--art-progress-color);stop-opacity:1" id="heatmap-stop" />\n                                <stop offset="100%" style="stop-color:var(--art-progress-color);stop-opacity:1" />\n                            </linearGradient>\n                        </defs>\n                        <path fill="url(#heatmap-solids)" d="${m}"></path>\n                    </svg>\n                `),
          (s = r("#heatmap-start", a)),
          (n = r("#heatmap-stop", a)),
          s.setAttribute("offset", 100 * t.played + "%"),
          n.setAttribute("offset", 100 * t.played + "%");
      }
      t.on("video:timeupdate", () => {
        s &&
          n &&
          (s.setAttribute("offset", 100 * t.played + "%"),
          n.setAttribute("offset", 100 * t.played + "%"));
      }),
        t.on("setBar", (t, e) => {
          s &&
            n &&
            "played" === t &&
            (s.setAttribute("offset", 100 * e + "%"),
            n.setAttribute("offset", 100 * e + "%"));
        }),
        t.on("ready", o),
        t.on("resize", o),
        t.on("YTDM:loaded", o);
    },
  });
}
var se,
  ne = { exports: {} };
(se = ne),
  (function t(e) {
    var i;
    (i = function () {
      function i(t, e) {
        var i = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(t);
          e &&
            (r = r.filter(function (e) {
              return Object.getOwnPropertyDescriptor(t, e).enumerable;
            })),
            i.push.apply(i, r);
        }
        return i;
      }
      function r(t) {
        for (var e = 1; e < arguments.length; e++) {
          var r = null != arguments[e] ? arguments[e] : {};
          e % 2
            ? i(Object(r), !0).forEach(function (e) {
                var i, s, n;
                (i = t),
                  (s = e),
                  (n = r[e]),
                  (s = a(s)) in i
                    ? Object.defineProperty(i, s, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                      })
                    : (i[s] = n);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
            : i(Object(r)).forEach(function (e) {
                Object.defineProperty(
                  t,
                  e,
                  Object.getOwnPropertyDescriptor(r, e)
                );
              });
        }
        return t;
      }
      function a(t) {
        var e = (function (t, e) {
          if ("object" != typeof t || !t) return t;
          var i = t[Symbol.toPrimitive];
          if (void 0 !== i) {
            var r = i.call(t, "string");
            if ("object" != typeof r) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t);
        })(t);
        return "symbol" == typeof e ? e : String(e);
      }
      function s(t, e) {
        for (var i = 0; i < e.length; i++) {
          var r = e[i];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(t, a(r.key), r);
        }
      }
      function n(t, e, i) {
        return (
          e && s(t.prototype, e),
          i && s(t, i),
          Object.defineProperty(t, "prototype", { writable: !1 }),
          t
        );
      }
      function o() {
        return (
          (o = Object.assign
            ? Object.assign.bind()
            : function (t) {
                for (var e = 1; e < arguments.length; e++) {
                  var i = arguments[e];
                  for (var r in i)
                    Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]);
                }
                return t;
              }),
          o.apply(this, arguments)
        );
      }
      function h(t, e) {
        (t.prototype = Object.create(e.prototype)),
          (t.prototype.constructor = t),
          A(t, e);
      }
      function l(t) {
        return (l = Object.setPrototypeOf
          ? Object.getPrototypeOf.bind()
          : function (t) {
              return t.__proto__ || Object.getPrototypeOf(t);
            })(t);
      }
      function A(t, e) {
        return (A = Object.setPrototypeOf
          ? Object.setPrototypeOf.bind()
          : function (t, e) {
              return (t.__proto__ = e), t;
            })(t, e);
      }
      function d(t, e, i) {
        return (d = (function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;
          try {
            return (
              Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
              ),
              !0
            );
          } catch (t) {
            return !1;
          }
        })()
          ? Reflect.construct.bind()
          : function (t, e, i) {
              var r = [null];
              r.push.apply(r, e);
              var a = new (Function.bind.apply(t, r))();
              return i && A(a, i.prototype), a;
            }).apply(null, arguments);
      }
      function u(t) {
        var e = "function" == typeof Map ? new Map() : void 0;
        return (
          (u = function (t) {
            if (
              null === t ||
              !(function (t) {
                try {
                  return (
                    -1 !== Function.toString.call(t).indexOf("[native code]")
                  );
                } catch (e) {
                  return "function" == typeof t;
                }
              })(t)
            )
              return t;
            if ("function" != typeof t)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            if (void 0 !== e) {
              if (e.has(t)) return e.get(t);
              e.set(t, i);
            }
            function i() {
              return d(t, arguments, l(this).constructor);
            }
            return (
              (i.prototype = Object.create(t.prototype, {
                constructor: {
                  value: i,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              A(i, t)
            );
          }),
          u(t)
        );
      }
      function c(t) {
        return t &&
          t.__esModule &&
          Object.prototype.hasOwnProperty.call(t, "default")
          ? t.default
          : t;
      }
      var g,
        f,
        p,
        m,
        v,
        E = { exports: {} };
      (g =
        /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/),
        (f = /^(?=([^\/?#]*))\1([^]*)$/),
        (p = /(?:\/|^)\.(?=\/)/g),
        (m = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g);
      var y =
          (E.exports =
          v =
            {
              buildAbsoluteURL: function (t, e, i) {
                if (((i = i || {}), (t = t.trim()), !(e = e.trim()))) {
                  if (!i.alwaysNormalize) return t;
                  var r = v.parseURL(t);
                  if (!r) throw new Error("Error trying to parse base URL.");
                  return (
                    (r.path = v.normalizePath(r.path)), v.buildURLFromParts(r)
                  );
                }
                var a = v.parseURL(e);
                if (!a) throw new Error("Error trying to parse relative URL.");
                if (a.scheme)
                  return i.alwaysNormalize
                    ? ((a.path = v.normalizePath(a.path)),
                      v.buildURLFromParts(a))
                    : e;
                var s = v.parseURL(t);
                if (!s) throw new Error("Error trying to parse base URL.");
                if (!s.netLoc && s.path && "/" !== s.path[0]) {
                  var n = f.exec(s.path);
                  (s.netLoc = n[1]), (s.path = n[2]);
                }
                s.netLoc && !s.path && (s.path = "/");
                var o = {
                  scheme: s.scheme,
                  netLoc: a.netLoc,
                  path: null,
                  params: a.params,
                  query: a.query,
                  fragment: a.fragment,
                };
                if (!a.netLoc && ((o.netLoc = s.netLoc), "/" !== a.path[0]))
                  if (a.path) {
                    var h = s.path,
                      l = h.substring(0, h.lastIndexOf("/") + 1) + a.path;
                    o.path = v.normalizePath(l);
                  } else
                    (o.path = s.path),
                      a.params ||
                        ((o.params = s.params), a.query || (o.query = s.query));
                return (
                  null === o.path &&
                    (o.path = i.alwaysNormalize
                      ? v.normalizePath(a.path)
                      : a.path),
                  v.buildURLFromParts(o)
                );
              },
              parseURL: function (t) {
                var e = g.exec(t);
                return e
                  ? {
                      scheme: e[1] || "",
                      netLoc: e[2] || "",
                      path: e[3] || "",
                      params: e[4] || "",
                      query: e[5] || "",
                      fragment: e[6] || "",
                    }
                  : null;
              },
              normalizePath: function (t) {
                for (
                  t = t.split("").reverse().join("").replace(p, "");
                  t.length !== (t = t.replace(m, "")).length;

                );
                return t.split("").reverse().join("");
              },
              buildURLFromParts: function (t) {
                return (
                  t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
                );
              },
            }),
        I =
          Number.isFinite ||
          function (t) {
            return "number" == typeof t && isFinite(t);
          },
        C =
          Number.isSafeInteger ||
          function (t) {
            return "number" == typeof t && Math.abs(t) <= B;
          },
        B = Number.MAX_SAFE_INTEGER || 9007199254740991,
        k = (function (t) {
          return (
            (t.MEDIA_ATTACHING = "hlsMediaAttaching"),
            (t.MEDIA_ATTACHED = "hlsMediaAttached"),
            (t.MEDIA_DETACHING = "hlsMediaDetaching"),
            (t.MEDIA_DETACHED = "hlsMediaDetached"),
            (t.BUFFER_RESET = "hlsBufferReset"),
            (t.BUFFER_CODECS = "hlsBufferCodecs"),
            (t.BUFFER_CREATED = "hlsBufferCreated"),
            (t.BUFFER_APPENDING = "hlsBufferAppending"),
            (t.BUFFER_APPENDED = "hlsBufferAppended"),
            (t.BUFFER_EOS = "hlsBufferEos"),
            (t.BUFFER_FLUSHING = "hlsBufferFlushing"),
            (t.BUFFER_FLUSHED = "hlsBufferFlushed"),
            (t.MANIFEST_LOADING = "hlsManifestLoading"),
            (t.MANIFEST_LOADED = "hlsManifestLoaded"),
            (t.MANIFEST_PARSED = "hlsManifestParsed"),
            (t.LEVEL_SWITCHING = "hlsLevelSwitching"),
            (t.LEVEL_SWITCHED = "hlsLevelSwitched"),
            (t.LEVEL_LOADING = "hlsLevelLoading"),
            (t.LEVEL_LOADED = "hlsLevelLoaded"),
            (t.LEVEL_UPDATED = "hlsLevelUpdated"),
            (t.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated"),
            (t.LEVELS_UPDATED = "hlsLevelsUpdated"),
            (t.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated"),
            (t.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching"),
            (t.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched"),
            (t.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading"),
            (t.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded"),
            (t.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated"),
            (t.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared"),
            (t.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch"),
            (t.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading"),
            (t.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded"),
            (t.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed"),
            (t.CUES_PARSED = "hlsCuesParsed"),
            (t.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound"),
            (t.INIT_PTS_FOUND = "hlsInitPtsFound"),
            (t.FRAG_LOADING = "hlsFragLoading"),
            (t.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted"),
            (t.FRAG_LOADED = "hlsFragLoaded"),
            (t.FRAG_DECRYPTED = "hlsFragDecrypted"),
            (t.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment"),
            (t.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata"),
            (t.FRAG_PARSING_METADATA = "hlsFragParsingMetadata"),
            (t.FRAG_PARSED = "hlsFragParsed"),
            (t.FRAG_BUFFERED = "hlsFragBuffered"),
            (t.FRAG_CHANGED = "hlsFragChanged"),
            (t.FPS_DROP = "hlsFpsDrop"),
            (t.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping"),
            (t.MAX_AUTO_LEVEL_UPDATED = "hlsMaxAutoLevelUpdated"),
            (t.ERROR = "hlsError"),
            (t.DESTROYING = "hlsDestroying"),
            (t.KEY_LOADING = "hlsKeyLoading"),
            (t.KEY_LOADED = "hlsKeyLoaded"),
            (t.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached"),
            (t.BACK_BUFFER_REACHED = "hlsBackBufferReached"),
            (t.STEERING_MANIFEST_LOADED = "hlsSteeringManifestLoaded"),
            t
          );
        })({}),
        x = (function (t) {
          return (
            (t.NETWORK_ERROR = "networkError"),
            (t.MEDIA_ERROR = "mediaError"),
            (t.KEY_SYSTEM_ERROR = "keySystemError"),
            (t.MUX_ERROR = "muxError"),
            (t.OTHER_ERROR = "otherError"),
            t
          );
        })({}),
        w = (function (t) {
          return (
            (t.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys"),
            (t.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess"),
            (t.KEY_SYSTEM_NO_SESSION = "keySystemNoSession"),
            (t.KEY_SYSTEM_NO_CONFIGURED_LICENSE =
              "keySystemNoConfiguredLicense"),
            (t.KEY_SYSTEM_LICENSE_REQUEST_FAILED =
              "keySystemLicenseRequestFailed"),
            (t.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED =
              "keySystemServerCertificateRequestFailed"),
            (t.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED =
              "keySystemServerCertificateUpdateFailed"),
            (t.KEY_SYSTEM_SESSION_UPDATE_FAILED =
              "keySystemSessionUpdateFailed"),
            (t.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED =
              "keySystemStatusOutputRestricted"),
            (t.KEY_SYSTEM_STATUS_INTERNAL_ERROR =
              "keySystemStatusInternalError"),
            (t.MANIFEST_LOAD_ERROR = "manifestLoadError"),
            (t.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut"),
            (t.MANIFEST_PARSING_ERROR = "manifestParsingError"),
            (t.MANIFEST_INCOMPATIBLE_CODECS_ERROR =
              "manifestIncompatibleCodecsError"),
            (t.LEVEL_EMPTY_ERROR = "levelEmptyError"),
            (t.LEVEL_LOAD_ERROR = "levelLoadError"),
            (t.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut"),
            (t.LEVEL_PARSING_ERROR = "levelParsingError"),
            (t.LEVEL_SWITCH_ERROR = "levelSwitchError"),
            (t.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError"),
            (t.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut"),
            (t.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError"),
            (t.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut"),
            (t.FRAG_LOAD_ERROR = "fragLoadError"),
            (t.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut"),
            (t.FRAG_DECRYPT_ERROR = "fragDecryptError"),
            (t.FRAG_PARSING_ERROR = "fragParsingError"),
            (t.FRAG_GAP = "fragGap"),
            (t.REMUX_ALLOC_ERROR = "remuxAllocError"),
            (t.KEY_LOAD_ERROR = "keyLoadError"),
            (t.KEY_LOAD_TIMEOUT = "keyLoadTimeOut"),
            (t.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError"),
            (t.BUFFER_INCOMPATIBLE_CODECS_ERROR =
              "bufferIncompatibleCodecsError"),
            (t.BUFFER_APPEND_ERROR = "bufferAppendError"),
            (t.BUFFER_APPENDING_ERROR = "bufferAppendingError"),
            (t.BUFFER_STALLED_ERROR = "bufferStalledError"),
            (t.BUFFER_FULL_ERROR = "bufferFullError"),
            (t.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole"),
            (t.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall"),
            (t.INTERNAL_EXCEPTION = "internalException"),
            (t.INTERNAL_ABORTED = "aborted"),
            (t.UNKNOWN = "unknown"),
            t
          );
        })({}),
        Q = function () {},
        S = { trace: Q, debug: Q, log: Q, warn: Q, info: Q, error: Q },
        b = S;
      function D(t, e) {
        if (("object" == typeof console && !0 === t) || "object" == typeof t) {
          !(function (t) {
            for (
              var e = arguments.length, i = new Array(e > 1 ? e - 1 : 0), r = 1;
              r < e;
              r++
            )
              i[r - 1] = arguments[r];
            i.forEach(function (e) {
              var i, r;
              b[e] = t[e]
                ? t[e].bind(t)
                : ((i = e),
                  (r = self.console[i])
                    ? r.bind(self.console, "[" + i + "] >")
                    : Q);
            });
          })(t, "debug", "log", "info", "warn", "error");
          try {
            b.log('Debug logs enabled for "' + e + '" in hls.js version 1.5.1');
          } catch (i) {
            b = S;
          }
        } else b = S;
      }
      var R = b,
        L = /^(\d+)x(\d+)$/,
        T = /(.+?)=(".*?"|.*?)(?:,|$)/g,
        M = (function () {
          function t(e) {
            "string" == typeof e && (e = t.parseAttrList(e)), o(this, e);
          }
          var e = t.prototype;
          return (
            (e.decimalInteger = function (t) {
              var e = parseInt(this[t], 10);
              return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e;
            }),
            (e.hexadecimalInteger = function (t) {
              if (this[t]) {
                var e = (this[t] || "0x").slice(2);
                e = (1 & e.length ? "0" : "") + e;
                for (
                  var i = new Uint8Array(e.length / 2), r = 0;
                  r < e.length / 2;
                  r++
                )
                  i[r] = parseInt(e.slice(2 * r, 2 * r + 2), 16);
                return i;
              }
              return null;
            }),
            (e.hexadecimalIntegerAsNumber = function (t) {
              var e = parseInt(this[t], 16);
              return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e;
            }),
            (e.decimalFloatingPoint = function (t) {
              return parseFloat(this[t]);
            }),
            (e.optionalFloat = function (t, e) {
              var i = this[t];
              return i ? parseFloat(i) : e;
            }),
            (e.enumeratedString = function (t) {
              return this[t];
            }),
            (e.bool = function (t) {
              return "YES" === this[t];
            }),
            (e.decimalResolution = function (t) {
              var e = L.exec(this[t]);
              if (null !== e)
                return {
                  width: parseInt(e[1], 10),
                  height: parseInt(e[2], 10),
                };
            }),
            (t.parseAttrList = function (t) {
              var e,
                i = {};
              for (T.lastIndex = 0; null !== (e = T.exec(t)); ) {
                var r = e[2];
                0 === r.indexOf('"') &&
                  r.lastIndexOf('"') === r.length - 1 &&
                  (r = r.slice(1, -1)),
                  (i[e[1].trim()] = r);
              }
              return i;
            }),
            n(t, [
              {
                key: "clientAttrs",
                get: function () {
                  return Object.keys(this).filter(function (t) {
                    return "X-" === t.substring(0, 2);
                  });
                },
              },
            ]),
            t
          );
        })();
      function F(t) {
        return "SCTE35-OUT" === t || "SCTE35-IN" === t;
      }
      var P = (function () {
          function t(t, e) {
            if (
              ((this.attr = void 0),
              (this._startDate = void 0),
              (this._endDate = void 0),
              (this._badValueForSameId = void 0),
              e)
            ) {
              var i = e.attr;
              for (var r in i)
                if (
                  Object.prototype.hasOwnProperty.call(t, r) &&
                  t[r] !== i[r]
                ) {
                  R.warn(
                    'DATERANGE tag attribute: "' +
                      r +
                      '" does not match for tags with ID: "' +
                      t.ID +
                      '"'
                  ),
                    (this._badValueForSameId = r);
                  break;
                }
              t = o(new M({}), i, t);
            }
            if (
              ((this.attr = t),
              (this._startDate = new Date(t["START-DATE"])),
              "END-DATE" in this.attr)
            ) {
              var a = new Date(this.attr["END-DATE"]);
              I(a.getTime()) && (this._endDate = a);
            }
          }
          return (
            n(t, [
              {
                key: "id",
                get: function () {
                  return this.attr.ID;
                },
              },
              {
                key: "class",
                get: function () {
                  return this.attr.CLASS;
                },
              },
              {
                key: "startDate",
                get: function () {
                  return this._startDate;
                },
              },
              {
                key: "endDate",
                get: function () {
                  if (this._endDate) return this._endDate;
                  var t = this.duration;
                  return null !== t
                    ? new Date(this._startDate.getTime() + 1e3 * t)
                    : null;
                },
              },
              {
                key: "duration",
                get: function () {
                  if ("DURATION" in this.attr) {
                    var t = this.attr.decimalFloatingPoint("DURATION");
                    if (I(t)) return t;
                  } else if (this._endDate)
                    return (
                      (this._endDate.getTime() - this._startDate.getTime()) /
                      1e3
                    );
                  return null;
                },
              },
              {
                key: "plannedDuration",
                get: function () {
                  return "PLANNED-DURATION" in this.attr
                    ? this.attr.decimalFloatingPoint("PLANNED-DURATION")
                    : null;
                },
              },
              {
                key: "endOnNext",
                get: function () {
                  return this.attr.bool("END-ON-NEXT");
                },
              },
              {
                key: "isValid",
                get: function () {
                  return (
                    !!this.id &&
                    !this._badValueForSameId &&
                    I(this.startDate.getTime()) &&
                    (null === this.duration || this.duration >= 0) &&
                    (!this.endOnNext || !!this.class)
                  );
                },
              },
            ]),
            t
          );
        })(),
        _ = function () {
          (this.aborted = !1),
            (this.loaded = 0),
            (this.retry = 0),
            (this.total = 0),
            (this.chunkCount = 0),
            (this.bwEstimate = 0),
            (this.loading = { start: 0, first: 0, end: 0 }),
            (this.parsing = { start: 0, end: 0 }),
            (this.buffering = { start: 0, first: 0, end: 0 });
        },
        N = "audio",
        U = "video",
        G = "audiovideo",
        O = (function () {
          function t(t) {
            var e;
            (this._byteRange = null),
              (this._url = null),
              (this.baseurl = void 0),
              (this.relurl = void 0),
              (this.elementaryStreams =
                (((e = {})[N] = null), (e[U] = null), (e[G] = null), e)),
              (this.baseurl = t);
          }
          return (
            (t.prototype.setByteRange = function (t, e) {
              var i,
                r = t.split("@", 2);
              (i =
                1 === r.length
                  ? (null == e ? void 0 : e.byteRangeEndOffset) || 0
                  : parseInt(r[1])),
                (this._byteRange = [i, parseInt(r[0]) + i]);
            }),
            n(t, [
              {
                key: "byteRange",
                get: function () {
                  return this._byteRange ? this._byteRange : [];
                },
              },
              {
                key: "byteRangeStartOffset",
                get: function () {
                  return this.byteRange[0];
                },
              },
              {
                key: "byteRangeEndOffset",
                get: function () {
                  return this.byteRange[1];
                },
              },
              {
                key: "url",
                get: function () {
                  return (
                    !this._url &&
                      this.baseurl &&
                      this.relurl &&
                      (this._url = y.buildAbsoluteURL(
                        this.baseurl,
                        this.relurl,
                        { alwaysNormalize: !0 }
                      )),
                    this._url || ""
                  );
                },
                set: function (t) {
                  this._url = t;
                },
              },
            ]),
            t
          );
        })(),
        j = (function (t) {
          function e(e, i) {
            var r;
            return (
              ((r = t.call(this, i) || this)._decryptdata = null),
              (r.rawProgramDateTime = null),
              (r.programDateTime = null),
              (r.tagList = []),
              (r.duration = 0),
              (r.sn = 0),
              (r.levelkeys = void 0),
              (r.type = void 0),
              (r.loader = null),
              (r.keyLoader = null),
              (r.level = -1),
              (r.cc = 0),
              (r.startPTS = void 0),
              (r.endPTS = void 0),
              (r.startDTS = void 0),
              (r.endDTS = void 0),
              (r.start = 0),
              (r.deltaPTS = void 0),
              (r.maxStartPTS = void 0),
              (r.minEndPTS = void 0),
              (r.stats = new _()),
              (r.data = void 0),
              (r.bitrateTest = !1),
              (r.title = null),
              (r.initSegment = null),
              (r.endList = void 0),
              (r.gap = void 0),
              (r.urlId = 0),
              (r.type = e),
              r
            );
          }
          h(e, t);
          var i = e.prototype;
          return (
            (i.setKeyFormat = function (t) {
              if (this.levelkeys) {
                var e = this.levelkeys[t];
                e &&
                  !this._decryptdata &&
                  (this._decryptdata = e.getDecryptData(this.sn));
              }
            }),
            (i.abortRequests = function () {
              var t, e;
              null == (t = this.loader) || t.abort(),
                null == (e = this.keyLoader) || e.abort();
            }),
            (i.setElementaryStreamInfo = function (t, e, i, r, a, s) {
              void 0 === s && (s = !1);
              var n = this.elementaryStreams,
                o = n[t];
              o
                ? ((o.startPTS = Math.min(o.startPTS, e)),
                  (o.endPTS = Math.max(o.endPTS, i)),
                  (o.startDTS = Math.min(o.startDTS, r)),
                  (o.endDTS = Math.max(o.endDTS, a)))
                : (n[t] = {
                    startPTS: e,
                    endPTS: i,
                    startDTS: r,
                    endDTS: a,
                    partial: s,
                  });
            }),
            (i.clearElementaryStreamInfo = function () {
              var t = this.elementaryStreams;
              (t[N] = null), (t[U] = null), (t[G] = null);
            }),
            n(e, [
              {
                key: "decryptdata",
                get: function () {
                  if (!this.levelkeys && !this._decryptdata) return null;
                  if (
                    !this._decryptdata &&
                    this.levelkeys &&
                    !this.levelkeys.NONE
                  ) {
                    var t = this.levelkeys.identity;
                    if (t) this._decryptdata = t.getDecryptData(this.sn);
                    else {
                      var e = Object.keys(this.levelkeys);
                      if (1 === e.length)
                        return (this._decryptdata = this.levelkeys[
                          e[0]
                        ].getDecryptData(this.sn));
                    }
                  }
                  return this._decryptdata;
                },
              },
              {
                key: "end",
                get: function () {
                  return this.start + this.duration;
                },
              },
              {
                key: "endProgramDateTime",
                get: function () {
                  if (null === this.programDateTime) return null;
                  if (!I(this.programDateTime)) return null;
                  var t = I(this.duration) ? this.duration : 0;
                  return this.programDateTime + 1e3 * t;
                },
              },
              {
                key: "encrypted",
                get: function () {
                  var t;
                  if (null != (t = this._decryptdata) && t.encrypted) return !0;
                  if (this.levelkeys) {
                    var e = Object.keys(this.levelkeys),
                      i = e.length;
                    if (i > 1 || (1 === i && this.levelkeys[e[0]].encrypted))
                      return !0;
                  }
                  return !1;
                },
              },
            ]),
            e
          );
        })(O),
        Y = (function (t) {
          function e(e, i, r, a, s) {
            var n;
            ((n = t.call(this, r) || this).fragOffset = 0),
              (n.duration = 0),
              (n.gap = !1),
              (n.independent = !1),
              (n.relurl = void 0),
              (n.fragment = void 0),
              (n.index = void 0),
              (n.stats = new _()),
              (n.duration = e.decimalFloatingPoint("DURATION")),
              (n.gap = e.bool("GAP")),
              (n.independent = e.bool("INDEPENDENT")),
              (n.relurl = e.enumeratedString("URI")),
              (n.fragment = i),
              (n.index = a);
            var o = e.enumeratedString("BYTERANGE");
            return (
              o && n.setByteRange(o, s),
              s && (n.fragOffset = s.fragOffset + s.duration),
              n
            );
          }
          return (
            h(e, t),
            n(e, [
              {
                key: "start",
                get: function () {
                  return this.fragment.start + this.fragOffset;
                },
              },
              {
                key: "end",
                get: function () {
                  return this.start + this.duration;
                },
              },
              {
                key: "loaded",
                get: function () {
                  var t = this.elementaryStreams;
                  return !!(t.audio || t.video || t.audiovideo);
                },
              },
            ]),
            e
          );
        })(O),
        H = (function () {
          function t(t) {
            (this.PTSKnown = !1),
              (this.alignedSliding = !1),
              (this.averagetargetduration = void 0),
              (this.endCC = 0),
              (this.endSN = 0),
              (this.fragments = void 0),
              (this.fragmentHint = void 0),
              (this.partList = null),
              (this.dateRanges = void 0),
              (this.live = !0),
              (this.ageHeader = 0),
              (this.advancedDateTime = void 0),
              (this.updated = !0),
              (this.advanced = !0),
              (this.availabilityDelay = void 0),
              (this.misses = 0),
              (this.startCC = 0),
              (this.startSN = 0),
              (this.startTimeOffset = null),
              (this.targetduration = 0),
              (this.totalduration = 0),
              (this.type = null),
              (this.url = void 0),
              (this.m3u8 = ""),
              (this.version = null),
              (this.canBlockReload = !1),
              (this.canSkipUntil = 0),
              (this.canSkipDateRanges = !1),
              (this.skippedSegments = 0),
              (this.recentlyRemovedDateranges = void 0),
              (this.partHoldBack = 0),
              (this.holdBack = 0),
              (this.partTarget = 0),
              (this.preloadHint = void 0),
              (this.renditionReports = void 0),
              (this.tuneInGoal = 0),
              (this.deltaUpdateFailed = void 0),
              (this.driftStartTime = 0),
              (this.driftEndTime = 0),
              (this.driftStart = 0),
              (this.driftEnd = 0),
              (this.encryptedFragments = void 0),
              (this.playlistParsingError = null),
              (this.variableList = null),
              (this.hasVariableRefs = !1),
              (this.fragments = []),
              (this.encryptedFragments = []),
              (this.dateRanges = {}),
              (this.url = t);
          }
          return (
            (t.prototype.reloaded = function (t) {
              if (!t) return (this.advanced = !0), void (this.updated = !0);
              var e = this.lastPartSn - t.lastPartSn,
                i = this.lastPartIndex - t.lastPartIndex;
              (this.updated =
                this.endSN !== t.endSN || !!i || !!e || !this.live),
                (this.advanced =
                  this.endSN > t.endSN || e > 0 || (0 === e && i > 0)),
                this.updated || this.advanced
                  ? (this.misses = Math.floor(0.6 * t.misses))
                  : (this.misses = t.misses + 1),
                (this.availabilityDelay = t.availabilityDelay);
            }),
            n(t, [
              {
                key: "hasProgramDateTime",
                get: function () {
                  return (
                    !!this.fragments.length &&
                    I(this.fragments[this.fragments.length - 1].programDateTime)
                  );
                },
              },
              {
                key: "levelTargetDuration",
                get: function () {
                  return (
                    this.averagetargetduration || this.targetduration || 10
                  );
                },
              },
              {
                key: "drift",
                get: function () {
                  var t = this.driftEndTime - this.driftStartTime;
                  return t > 0
                    ? (1e3 * (this.driftEnd - this.driftStart)) / t
                    : 1;
                },
              },
              {
                key: "edge",
                get: function () {
                  return this.partEnd || this.fragmentEnd;
                },
              },
              {
                key: "partEnd",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].end
                    : this.fragmentEnd;
                },
              },
              {
                key: "fragmentEnd",
                get: function () {
                  var t;
                  return null != (t = this.fragments) && t.length
                    ? this.fragments[this.fragments.length - 1].end
                    : 0;
                },
              },
              {
                key: "age",
                get: function () {
                  return this.advancedDateTime
                    ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3
                    : 0;
                },
              },
              {
                key: "lastPartIndex",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].index
                    : -1;
                },
              },
              {
                key: "lastPartSn",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].fragment.sn
                    : this.endSN;
                },
              },
            ]),
            t
          );
        })(),
        V = c(void 0);
      function K(t, e, i) {
        return Uint8Array.prototype.slice
          ? t.slice(e, i)
          : new Uint8Array(Array.prototype.slice.call(t, e, i));
      }
      var z,
        q = function (t, e) {
          return (
            e + 10 <= t.length &&
            73 === t[e] &&
            68 === t[e + 1] &&
            51 === t[e + 2] &&
            t[e + 3] < 255 &&
            t[e + 4] < 255 &&
            t[e + 6] < 128 &&
            t[e + 7] < 128 &&
            t[e + 8] < 128 &&
            t[e + 9] < 128
          );
        },
        W = function (t, e) {
          return (
            e + 10 <= t.length &&
            51 === t[e] &&
            68 === t[e + 1] &&
            73 === t[e + 2] &&
            t[e + 3] < 255 &&
            t[e + 4] < 255 &&
            t[e + 6] < 128 &&
            t[e + 7] < 128 &&
            t[e + 8] < 128 &&
            t[e + 9] < 128
          );
        },
        J = function (t, e) {
          for (var i = e, r = 0; q(t, e); )
            (r += 10), (r += Z(t, e + 6)), W(t, e + 10) && (r += 10), (e += r);
          if (r > 0) return t.subarray(i, i + r);
        },
        Z = function (t, e) {
          var i = 0;
          return (
            (i = (127 & t[e]) << 21),
            (i |= (127 & t[e + 1]) << 14),
            (i |= (127 & t[e + 2]) << 7) | (127 & t[e + 3])
          );
        },
        X = function (t, e) {
          return q(t, e) && Z(t, e + 6) + 10 <= t.length - e;
        },
        $ = function (t) {
          for (var e = it(t), i = 0; i < e.length; i++) {
            var r = e[i];
            if (tt(r)) return ot(r);
          }
        },
        tt = function (t) {
          return (
            t &&
            "PRIV" === t.key &&
            "com.apple.streaming.transportStreamTimestamp" === t.info
          );
        },
        et = function (t) {
          var e = String.fromCharCode(t[0], t[1], t[2], t[3]),
            i = Z(t, 4);
          return { type: e, size: i, data: t.subarray(10, 10 + i) };
        },
        it = function (t) {
          for (var e = 0, i = []; q(t, e); ) {
            for (var r = Z(t, e + 6), a = (e += 10) + r; e + 8 < a; ) {
              var s = et(t.subarray(e)),
                n = rt(s);
              n && i.push(n), (e += s.size + 10);
            }
            W(t, e) && (e += 10);
          }
          return i;
        },
        rt = function (t) {
          return "PRIV" === t.type ? at(t) : "W" === t.type[0] ? nt(t) : st(t);
        },
        at = function (t) {
          if (!(t.size < 2)) {
            var e = ht(t.data, !0),
              i = new Uint8Array(t.data.subarray(e.length + 1));
            return { key: t.type, info: e, data: i.buffer };
          }
        },
        st = function (t) {
          if (!(t.size < 2)) {
            if ("TXXX" === t.type) {
              var e = 1,
                i = ht(t.data.subarray(e), !0);
              e += i.length + 1;
              var r = ht(t.data.subarray(e));
              return { key: t.type, info: i, data: r };
            }
            var a = ht(t.data.subarray(1));
            return { key: t.type, data: a };
          }
        },
        nt = function (t) {
          if ("WXXX" === t.type) {
            if (t.size < 2) return;
            var e = 1,
              i = ht(t.data.subarray(e), !0);
            e += i.length + 1;
            var r = ht(t.data.subarray(e));
            return { key: t.type, info: i, data: r };
          }
          var a = ht(t.data);
          return { key: t.type, data: a };
        },
        ot = function (t) {
          if (8 === t.data.byteLength) {
            var e = new Uint8Array(t.data),
              i = 1 & e[3],
              r = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7];
            return (r /= 45), i && (r += 47721858.84), Math.round(r);
          }
        },
        ht = function (t, e) {
          void 0 === e && (e = !1);
          var i = (function () {
            if (!navigator.userAgent.includes("PlayStation 4"))
              return (
                z ||
                  void 0 === self.TextDecoder ||
                  (z = new self.TextDecoder("utf-8")),
                z
              );
          })();
          if (i) {
            var r = i.decode(t);
            if (e) {
              var a = r.indexOf("\0");
              return -1 !== a ? r.substring(0, a) : r;
            }
            return r.replace(/\0/g, "");
          }
          for (var s, n, o, h = t.length, l = "", A = 0; A < h; ) {
            if (0 === (s = t[A++]) && e) return l;
            if (0 !== s && 3 !== s)
              switch (s >> 4) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                  l += String.fromCharCode(s);
                  break;
                case 12:
                case 13:
                  (n = t[A++]),
                    (l += String.fromCharCode(((31 & s) << 6) | (63 & n)));
                  break;
                case 14:
                  (n = t[A++]),
                    (o = t[A++]),
                    (l += String.fromCharCode(
                      ((15 & s) << 12) | ((63 & n) << 6) | ((63 & o) << 0)
                    ));
              }
          }
          return l;
        },
        lt = function (t) {
          for (var e = "", i = 0; i < t.length; i++) {
            var r = t[i].toString(16);
            r.length < 2 && (r = "0" + r), (e += r);
          }
          return e;
        },
        At = Math.pow(2, 32) - 1,
        dt = [].push,
        ut = { video: 1, audio: 2, id3: 3, text: 4 };
      function ct(t) {
        return String.fromCharCode.apply(null, t);
      }
      function gt(t, e) {
        var i = (t[e] << 8) | t[e + 1];
        return i < 0 ? 65536 + i : i;
      }
      function ft(t, e) {
        var i = pt(t, e);
        return i < 0 ? 4294967296 + i : i;
      }
      function pt(t, e) {
        return (t[e] << 24) | (t[e + 1] << 16) | (t[e + 2] << 8) | t[e + 3];
      }
      function mt(t, e, i) {
        (t[e] = i >> 24),
          (t[e + 1] = (i >> 16) & 255),
          (t[e + 2] = (i >> 8) & 255),
          (t[e + 3] = 255 & i);
      }
      function vt(t, e) {
        var i = [];
        if (!e.length) return i;
        for (var r = t.byteLength, a = 0; a < r; ) {
          var s = ft(t, a),
            n = s > 1 ? a + s : r;
          if (ct(t.subarray(a + 4, a + 8)) === e[0])
            if (1 === e.length) i.push(t.subarray(a + 8, n));
            else {
              var o = vt(t.subarray(a + 8, n), e.slice(1));
              o.length && dt.apply(i, o);
            }
          a = n;
        }
        return i;
      }
      function Et(t) {
        var e = [],
          i = t[0],
          r = 8,
          a = ft(t, r);
        (r += 4), (r += 0 === i ? 8 : 16), (r += 2);
        var s = t.length + 0,
          n = gt(t, r);
        r += 2;
        for (var o = 0; o < n; o++) {
          var h = r,
            l = ft(t, h);
          h += 4;
          var A = 2147483647 & l;
          if (1 == (2147483648 & l) >>> 31)
            return (
              R.warn("SIDX has hierarchical references (not supported)"), null
            );
          var d = ft(t, h);
          (h += 4),
            e.push({
              referenceSize: A,
              subsegmentDuration: d,
              info: { duration: d / a, start: s, end: s + A - 1 },
            }),
            (s += A),
            (r = h += 4);
        }
        return {
          earliestPresentationTime: 0,
          timescale: a,
          version: i,
          referencesCount: n,
          references: e,
        };
      }
      function yt(t) {
        for (
          var e = [], i = vt(t, ["moov", "trak"]), a = 0;
          a < i.length;
          a++
        ) {
          var s = i[a],
            n = vt(s, ["tkhd"])[0];
          if (n) {
            var o = n[0],
              h = ft(n, 0 === o ? 12 : 20),
              l = vt(s, ["mdia", "mdhd"])[0];
            if (l) {
              var A = ft(l, 0 === (o = l[0]) ? 12 : 20),
                d = vt(s, ["mdia", "hdlr"])[0];
              if (d) {
                var u = ct(d.subarray(8, 12)),
                  c = { soun: N, vide: U }[u];
                if (c) {
                  var g = It(vt(s, ["mdia", "minf", "stbl", "stsd"])[0]);
                  (e[h] = { timescale: A, type: c }),
                    (e[c] = r({ timescale: A, id: h }, g));
                }
              }
            }
          }
        }
        return (
          vt(t, ["moov", "mvex", "trex"]).forEach(function (t) {
            var i = ft(t, 4),
              r = e[i];
            r && (r.default = { duration: ft(t, 12), flags: ft(t, 20) });
          }),
          e
        );
      }
      function It(t) {
        var e = t.subarray(8),
          i = e.subarray(86),
          r = ct(e.subarray(4, 8)),
          a = r,
          s = "enca" === r || "encv" === r;
        if (s) {
          var n = vt(e, [r])[0];
          vt(n.subarray("enca" === r ? 28 : 78), ["sinf"]).forEach(function (
            t
          ) {
            var e = vt(t, ["schm"])[0];
            if (e) {
              var i = ct(e.subarray(4, 8));
              if ("cbcs" === i || "cenc" === i) {
                var r = vt(t, ["frma"])[0];
                r && (a = ct(r));
              }
            }
          });
        }
        switch (a) {
          case "avc1":
          case "avc2":
          case "avc3":
          case "avc4":
            var o = vt(i, ["avcC"])[0];
            a += "." + Bt(o[1]) + Bt(o[2]) + Bt(o[3]);
            break;
          case "mp4a":
            var h = vt(e, [r])[0],
              l = vt(h.subarray(28), ["esds"])[0];
            if (l && l.length > 12) {
              var A = 4;
              if (3 !== l[A++]) break;
              (A = Ct(l, A)), (A += 2);
              var d = l[A++];
              if ((128 & d && (A += 2), 64 & d && (A += l[A++]), 4 !== l[A++]))
                break;
              A = Ct(l, A);
              var u = l[A++];
              if (64 !== u) break;
              if (((a += "." + Bt(u)), (A += 12), 5 !== l[A++])) break;
              A = Ct(l, A);
              var c = l[A++],
                g = (248 & c) >> 3;
              31 === g && (g += 1 + ((7 & c) << 3) + ((224 & l[A]) >> 5)),
                (a += "." + g);
            }
            break;
          case "hvc1":
          case "hev1":
            var f = vt(i, ["hvcC"])[0],
              p = f[1],
              m = ["", "A", "B", "C"][p >> 6],
              v = 31 & p,
              E = ft(f, 2),
              y = (32 & p) >> 5 ? "H" : "L",
              I = f[12],
              C = f.subarray(6, 12);
            (a += "." + m + v),
              (a += "." + E.toString(16).toUpperCase()),
              (a += "." + y + I);
            for (var B = "", k = C.length; k--; ) {
              var x = C[k];
              (x || B) && (B = "." + x.toString(16).toUpperCase() + B);
            }
            a += B;
            break;
          case "dvh1":
          case "dvhe":
            var w = vt(i, ["dvcC"])[0],
              Q = (w[2] >> 1) & 127,
              S = ((w[2] << 5) & 32) | ((w[3] >> 3) & 31);
            a += "." + kt(Q) + "." + kt(S);
            break;
          case "vp09":
            var b = vt(i, ["vpcC"])[0],
              D = b[4],
              R = b[5],
              L = (b[6] >> 4) & 15;
            a += "." + kt(D) + "." + kt(R) + "." + kt(L);
            break;
          case "av01":
            var T = vt(i, ["av1C"])[0],
              M = T[1] >>> 5,
              F = 31 & T[1],
              P = T[2] >>> 7 ? "H" : "M",
              _ = (64 & T[2]) >> 6,
              N = (32 & T[2]) >> 5,
              U = 2 === M && _ ? (N ? 12 : 10) : _ ? 10 : 8,
              G = (16 & T[2]) >> 4,
              O = (8 & T[2]) >> 3,
              j = (4 & T[2]) >> 2,
              Y = 3 & T[2];
            a +=
              "." +
              M +
              "." +
              kt(F) +
              P +
              "." +
              kt(U) +
              "." +
              G +
              "." +
              O +
              j +
              Y +
              "." +
              kt(1) +
              "." +
              kt(1) +
              "." +
              kt(1) +
              ".0";
        }
        return { codec: a, encrypted: s };
      }
      function Ct(t, e) {
        for (var i = e + 5; 128 & t[e++] && e < i; );
        return e;
      }
      function Bt(t) {
        return ("0" + t.toString(16).toUpperCase()).slice(-2);
      }
      function kt(t) {
        return (t < 10 ? "0" : "") + t;
      }
      function xt(t) {
        var e = ft(t, 0),
          i = 8;
        1 & e && (i += 4), 4 & e && (i += 4);
        for (var r = 0, a = ft(t, 4), s = 0; s < a; s++)
          256 & e && ((r += ft(t, i)), (i += 4)),
            512 & e && (i += 4),
            1024 & e && (i += 4),
            2048 & e && (i += 4);
        return r;
      }
      function wt(t, e) {
        var i = new Uint8Array(t.length + e.length);
        return i.set(t), i.set(e, t.length), i;
      }
      function Qt(t, e) {
        var i = [],
          r = e.samples,
          a = e.timescale,
          s = e.id,
          n = !1;
        return (
          vt(r, ["moof"]).map(function (o) {
            var h = o.byteOffset - 8;
            vt(o, ["traf"]).map(function (o) {
              var l = vt(o, ["tfdt"]).map(function (t) {
                var e = t[0],
                  i = ft(t, 4);
                return (
                  1 === e && ((i *= Math.pow(2, 32)), (i += ft(t, 8))), i / a
                );
              })[0];
              return (
                void 0 !== l && (t = l),
                vt(o, ["tfhd"]).map(function (l) {
                  var A = ft(l, 4),
                    d = 16777215 & ft(l, 0),
                    u = 0,
                    c = 0 != (16 & d),
                    g = 0,
                    f = 0 != (32 & d),
                    p = 8;
                  A === s &&
                    (0 != (1 & d) && (p += 8),
                    0 != (2 & d) && (p += 4),
                    0 != (8 & d) && ((u = ft(l, p)), (p += 4)),
                    c && ((g = ft(l, p)), (p += 4)),
                    f && (p += 4),
                    "video" === e.type &&
                      (n = (function (t) {
                        if (!t) return !1;
                        var e = t.indexOf("."),
                          i = e < 0 ? t : t.substring(0, e);
                        return (
                          "hvc1" === i ||
                          "hev1" === i ||
                          "dvh1" === i ||
                          "dvhe" === i
                        );
                      })(e.codec)),
                    vt(o, ["trun"]).map(function (s) {
                      var o = s[0],
                        l = 16777215 & ft(s, 0),
                        A = 0 != (1 & l),
                        d = 0,
                        c = 0 != (4 & l),
                        f = 0 != (256 & l),
                        p = 0,
                        m = 0 != (512 & l),
                        v = 0,
                        E = 0 != (1024 & l),
                        y = 0 != (2048 & l),
                        I = 0,
                        C = ft(s, 4),
                        B = 8;
                      A && ((d = ft(s, B)), (B += 4)), c && (B += 4);
                      for (var k = d + h, x = 0; x < C; x++) {
                        if (
                          (f ? ((p = ft(s, B)), (B += 4)) : (p = u),
                          m ? ((v = ft(s, B)), (B += 4)) : (v = g),
                          E && (B += 4),
                          y && ((I = 0 === o ? ft(s, B) : pt(s, B)), (B += 4)),
                          e.type === U)
                        )
                          for (var w = 0; w < v; ) {
                            var Q = ft(r, k);
                            St(n, r[(k += 4)]) &&
                              bt(r.subarray(k, k + Q), n ? 2 : 1, t + I / a, i),
                              (k += Q),
                              (w += Q + 4);
                          }
                        t += p / a;
                      }
                    }));
                })
              );
            });
          }),
          i
        );
      }
      function St(t, e) {
        if (t) {
          var i = (e >> 1) & 63;
          return 39 === i || 40 === i;
        }
        return 6 == (31 & e);
      }
      function bt(t, e, i, r) {
        var a = Dt(t),
          s = 0;
        s += e;
        for (var n = 0, o = 0, h = 0; s < a.length; ) {
          n = 0;
          do {
            if (s >= a.length) break;
            n += h = a[s++];
          } while (255 === h);
          o = 0;
          do {
            if (s >= a.length) break;
            o += h = a[s++];
          } while (255 === h);
          var l = a.length - s,
            A = s;
          if (o < l) s += o;
          else if (o > l) {
            R.error(
              "Malformed SEI payload. " +
                o +
                " is too small, only " +
                l +
                " bytes left to parse."
            );
            break;
          }
          if (4 === n) {
            if (181 === a[A++]) {
              var d = gt(a, A);
              if (((A += 2), 49 === d)) {
                var u = ft(a, A);
                if (((A += 4), 1195456820 === u)) {
                  var c = a[A++];
                  if (3 === c) {
                    var g = a[A++],
                      f = 64 & g,
                      p = f ? 2 + 3 * (31 & g) : 0,
                      m = new Uint8Array(p);
                    if (f) {
                      m[0] = g;
                      for (var v = 1; v < p; v++) m[v] = a[A++];
                    }
                    r.push({ type: c, payloadType: n, pts: i, bytes: m });
                  }
                }
              }
            }
          } else if (5 === n && o > 16) {
            for (var E = [], y = 0; y < 16; y++) {
              var I = a[A++].toString(16);
              E.push(1 == I.length ? "0" + I : I),
                (3 !== y && 5 !== y && 7 !== y && 9 !== y) || E.push("-");
            }
            for (var C = o - 16, B = new Uint8Array(C), k = 0; k < C; k++)
              B[k] = a[A++];
            r.push({
              payloadType: n,
              pts: i,
              uuid: E.join(""),
              userData: ht(B),
              userDataBytes: B,
            });
          }
        }
      }
      function Dt(t) {
        for (var e = t.byteLength, i = [], r = 1; r < e - 2; )
          0 === t[r] && 0 === t[r + 1] && 3 === t[r + 2]
            ? (i.push(r + 2), (r += 2))
            : r++;
        if (0 === i.length) return t;
        var a = e - i.length,
          s = new Uint8Array(a),
          n = 0;
        for (r = 0; r < a; n++, r++)
          n === i[0] && (n++, i.shift()), (s[r] = t[n]);
        return s;
      }
      var Rt = (function () {
        function t(t, e, i, r, a) {
          void 0 === r && (r = [1]),
            void 0 === a && (a = null),
            (this.uri = void 0),
            (this.method = void 0),
            (this.keyFormat = void 0),
            (this.keyFormatVersions = void 0),
            (this.encrypted = void 0),
            (this.isCommonEncryption = void 0),
            (this.iv = null),
            (this.key = null),
            (this.keyId = null),
            (this.pssh = null),
            (this.method = t),
            (this.uri = e),
            (this.keyFormat = i),
            (this.keyFormatVersions = r),
            (this.iv = a),
            (this.encrypted = !!t && "NONE" !== t),
            (this.isCommonEncryption = this.encrypted && "AES-128" !== t);
        }
        t.clearKeyUriToKeyIdMap = function () {};
        var e = t.prototype;
        return (
          (e.isSupported = function () {
            if (this.method) {
              if ("AES-128" === this.method || "NONE" === this.method)
                return !0;
              if ("identity" === this.keyFormat)
                return "SAMPLE-AES" === this.method;
            }
            return !1;
          }),
          (e.getDecryptData = function (e) {
            if (!this.encrypted || !this.uri) return null;
            if ("AES-128" === this.method && this.uri && !this.iv) {
              "number" != typeof e &&
                ("AES-128" !== this.method ||
                  this.iv ||
                  R.warn(
                    'missing IV for initialization segment with method="' +
                      this.method +
                      '" - compliance issue'
                  ),
                (e = 0));
              var i = (function (t) {
                for (var e = new Uint8Array(16), i = 12; i < 16; i++)
                  e[i] = (t >> (8 * (15 - i))) & 255;
                return e;
              })(e);
              return new t(
                this.method,
                this.uri,
                "identity",
                this.keyFormatVersions,
                i
              );
            }
            return this;
          }),
          t
        );
      })();
      function Lt(t) {
        if ((void 0 === t && (t = !0), "undefined" != typeof self))
          return (
            ((t || !self.MediaSource) && self.ManagedMediaSource) ||
            self.MediaSource ||
            self.WebKitMediaSource
          );
      }
      var Tt = {
        audio: {
          a3ds: 1,
          "ac-3": 0.95,
          "ac-4": 1,
          alac: 0.9,
          alaw: 1,
          dra1: 1,
          "dts+": 1,
          "dts-": 1,
          dtsc: 1,
          dtse: 1,
          dtsh: 1,
          "ec-3": 0.9,
          enca: 1,
          fLaC: 0.9,
          flac: 0.9,
          FLAC: 0.9,
          g719: 1,
          g726: 1,
          m4ae: 1,
          mha1: 1,
          mha2: 1,
          mhm1: 1,
          mhm2: 1,
          mlpa: 1,
          mp4a: 1,
          "raw ": 1,
          Opus: 1,
          opus: 1,
          samr: 1,
          sawb: 1,
          sawp: 1,
          sevc: 1,
          sqcp: 1,
          ssmv: 1,
          twos: 1,
          ulaw: 1,
        },
        video: {
          avc1: 1,
          avc2: 1,
          avc3: 1,
          avc4: 1,
          avcp: 1,
          av01: 0.8,
          drac: 1,
          dva1: 1,
          dvav: 1,
          dvh1: 0.7,
          dvhe: 0.7,
          encv: 1,
          hev1: 0.75,
          hvc1: 0.75,
          mjp2: 1,
          mp4v: 1,
          mvc1: 1,
          mvc2: 1,
          mvc3: 1,
          mvc4: 1,
          resv: 1,
          rv60: 1,
          s263: 1,
          svc1: 1,
          svc2: 1,
          "vc-1": 1,
          vp08: 1,
          vp09: 0.9,
        },
        text: { stpp: 1, wvtt: 1 },
      };
      function Mt(t, e, i) {
        return (
          void 0 === i && (i = !0),
          !t.split(",").some(function (t) {
            return !Ft(t, e, i);
          })
        );
      }
      function Ft(t, e, i) {
        var r;
        void 0 === i && (i = !0);
        var a = Lt(i);
        return (
          null != (r = null == a ? void 0 : a.isTypeSupported(Pt(t, e))) && r
        );
      }
      function Pt(t, e) {
        return e + '/mp4;codecs="' + t + '"';
      }
      function _t(t) {
        if (t) {
          var e = t.substring(0, 4);
          return Tt.video[e];
        }
        return 2;
      }
      function Nt(t) {
        return t.split(",").reduce(function (t, e) {
          var i = Tt.video[e];
          return i
            ? (2 * i + t) / (t ? 3 : 2)
            : (Tt.audio[e] + t) / (t ? 2 : 1);
        }, 0);
      }
      var Ut = {},
        Gt = /flac|opus/i;
      function Ot(t, e) {
        return (
          void 0 === e && (e = !0),
          t.replace(Gt, function (t) {
            return (function (t, e) {
              if ((void 0 === e && (e = !0), Ut[t])) return Ut[t];
              for (
                var i = {
                    flac: ["flac", "fLaC", "FLAC"],
                    opus: ["opus", "Opus"],
                  }[t],
                  r = 0;
                r < i.length;
                r++
              )
                if (Ft(i[r], "audio", e)) return (Ut[t] = i[r]), i[r];
              return t;
            })(t.toLowerCase(), e);
          })
        );
      }
      function jt(t, e) {
        return t && "mp4a" !== t ? t : e;
      }
      var Yt =
          /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g,
        Ht = /#EXT-X-MEDIA:(.*)/g,
        Vt = /^#EXT(?:INF|-X-TARGETDURATION):/m,
        Kt = new RegExp(
          [
            /#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source,
            /(?!#) *(\S[\S ]*)/.source,
            /#EXT-X-BYTERANGE:*(.+)/.source,
            /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source,
            /#.*/.source,
          ].join("|"),
          "g"
        ),
        zt = new RegExp(
          [
            /#(EXTM3U)/.source,
            /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/
              .source,
            /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/
              .source,
            /#EXT-X-(DISCONTINUITY|ENDLIST|GAP|INDEPENDENT-SEGMENTS)/.source,
            /(#)([^:]*):(.*)/.source,
            /(#)(.*)(?:.*)\r?\n?/.source,
          ].join("|")
        ),
        qt = (function () {
          function t() {}
          return (
            (t.findGroup = function (t, e) {
              for (var i = 0; i < t.length; i++) {
                var r = t[i];
                if (r.id === e) return r;
              }
            }),
            (t.resolve = function (t, e) {
              return y.buildAbsoluteURL(e, t, { alwaysNormalize: !0 });
            }),
            (t.isMediaPlaylist = function (t) {
              return Vt.test(t);
            }),
            (t.parseMasterPlaylist = function (e, i) {
              var r,
                a = {
                  contentSteering: null,
                  levels: [],
                  playlistParsingError: null,
                  sessionData: null,
                  sessionKeys: null,
                  startTimeOffset: null,
                  variableList: null,
                  hasVariableRefs: !1,
                },
                s = [];
              for (Yt.lastIndex = 0; null != (r = Yt.exec(e)); )
                if (r[1]) {
                  var n,
                    o = new M(r[1]),
                    h = r[2],
                    l = {
                      attrs: o,
                      bitrate:
                        o.decimalInteger("BANDWIDTH") ||
                        o.decimalInteger("AVERAGE-BANDWIDTH"),
                      name: o.NAME,
                      url: t.resolve(h, i),
                    },
                    A = o.decimalResolution("RESOLUTION");
                  A && ((l.width = A.width), (l.height = A.height)),
                    Zt(o.CODECS, l),
                    (null != (n = l.unknownCodecs) && n.length) || s.push(l),
                    a.levels.push(l);
                } else if (r[3]) {
                  var d = r[3],
                    u = r[4];
                  switch (d) {
                    case "SESSION-DATA":
                      var c = new M(u),
                        g = c["DATA-ID"];
                      g &&
                        (null === a.sessionData && (a.sessionData = {}),
                        (a.sessionData[g] = c));
                      break;
                    case "SESSION-KEY":
                      var f = Wt(u, i);
                      f.encrypted && f.isSupported()
                        ? (null === a.sessionKeys && (a.sessionKeys = []),
                          a.sessionKeys.push(f))
                        : R.warn(
                            '[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' +
                              u +
                              '"'
                          );
                      break;
                    case "DEFINE":
                      break;
                    case "CONTENT-STEERING":
                      var p = new M(u);
                      a.contentSteering = {
                        uri: t.resolve(p["SERVER-URI"], i),
                        pathwayId: p["PATHWAY-ID"] || ".",
                      };
                      break;
                    case "START":
                      a.startTimeOffset = Jt(u);
                  }
                }
              var m = s.length > 0 && s.length < a.levels.length;
              return (
                (a.levels = m ? s : a.levels),
                0 === a.levels.length &&
                  (a.playlistParsingError = new Error(
                    "no levels found in manifest"
                  )),
                a
              );
            }),
            (t.parseMasterPlaylistMedia = function (e, i, r) {
              var a,
                s = {},
                n = r.levels,
                o = {
                  AUDIO: n.map(function (t) {
                    return { id: t.attrs.AUDIO, audioCodec: t.audioCodec };
                  }),
                  SUBTITLES: n.map(function (t) {
                    return { id: t.attrs.SUBTITLES, textCodec: t.textCodec };
                  }),
                  "CLOSED-CAPTIONS": [],
                },
                h = 0;
              for (Ht.lastIndex = 0; null !== (a = Ht.exec(e)); ) {
                var l = new M(a[1]),
                  A = l.TYPE;
                if (A) {
                  var d = o[A],
                    u = s[A] || [];
                  s[A] = u;
                  var c = l.LANGUAGE,
                    g = l["ASSOC-LANGUAGE"],
                    f = l.CHANNELS,
                    p = l.CHARACTERISTICS,
                    m = l["INSTREAM-ID"],
                    v = {
                      attrs: l,
                      bitrate: 0,
                      id: h++,
                      groupId: l["GROUP-ID"] || "",
                      name: l.NAME || c || "",
                      type: A,
                      default: l.bool("DEFAULT"),
                      autoselect: l.bool("AUTOSELECT"),
                      forced: l.bool("FORCED"),
                      lang: c,
                      url: l.URI ? t.resolve(l.URI, i) : "",
                    };
                  if (
                    (g && (v.assocLang = g),
                    f && (v.channels = f),
                    p && (v.characteristics = p),
                    m && (v.instreamId = m),
                    null != d && d.length)
                  ) {
                    var E = t.findGroup(d, v.groupId) || d[0];
                    Xt(v, E, "audioCodec"), Xt(v, E, "textCodec");
                  }
                  u.push(v);
                }
              }
              return s;
            }),
            (t.parseLevelPlaylist = function (t, e, i, r, a, s) {
              var n,
                h,
                l,
                A = new H(e),
                d = A.fragments,
                u = null,
                c = 0,
                g = 0,
                f = 0,
                p = 0,
                m = null,
                v = new j(r, e),
                E = -1,
                y = !1,
                C = null;
              for (
                Kt.lastIndex = 0, A.m3u8 = t, A.hasVariableRefs = !1;
                null !== (n = Kt.exec(t));

              ) {
                y &&
                  ((y = !1),
                  ((v = new j(r, e)).start = f),
                  (v.sn = c),
                  (v.cc = p),
                  (v.level = i),
                  u &&
                    ((v.initSegment = u),
                    (v.rawProgramDateTime = u.rawProgramDateTime),
                    (u.rawProgramDateTime = null),
                    C && (v.setByteRange(C), (C = null))));
                var B = n[1];
                if (B) {
                  v.duration = parseFloat(B);
                  var k = (" " + n[2]).slice(1);
                  (v.title = k || null),
                    v.tagList.push(k ? ["INF", B, k] : ["INF", B]);
                } else if (n[3]) {
                  if (I(v.duration)) {
                    (v.start = f),
                      l && ee(v, l, A),
                      (v.sn = c),
                      (v.level = i),
                      (v.cc = p),
                      d.push(v);
                    var x = (" " + n[3]).slice(1);
                    (v.relurl = x),
                      $t(v, m),
                      (m = v),
                      (f += v.duration),
                      c++,
                      (g = 0),
                      (y = !0);
                  }
                } else if (n[4]) {
                  var w = (" " + n[4]).slice(1);
                  m ? v.setByteRange(w, m) : v.setByteRange(w);
                } else if (n[5])
                  (v.rawProgramDateTime = (" " + n[5]).slice(1)),
                    v.tagList.push(["PROGRAM-DATE-TIME", v.rawProgramDateTime]),
                    -1 === E && (E = d.length);
                else {
                  if (!(n = n[0].match(zt))) {
                    R.warn(
                      "No matches on slow regex match for level playlist!"
                    );
                    continue;
                  }
                  for (h = 1; h < n.length && void 0 === n[h]; h++);
                  var Q = (" " + n[h]).slice(1),
                    S = (" " + n[h + 1]).slice(1),
                    b = n[h + 2] ? (" " + n[h + 2]).slice(1) : "";
                  switch (Q) {
                    case "PLAYLIST-TYPE":
                      A.type = S.toUpperCase();
                      break;
                    case "MEDIA-SEQUENCE":
                      c = A.startSN = parseInt(S);
                      break;
                    case "SKIP":
                      var D = new M(S),
                        L = D.decimalInteger("SKIPPED-SEGMENTS");
                      if (I(L)) {
                        A.skippedSegments = L;
                        for (var T = L; T--; ) d.unshift(null);
                        c += L;
                      }
                      var F = D.enumeratedString("RECENTLY-REMOVED-DATERANGES");
                      F && (A.recentlyRemovedDateranges = F.split("\t"));
                      break;
                    case "TARGETDURATION":
                      A.targetduration = Math.max(parseInt(S), 1);
                      break;
                    case "VERSION":
                      A.version = parseInt(S);
                      break;
                    case "INDEPENDENT-SEGMENTS":
                    case "EXTM3U":
                    case "DEFINE":
                      break;
                    case "ENDLIST":
                      A.live = !1;
                      break;
                    case "#":
                      (S || b) && v.tagList.push(b ? [S, b] : [S]);
                      break;
                    case "DISCONTINUITY":
                      p++, v.tagList.push(["DIS"]);
                      break;
                    case "GAP":
                      (v.gap = !0), v.tagList.push([Q]);
                      break;
                    case "BITRATE":
                      v.tagList.push([Q, S]);
                      break;
                    case "DATERANGE":
                      var _ = new M(S),
                        N = new P(_, A.dateRanges[_.ID]);
                      N.isValid || A.skippedSegments
                        ? (A.dateRanges[N.id] = N)
                        : R.warn('Ignoring invalid DATERANGE tag: "' + S + '"'),
                        v.tagList.push(["EXT-X-DATERANGE", S]);
                      break;
                    case "DISCONTINUITY-SEQUENCE":
                      p = parseInt(S);
                      break;
                    case "KEY":
                      var U = Wt(S, e);
                      if (U.isSupported()) {
                        if ("NONE" === U.method) {
                          l = void 0;
                          break;
                        }
                        l || (l = {}),
                          l[U.keyFormat] && (l = o({}, l)),
                          (l[U.keyFormat] = U);
                      } else
                        R.warn(
                          '[Keys] Ignoring invalid EXT-X-KEY tag: "' + S + '"'
                        );
                      break;
                    case "START":
                      A.startTimeOffset = Jt(S);
                      break;
                    case "MAP":
                      var G = new M(S);
                      if (v.duration) {
                        var O = new j(r, e);
                        te(O, G, i, l),
                          (u = O),
                          (v.initSegment = u),
                          u.rawProgramDateTime &&
                            !v.rawProgramDateTime &&
                            (v.rawProgramDateTime = u.rawProgramDateTime);
                      } else {
                        var V = v.byteRangeEndOffset;
                        if (V) {
                          var K = v.byteRangeStartOffset;
                          C = V - K + "@" + K;
                        } else C = null;
                        te(v, G, i, l), (u = v), (y = !0);
                      }
                      break;
                    case "SERVER-CONTROL":
                      var z = new M(S);
                      (A.canBlockReload = z.bool("CAN-BLOCK-RELOAD")),
                        (A.canSkipUntil = z.optionalFloat("CAN-SKIP-UNTIL", 0)),
                        (A.canSkipDateRanges =
                          A.canSkipUntil > 0 && z.bool("CAN-SKIP-DATERANGES")),
                        (A.partHoldBack = z.optionalFloat("PART-HOLD-BACK", 0)),
                        (A.holdBack = z.optionalFloat("HOLD-BACK", 0));
                      break;
                    case "PART-INF":
                      var q = new M(S);
                      A.partTarget = q.decimalFloatingPoint("PART-TARGET");
                      break;
                    case "PART":
                      var W = A.partList;
                      W || (W = A.partList = []);
                      var J = g > 0 ? W[W.length - 1] : void 0,
                        Z = g++,
                        X = new M(S),
                        $ = new Y(X, v, e, Z, J);
                      W.push($), (v.duration += $.duration);
                      break;
                    case "PRELOAD-HINT":
                      var tt = new M(S);
                      A.preloadHint = tt;
                      break;
                    case "RENDITION-REPORT":
                      var et = new M(S);
                      (A.renditionReports = A.renditionReports || []),
                        A.renditionReports.push(et);
                      break;
                    default:
                      R.warn("line parsed but not handled: " + n);
                  }
                }
              }
              m && !m.relurl
                ? (d.pop(),
                  (f -= m.duration),
                  A.partList && (A.fragmentHint = m))
                : A.partList &&
                  ($t(v, m),
                  (v.cc = p),
                  (A.fragmentHint = v),
                  l && ee(v, l, A));
              var it = d.length,
                rt = d[0],
                at = d[it - 1];
              if ((f += A.skippedSegments * A.targetduration) > 0 && it && at) {
                A.averagetargetduration = f / it;
                var st = at.sn;
                (A.endSN = "initSegment" !== st ? st : 0),
                  A.live || (at.endList = !0),
                  rt && (A.startCC = rt.cc);
              } else (A.endSN = 0), (A.startCC = 0);
              return (
                A.fragmentHint && (f += A.fragmentHint.duration),
                (A.totalduration = f),
                (A.endCC = p),
                E > 0 &&
                  (function (t, e) {
                    for (var i = t[e], r = e; r--; ) {
                      var a = t[r];
                      if (!a) return;
                      (a.programDateTime =
                        i.programDateTime - 1e3 * a.duration),
                        (i = a);
                    }
                  })(d, E),
                A
              );
            }),
            t
          );
        })();
      function Wt(t, e, i) {
        var r,
          a,
          s = new M(t),
          n = null != (r = s.METHOD) ? r : "",
          o = s.URI,
          h = s.hexadecimalInteger("IV"),
          l = s.KEYFORMATVERSIONS,
          A = null != (a = s.KEYFORMAT) ? a : "identity";
        o && s.IV && !h && R.error("Invalid IV: " + s.IV);
        var d = o ? qt.resolve(o, e) : "",
          u = (l || "1").split("/").map(Number).filter(Number.isFinite);
        return new Rt(n, d, A, u, h);
      }
      function Jt(t) {
        var e = new M(t).decimalFloatingPoint("TIME-OFFSET");
        return I(e) ? e : null;
      }
      function Zt(t, e) {
        var i = (t || "").split(/[ ,]+/).filter(function (t) {
          return t;
        });
        ["video", "audio", "text"].forEach(function (t) {
          var r = i.filter(function (e) {
            return (i = e), !!(r = Tt[t]) && !!r[i.slice(0, 4)];
            var i, r;
          });
          r.length &&
            ((e[t + "Codec"] = r.join(",")),
            (i = i.filter(function (t) {
              return -1 === r.indexOf(t);
            })));
        }),
          (e.unknownCodecs = i);
      }
      function Xt(t, e, i) {
        var r = e[i];
        r && (t[i] = r);
      }
      function $t(t, e) {
        t.rawProgramDateTime
          ? (t.programDateTime = Date.parse(t.rawProgramDateTime))
          : null != e &&
            e.programDateTime &&
            (t.programDateTime = e.endProgramDateTime),
          I(t.programDateTime) ||
            ((t.programDateTime = null), (t.rawProgramDateTime = null));
      }
      function te(t, e, i, r) {
        (t.relurl = e.URI),
          e.BYTERANGE && t.setByteRange(e.BYTERANGE),
          (t.level = i),
          (t.sn = "initSegment"),
          r && (t.levelkeys = r),
          (t.initSegment = null);
      }
      function ee(t, e, i) {
        t.levelkeys = e;
        var r = i.encryptedFragments;
        (r.length && r[r.length - 1].levelkeys === e) ||
          !Object.keys(e).some(function (t) {
            return e[t].isCommonEncryption;
          }) ||
          r.push(t);
      }
      var ie = "manifest",
        re = "level",
        ae = "audioTrack",
        se = "subtitleTrack",
        ne = "main",
        oe = "audio",
        he = "subtitle";
      function le(t) {
        switch (t.type) {
          case ae:
            return oe;
          case se:
            return he;
          default:
            return ne;
        }
      }
      function Ae(t, e) {
        var i = t.url;
        return (void 0 !== i && 0 !== i.indexOf("data:")) || (i = e.url), i;
      }
      var de = (function () {
        function t(t) {
          (this.hls = void 0),
            (this.loaders = Object.create(null)),
            (this.variableList = null),
            (this.hls = t),
            this.registerListeners();
        }
        var e = t.prototype;
        return (
          (e.startLoad = function (t) {}),
          (e.stopLoad = function () {
            this.destroyInternalLoaders();
          }),
          (e.registerListeners = function () {
            var t = this.hls;
            t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
              t.on(k.LEVEL_LOADING, this.onLevelLoading, this),
              t.on(k.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
              t.on(k.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);
          }),
          (e.unregisterListeners = function () {
            var t = this.hls;
            t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(k.LEVEL_LOADING, this.onLevelLoading, this),
              t.off(k.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
              t.off(
                k.SUBTITLE_TRACK_LOADING,
                this.onSubtitleTrackLoading,
                this
              );
          }),
          (e.createInternalLoader = function (t) {
            var e = this.hls.config,
              i = e.pLoader,
              r = e.loader,
              a = new (i || r)(e);
            return (this.loaders[t.type] = a), a;
          }),
          (e.getInternalLoader = function (t) {
            return this.loaders[t.type];
          }),
          (e.resetInternalLoader = function (t) {
            this.loaders[t] && delete this.loaders[t];
          }),
          (e.destroyInternalLoaders = function () {
            for (var t in this.loaders) {
              var e = this.loaders[t];
              e && e.destroy(), this.resetInternalLoader(t);
            }
          }),
          (e.destroy = function () {
            (this.variableList = null),
              this.unregisterListeners(),
              this.destroyInternalLoaders();
          }),
          (e.onManifestLoading = function (t, e) {
            var i = e.url;
            (this.variableList = null),
              this.load({
                id: null,
                level: 0,
                responseType: "text",
                type: ie,
                url: i,
                deliveryDirectives: null,
              });
          }),
          (e.onLevelLoading = function (t, e) {
            var i = e.id,
              r = e.level,
              a = e.pathwayId,
              s = e.url,
              n = e.deliveryDirectives;
            this.load({
              id: i,
              level: r,
              pathwayId: a,
              responseType: "text",
              type: re,
              url: s,
              deliveryDirectives: n,
            });
          }),
          (e.onAudioTrackLoading = function (t, e) {
            var i = e.id,
              r = e.groupId,
              a = e.url,
              s = e.deliveryDirectives;
            this.load({
              id: i,
              groupId: r,
              level: null,
              responseType: "text",
              type: ae,
              url: a,
              deliveryDirectives: s,
            });
          }),
          (e.onSubtitleTrackLoading = function (t, e) {
            var i = e.id,
              r = e.groupId,
              a = e.url,
              s = e.deliveryDirectives;
            this.load({
              id: i,
              groupId: r,
              level: null,
              responseType: "text",
              type: se,
              url: a,
              deliveryDirectives: s,
            });
          }),
          (e.load = function (t) {
            var e,
              i,
              r,
              a = this,
              s = this.hls.config,
              n = this.getInternalLoader(t);
            if (n) {
              var h = n.context;
              if (h && h.url === t.url && h.level === t.level)
                return void R.trace(
                  "[playlist-loader]: playlist request ongoing"
                );
              R.log(
                "[playlist-loader]: aborting previous loader for type: " +
                  t.type
              ),
                n.abort();
            }
            if (
              ((i =
                t.type === ie
                  ? s.manifestLoadPolicy.default
                  : o({}, s.playlistLoadPolicy.default, {
                      timeoutRetry: null,
                      errorRetry: null,
                    })),
              (n = this.createInternalLoader(t)),
              I(null == (e = t.deliveryDirectives) ? void 0 : e.part) &&
                (t.type === re && null !== t.level
                  ? (r = this.hls.levels[t.level].details)
                  : t.type === ae && null !== t.id
                  ? (r = this.hls.audioTracks[t.id].details)
                  : t.type === se &&
                    null !== t.id &&
                    (r = this.hls.subtitleTracks[t.id].details),
                r))
            ) {
              var l = r.partTarget,
                A = r.targetduration;
              if (l && A) {
                var d = 1e3 * Math.max(3 * l, 0.8 * A);
                i = o({}, i, {
                  maxTimeToFirstByteMs: Math.min(d, i.maxTimeToFirstByteMs),
                  maxLoadTimeMs: Math.min(d, i.maxTimeToFirstByteMs),
                });
              }
            }
            var u = i.errorRetry || i.timeoutRetry || {},
              c = {
                loadPolicy: i,
                timeout: i.maxLoadTimeMs,
                maxRetry: u.maxNumRetry || 0,
                retryDelay: u.retryDelayMs || 0,
                maxRetryDelay: u.maxRetryDelayMs || 0,
              },
              g = {
                onSuccess: function (t, e, i, r) {
                  var s = a.getInternalLoader(i);
                  a.resetInternalLoader(i.type);
                  var n = t.data;
                  0 === n.indexOf("#EXTM3U")
                    ? ((e.parsing.start = performance.now()),
                      qt.isMediaPlaylist(n)
                        ? a.handleTrackOrLevelPlaylist(t, e, i, r || null, s)
                        : a.handleMasterPlaylist(t, e, i, r))
                    : a.handleManifestParsingError(
                        t,
                        i,
                        new Error("no EXTM3U delimiter"),
                        r || null,
                        e
                      );
                },
                onError: function (t, e, i, r) {
                  a.handleNetworkError(e, i, !1, t, r);
                },
                onTimeout: function (t, e, i) {
                  a.handleNetworkError(e, i, !0, void 0, t);
                },
              };
            n.load(t, c, g);
          }),
          (e.handleMasterPlaylist = function (t, e, i, r) {
            var a = this.hls,
              s = t.data,
              n = Ae(t, i),
              o = qt.parseMasterPlaylist(s, n);
            if (o.playlistParsingError)
              this.handleManifestParsingError(
                t,
                i,
                o.playlistParsingError,
                r,
                e
              );
            else {
              var h = o.contentSteering,
                l = o.levels,
                A = o.sessionData,
                d = o.sessionKeys,
                u = o.startTimeOffset,
                c = o.variableList;
              this.variableList = c;
              var g = qt.parseMasterPlaylistMedia(s, n, o),
                f = g.AUDIO,
                p = void 0 === f ? [] : f,
                m = g.SUBTITLES,
                v = g["CLOSED-CAPTIONS"];
              p.length &&
                (p.some(function (t) {
                  return !t.url;
                }) ||
                  !l[0].audioCodec ||
                  l[0].attrs.AUDIO ||
                  (R.log(
                    "[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"
                  ),
                  p.unshift({
                    type: "main",
                    name: "main",
                    groupId: "main",
                    default: !1,
                    autoselect: !1,
                    forced: !1,
                    id: -1,
                    attrs: new M({}),
                    bitrate: 0,
                    url: "",
                  }))),
                a.trigger(k.MANIFEST_LOADED, {
                  levels: l,
                  audioTracks: p,
                  subtitles: m,
                  captions: v,
                  contentSteering: h,
                  url: n,
                  stats: e,
                  networkDetails: r,
                  sessionData: A,
                  sessionKeys: d,
                  startTimeOffset: u,
                  variableList: c,
                });
            }
          }),
          (e.handleTrackOrLevelPlaylist = function (t, e, i, r, a) {
            var s = this.hls,
              n = i.id,
              o = i.level,
              h = i.type,
              l = Ae(t, i),
              A = I(o) ? o : I(n) ? n : 0,
              d = le(i),
              u = qt.parseLevelPlaylist(t.data, l, A, d, 0, this.variableList);
            if (h === ie) {
              var c = {
                attrs: new M({}),
                bitrate: 0,
                details: u,
                name: "",
                url: l,
              };
              s.trigger(k.MANIFEST_LOADED, {
                levels: [c],
                audioTracks: [],
                url: l,
                stats: e,
                networkDetails: r,
                sessionData: null,
                sessionKeys: null,
                contentSteering: null,
                startTimeOffset: null,
                variableList: null,
              });
            }
            (e.parsing.end = performance.now()),
              (i.levelDetails = u),
              this.handlePlaylistLoaded(u, t, e, i, r, a);
          }),
          (e.handleManifestParsingError = function (t, e, i, r, a) {
            this.hls.trigger(k.ERROR, {
              type: x.NETWORK_ERROR,
              details: w.MANIFEST_PARSING_ERROR,
              fatal: e.type === ie,
              url: t.url,
              err: i,
              error: i,
              reason: i.message,
              response: t,
              context: e,
              networkDetails: r,
              stats: a,
            });
          }),
          (e.handleNetworkError = function (t, e, i, a, s) {
            void 0 === i && (i = !1);
            var n =
              "A network " +
              (i
                ? "timeout"
                : "error" + (a ? " (status " + a.code + ")" : "")) +
              " occurred while loading " +
              t.type;
            t.type === re
              ? (n += ": " + t.level + " id: " + t.id)
              : (t.type !== ae && t.type !== se) ||
                (n += " id: " + t.id + ' group-id: "' + t.groupId + '"');
            var o = new Error(n);
            R.warn("[playlist-loader]: " + n);
            var h = w.UNKNOWN,
              l = !1,
              A = this.getInternalLoader(t);
            switch (t.type) {
              case ie:
                (h = i ? w.MANIFEST_LOAD_TIMEOUT : w.MANIFEST_LOAD_ERROR),
                  (l = !0);
                break;
              case re:
                (h = i ? w.LEVEL_LOAD_TIMEOUT : w.LEVEL_LOAD_ERROR), (l = !1);
                break;
              case ae:
                (h = i ? w.AUDIO_TRACK_LOAD_TIMEOUT : w.AUDIO_TRACK_LOAD_ERROR),
                  (l = !1);
                break;
              case se:
                (h = i ? w.SUBTITLE_TRACK_LOAD_TIMEOUT : w.SUBTITLE_LOAD_ERROR),
                  (l = !1);
            }
            A && this.resetInternalLoader(t.type);
            var d = {
              type: x.NETWORK_ERROR,
              details: h,
              fatal: l,
              url: t.url,
              loader: A,
              context: t,
              error: o,
              networkDetails: e,
              stats: s,
            };
            if (a) {
              var u = (null == e ? void 0 : e.url) || t.url;
              d.response = r({ url: u, data: void 0 }, a);
            }
            this.hls.trigger(k.ERROR, d);
          }),
          (e.handlePlaylistLoaded = function (t, e, i, r, a, s) {
            var n = this.hls,
              o = r.type,
              h = r.level,
              l = r.id,
              A = r.groupId,
              d = r.deliveryDirectives,
              u = Ae(e, r),
              c = le(r),
              g = "number" == typeof r.level && c === ne ? h : void 0;
            if (t.fragments.length) {
              t.targetduration ||
                (t.playlistParsingError = new Error("Missing Target Duration"));
              var f = t.playlistParsingError;
              if (f)
                n.trigger(k.ERROR, {
                  type: x.NETWORK_ERROR,
                  details: w.LEVEL_PARSING_ERROR,
                  fatal: !1,
                  url: u,
                  error: f,
                  reason: f.message,
                  response: e,
                  context: r,
                  level: g,
                  parent: c,
                  networkDetails: a,
                  stats: i,
                });
              else
                switch (
                  (t.live &&
                    s &&
                    (s.getCacheAge && (t.ageHeader = s.getCacheAge() || 0),
                    (s.getCacheAge && !isNaN(t.ageHeader)) ||
                      (t.ageHeader = 0)),
                  o)
                ) {
                  case ie:
                  case re:
                    n.trigger(k.LEVEL_LOADED, {
                      details: t,
                      level: g || 0,
                      id: l || 0,
                      stats: i,
                      networkDetails: a,
                      deliveryDirectives: d,
                    });
                    break;
                  case ae:
                    n.trigger(k.AUDIO_TRACK_LOADED, {
                      details: t,
                      id: l || 0,
                      groupId: A || "",
                      stats: i,
                      networkDetails: a,
                      deliveryDirectives: d,
                    });
                    break;
                  case se:
                    n.trigger(k.SUBTITLE_TRACK_LOADED, {
                      details: t,
                      id: l || 0,
                      groupId: A || "",
                      stats: i,
                      networkDetails: a,
                      deliveryDirectives: d,
                    });
                }
            } else {
              var p = new Error("No Segments found in Playlist");
              n.trigger(k.ERROR, {
                type: x.NETWORK_ERROR,
                details: w.LEVEL_EMPTY_ERROR,
                fatal: !1,
                url: u,
                error: p,
                reason: p.message,
                response: e,
                context: r,
                level: g,
                parent: c,
                networkDetails: a,
                stats: i,
              });
            }
          }),
          t
        );
      })();
      function ue(t, e) {
        var i;
        try {
          i = new Event("addtrack");
        } catch (r) {
          (i = document.createEvent("Event")).initEvent("addtrack", !1, !1);
        }
        (i.track = t), e.dispatchEvent(i);
      }
      var ce = "org.id3",
        ge = "https://aomedia.org/emsg/ID3";
      function fe() {
        if ("undefined" != typeof self) return self.VTTCue || self.TextTrackCue;
      }
      function pe(t, e, i, a, s) {
        var n = new t(e, i, "");
        try {
          (n.value = a), s && (n.type = s);
        } catch (o) {
          n = new t(e, i, JSON.stringify(s ? r({ type: s }, a) : a));
        }
        return n;
      }
      var me = (function () {
        var t = fe();
        try {
          t && new t(0, Number.POSITIVE_INFINITY, "");
        } catch (e) {
          return Number.MAX_VALUE;
        }
        return Number.POSITIVE_INFINITY;
      })();
      function ve(t, e) {
        return t.getTime() / 1e3 - e;
      }
      var Ee = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.id3Track = null),
              (this.media = null),
              (this.dateRangeCuesAppended = {}),
              (this.hls = t),
              this._registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this._unregisterListeners(),
                (this.id3Track = null),
                (this.media = null),
                (this.dateRangeCuesAppended = {}),
                (this.hls = null);
            }),
            (e._registerListeners = function () {
              var t = this.hls;
              t.on(k.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(k.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.on(k.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(k.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e._unregisterListeners = function () {
              var t = this.hls;
              t.off(k.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(
                  k.FRAG_PARSING_METADATA,
                  this.onFragParsingMetadata,
                  this
                ),
                t.off(k.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(k.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e.onMediaAttached = function (t, e) {
              this.media = e.media;
            }),
            (e.onMediaDetaching = function () {
              this.id3Track &&
                ((function (t) {
                  var e = t.mode;
                  if (("disabled" === e && (t.mode = "hidden"), t.cues))
                    for (var i = t.cues.length; i--; ) t.removeCue(t.cues[i]);
                  "disabled" === e && (t.mode = e);
                })(this.id3Track),
                (this.id3Track = null),
                (this.media = null),
                (this.dateRangeCuesAppended = {}));
            }),
            (e.onManifestLoading = function () {
              this.dateRangeCuesAppended = {};
            }),
            (e.createTrack = function (t) {
              var e = this.getID3Track(t.textTracks);
              return (e.mode = "hidden"), e;
            }),
            (e.getID3Track = function (t) {
              if (this.media) {
                for (var e = 0; e < t.length; e++) {
                  var i = t[e];
                  if ("metadata" === i.kind && "id3" === i.label)
                    return ue(i, this.media), i;
                }
                return this.media.addTextTrack("metadata", "id3");
              }
            }),
            (e.onFragParsingMetadata = function (t, e) {
              if (this.media) {
                var i = this.hls.config,
                  r = i.enableEmsgMetadataCues,
                  a = i.enableID3MetadataCues;
                if (r || a) {
                  var s = e.samples;
                  this.id3Track ||
                    (this.id3Track = this.createTrack(this.media));
                  var n = fe();
                  if (n)
                    for (var o = 0; o < s.length; o++) {
                      var h = s[o].type;
                      if ((h !== ge || r) && a) {
                        var l = it(s[o].data);
                        if (l) {
                          var A = s[o].pts,
                            d = A + s[o].duration;
                          d > me && (d = me), d - A <= 0 && (d = A + 0.25);
                          for (var u = 0; u < l.length; u++) {
                            var c = l[u];
                            if (!tt(c)) {
                              this.updateId3CueEnds(A, h);
                              var g = pe(n, A, d, c, h);
                              g && this.id3Track.addCue(g);
                            }
                          }
                        }
                      }
                    }
                }
              }
            }),
            (e.updateId3CueEnds = function (t, e) {
              var i,
                r = null == (i = this.id3Track) ? void 0 : i.cues;
              if (r)
                for (var a = r.length; a--; ) {
                  var s = r[a];
                  s.type === e &&
                    s.startTime < t &&
                    s.endTime === me &&
                    (s.endTime = t);
                }
            }),
            (e.onBufferFlushing = function (t, e) {
              var i = e.startOffset,
                r = e.endOffset,
                a = e.type,
                s = this.id3Track,
                n = this.hls;
              if (n) {
                var o = n.config,
                  h = o.enableEmsgMetadataCues,
                  l = o.enableID3MetadataCues;
                s &&
                  (h || l) &&
                  (function (t, e, i, r) {
                    var a = t.mode;
                    if (
                      ("disabled" === a && (t.mode = "hidden"),
                      t.cues && t.cues.length > 0)
                    )
                      for (
                        var s = (function (t, e, i) {
                            var r = [],
                              a = (function (t, e) {
                                if (e < t[0].startTime) return 0;
                                var i = t.length - 1;
                                if (e > t[i].endTime) return -1;
                                for (var r = 0, a = i; r <= a; ) {
                                  var s = Math.floor((a + r) / 2);
                                  if (e < t[s].startTime) a = s - 1;
                                  else {
                                    if (!(e > t[s].startTime && r < i))
                                      return s;
                                    r = s + 1;
                                  }
                                }
                                return t[r].startTime - e < e - t[a].startTime
                                  ? r
                                  : a;
                              })(t, e);
                            if (a > -1)
                              for (var s = a, n = t.length; s < n; s++) {
                                var o = t[s];
                                if (o.startTime >= e && o.endTime <= i)
                                  r.push(o);
                                else if (o.startTime > i) return r;
                              }
                            return r;
                          })(t.cues, e, i),
                          n = 0;
                        n < s.length;
                        n++
                      )
                        (r && !r(s[n])) || t.removeCue(s[n]);
                    "disabled" === a && (t.mode = a);
                  })(
                    s,
                    i,
                    r,
                    "audio" === a
                      ? function (t) {
                          return t.type === ce && l;
                        }
                      : "video" === a
                      ? function (t) {
                          return t.type === ge && h;
                        }
                      : function (t) {
                          return (t.type === ce && l) || (t.type === ge && h);
                        }
                  );
              }
            }),
            (e.onLevelUpdated = function (t, e) {
              var i = this,
                r = e.details;
              if (
                this.media &&
                r.hasProgramDateTime &&
                this.hls.config.enableDateRangeMetadataCues
              ) {
                var a = this.dateRangeCuesAppended,
                  s = this.id3Track,
                  n = r.dateRanges,
                  o = Object.keys(n);
                if (s)
                  for (
                    var h = Object.keys(a).filter(function (t) {
                        return !o.includes(t);
                      }),
                      l = function () {
                        var t = h[A];
                        Object.keys(a[t].cues).forEach(function (e) {
                          s.removeCue(a[t].cues[e]);
                        }),
                          delete a[t];
                      },
                      A = h.length;
                    A--;

                  )
                    l();
                var d = r.fragments[r.fragments.length - 1];
                if (
                  0 !== o.length &&
                  I(null == d ? void 0 : d.programDateTime)
                ) {
                  this.id3Track ||
                    (this.id3Track = this.createTrack(this.media));
                  for (
                    var u = d.programDateTime / 1e3 - d.start,
                      c = fe(),
                      g = function () {
                        var t = o[f],
                          e = n[t],
                          r = ve(e.startDate, u),
                          s = a[t],
                          h = (null == s ? void 0 : s.cues) || {},
                          l = (null == s ? void 0 : s.durationKnown) || !1,
                          A = me,
                          d = e.endDate;
                        if (d) (A = ve(d, u)), (l = !0);
                        else if (e.endOnNext && !l) {
                          var g = o.reduce(function (t, i) {
                            if (i !== e.id) {
                              var r = n[i];
                              if (
                                r.class === e.class &&
                                r.startDate > e.startDate &&
                                (!t || e.startDate < t.startDate)
                              )
                                return r;
                            }
                            return t;
                          }, null);
                          g && ((A = ve(g.startDate, u)), (l = !0));
                        }
                        for (
                          var p, m, v = Object.keys(e.attr), E = 0;
                          E < v.length;
                          E++
                        ) {
                          var y = v[E];
                          if (
                            "ID" !== (m = y) &&
                            "CLASS" !== m &&
                            "START-DATE" !== m &&
                            "DURATION" !== m &&
                            "END-DATE" !== m &&
                            "END-ON-NEXT" !== m
                          ) {
                            var I = h[y];
                            if (I) l && !s.durationKnown && (I.endTime = A);
                            else if (c) {
                              var C = e.attr[y];
                              F(y) &&
                                ((p = C),
                                (C = Uint8Array.from(
                                  p
                                    .replace(/^0x/, "")
                                    .replace(/([\da-fA-F]{2}) ?/g, "0x$1 ")
                                    .replace(/ +$/, "")
                                    .split(" ")
                                ).buffer));
                              var B = pe(
                                c,
                                r,
                                A,
                                { key: y, data: C },
                                "com.apple.quicktime.HLS"
                              );
                              B &&
                                ((B.id = t), i.id3Track.addCue(B), (h[y] = B));
                            }
                          }
                        }
                        a[t] = { cues: h, dateRange: e, durationKnown: l };
                      },
                      f = 0;
                    f < o.length;
                    f++
                  )
                    g();
                }
              }
            }),
            t
          );
        })(),
        ye = (function () {
          function t(t) {
            var e = this;
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = null),
              (this.levelDetails = null),
              (this.currentTime = 0),
              (this.stallCount = 0),
              (this._latency = null),
              (this.timeupdateHandler = function () {
                return e.timeupdate();
              }),
              (this.hls = t),
              (this.config = t.config),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.unregisterListeners(),
                this.onMediaDetaching(),
                (this.levelDetails = null),
                (this.hls = this.timeupdateHandler = null);
            }),
            (e.registerListeners = function () {
              this.hls.on(k.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(k.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.on(k.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(k.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(k.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.off(k.ERROR, this.onError, this);
            }),
            (e.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media.addEventListener(
                  "timeupdate",
                  this.timeupdateHandler
                );
            }),
            (e.onMediaDetaching = function () {
              this.media &&
                (this.media.removeEventListener(
                  "timeupdate",
                  this.timeupdateHandler
                ),
                (this.media = null));
            }),
            (e.onManifestLoading = function () {
              (this.levelDetails = null),
                (this._latency = null),
                (this.stallCount = 0);
            }),
            (e.onLevelUpdated = function (t, e) {
              var i = e.details;
              (this.levelDetails = i),
                i.advanced && this.timeupdate(),
                !i.live &&
                  this.media &&
                  this.media.removeEventListener(
                    "timeupdate",
                    this.timeupdateHandler
                  );
            }),
            (e.onError = function (t, e) {
              var i;
              e.details === w.BUFFER_STALLED_ERROR &&
                (this.stallCount++,
                null != (i = this.levelDetails) &&
                  i.live &&
                  R.warn(
                    "[playback-rate-controller]: Stall detected, adjusting target latency"
                  ));
            }),
            (e.timeupdate = function () {
              var t = this.media,
                e = this.levelDetails;
              if (t && e) {
                this.currentTime = t.currentTime;
                var i = this.computeLatency();
                if (null !== i) {
                  this._latency = i;
                  var r = this.config,
                    a = r.lowLatencyMode,
                    s = r.maxLiveSyncPlaybackRate;
                  if (a && 1 !== s && e.live) {
                    var n = this.targetLatency;
                    if (null !== n) {
                      var o = i - n;
                      if (
                        o < Math.min(this.maxLatency, n + e.targetduration) &&
                        o > 0.05 &&
                        this.forwardBufferLength > 1
                      ) {
                        var h = Math.min(2, Math.max(1, s)),
                          l =
                            Math.round(
                              (2 /
                                (1 + Math.exp(-0.75 * o - this.edgeStalled))) *
                                20
                            ) / 20;
                        t.playbackRate = Math.min(h, Math.max(1, l));
                      } else
                        1 !== t.playbackRate &&
                          0 !== t.playbackRate &&
                          (t.playbackRate = 1);
                    }
                  }
                }
              }
            }),
            (e.estimateLiveEdge = function () {
              var t = this.levelDetails;
              return null === t ? null : t.edge + t.age;
            }),
            (e.computeLatency = function () {
              var t = this.estimateLiveEdge();
              return null === t ? null : t - this.currentTime;
            }),
            n(t, [
              {
                key: "latency",
                get: function () {
                  return this._latency || 0;
                },
              },
              {
                key: "maxLatency",
                get: function () {
                  var t = this.config,
                    e = this.levelDetails;
                  return void 0 !== t.liveMaxLatencyDuration
                    ? t.liveMaxLatencyDuration
                    : e
                    ? t.liveMaxLatencyDurationCount * e.targetduration
                    : 0;
                },
              },
              {
                key: "targetLatency",
                get: function () {
                  var t = this.levelDetails;
                  if (null === t) return null;
                  var e = t.holdBack,
                    i = t.partHoldBack,
                    r = t.targetduration,
                    a = this.config,
                    s = a.liveSyncDuration,
                    n = a.liveSyncDurationCount,
                    o = a.lowLatencyMode,
                    h = this.hls.userConfig,
                    l = (o && i) || e;
                  (h.liveSyncDuration || h.liveSyncDurationCount || 0 === l) &&
                    (l = void 0 !== s ? s : n * r);
                  var A = r;
                  return l + Math.min(1 * this.stallCount, A);
                },
              },
              {
                key: "liveSyncPosition",
                get: function () {
                  var t = this.estimateLiveEdge(),
                    e = this.targetLatency,
                    i = this.levelDetails;
                  if (null === t || null === e || null === i) return null;
                  var r = i.edge,
                    a = t - e - this.edgeStalled,
                    s = r - i.totalduration,
                    n =
                      r -
                      ((this.config.lowLatencyMode && i.partTarget) ||
                        i.targetduration);
                  return Math.min(Math.max(s, a), n);
                },
              },
              {
                key: "drift",
                get: function () {
                  var t = this.levelDetails;
                  return null === t ? 1 : t.drift;
                },
              },
              {
                key: "edgeStalled",
                get: function () {
                  var t = this.levelDetails;
                  if (null === t) return 0;
                  var e =
                    3 *
                    ((this.config.lowLatencyMode && t.partTarget) ||
                      t.targetduration);
                  return Math.max(t.age - e, 0);
                },
              },
              {
                key: "forwardBufferLength",
                get: function () {
                  var t = this.media,
                    e = this.levelDetails;
                  if (!t || !e) return 0;
                  var i = t.buffered.length;
                  return (
                    (i ? t.buffered.end(i - 1) : e.edge) - this.currentTime
                  );
                },
              },
            ]),
            t
          );
        })(),
        Ie = ["NONE", "TYPE-0", "TYPE-1", null],
        Ce = ["SDR", "PQ", "HLG"],
        Be = (function () {
          function t(t, e, i) {
            (this.msn = void 0),
              (this.part = void 0),
              (this.skip = void 0),
              (this.msn = t),
              (this.part = e),
              (this.skip = i);
          }
          return (
            (t.prototype.addDirectives = function (t) {
              var e = new self.URL(t);
              return (
                void 0 !== this.msn &&
                  e.searchParams.set("_HLS_msn", this.msn.toString()),
                void 0 !== this.part &&
                  e.searchParams.set("_HLS_part", this.part.toString()),
                this.skip && e.searchParams.set("_HLS_skip", this.skip),
                e.href
              );
            }),
            t
          );
        })(),
        ke = (function () {
          function t(t) {
            (this._attrs = void 0),
              (this.audioCodec = void 0),
              (this.bitrate = void 0),
              (this.codecSet = void 0),
              (this.url = void 0),
              (this.frameRate = void 0),
              (this.height = void 0),
              (this.id = void 0),
              (this.name = void 0),
              (this.videoCodec = void 0),
              (this.width = void 0),
              (this.details = void 0),
              (this.fragmentError = 0),
              (this.loadError = 0),
              (this.loaded = void 0),
              (this.realBitrate = 0),
              (this.supportedPromise = void 0),
              (this.supportedResult = void 0),
              (this._avgBitrate = 0),
              (this._audioGroups = void 0),
              (this._subtitleGroups = void 0),
              (this._urlId = 0),
              (this.url = [t.url]),
              (this._attrs = [t.attrs]),
              (this.bitrate = t.bitrate),
              t.details && (this.details = t.details),
              (this.id = t.id || 0),
              (this.name = t.name),
              (this.width = t.width || 0),
              (this.height = t.height || 0),
              (this.frameRate = t.attrs.optionalFloat("FRAME-RATE", 0)),
              (this._avgBitrate = t.attrs.decimalInteger("AVERAGE-BANDWIDTH")),
              (this.audioCodec = t.audioCodec),
              (this.videoCodec = t.videoCodec),
              (this.codecSet = [t.videoCodec, t.audioCodec]
                .filter(function (t) {
                  return !!t;
                })
                .map(function (t) {
                  return t.substring(0, 4);
                })
                .join(",")),
              this.addGroupId("audio", t.attrs.AUDIO),
              this.addGroupId("text", t.attrs.SUBTITLES);
          }
          var e = t.prototype;
          return (
            (e.hasAudioGroup = function (t) {
              return xe(this._audioGroups, t);
            }),
            (e.hasSubtitleGroup = function (t) {
              return xe(this._subtitleGroups, t);
            }),
            (e.addGroupId = function (t, e) {
              if (e)
                if ("audio" === t) {
                  var i = this._audioGroups;
                  i || (i = this._audioGroups = []),
                    -1 === i.indexOf(e) && i.push(e);
                } else if ("text" === t) {
                  var r = this._subtitleGroups;
                  r || (r = this._subtitleGroups = []),
                    -1 === r.indexOf(e) && r.push(e);
                }
            }),
            (e.addFallback = function () {}),
            n(t, [
              {
                key: "maxBitrate",
                get: function () {
                  return Math.max(this.realBitrate, this.bitrate);
                },
              },
              {
                key: "averageBitrate",
                get: function () {
                  return this._avgBitrate || this.realBitrate || this.bitrate;
                },
              },
              {
                key: "attrs",
                get: function () {
                  return this._attrs[0];
                },
              },
              {
                key: "codecs",
                get: function () {
                  return this.attrs.CODECS || "";
                },
              },
              {
                key: "pathwayId",
                get: function () {
                  return this.attrs["PATHWAY-ID"] || ".";
                },
              },
              {
                key: "videoRange",
                get: function () {
                  return this.attrs["VIDEO-RANGE"] || "SDR";
                },
              },
              {
                key: "score",
                get: function () {
                  return this.attrs.optionalFloat("SCORE", 0);
                },
              },
              {
                key: "uri",
                get: function () {
                  return this.url[0] || "";
                },
              },
              {
                key: "audioGroups",
                get: function () {
                  return this._audioGroups;
                },
              },
              {
                key: "subtitleGroups",
                get: function () {
                  return this._subtitleGroups;
                },
              },
              {
                key: "urlId",
                get: function () {
                  return 0;
                },
                set: function (t) {},
              },
              {
                key: "audioGroupIds",
                get: function () {
                  return this.audioGroups ? [this.audioGroupId] : void 0;
                },
              },
              {
                key: "textGroupIds",
                get: function () {
                  return this.subtitleGroups ? [this.textGroupId] : void 0;
                },
              },
              {
                key: "audioGroupId",
                get: function () {
                  var t;
                  return null == (t = this.audioGroups) ? void 0 : t[0];
                },
              },
              {
                key: "textGroupId",
                get: function () {
                  var t;
                  return null == (t = this.subtitleGroups) ? void 0 : t[0];
                },
              },
            ]),
            t
          );
        })();
      function xe(t, e) {
        return !(!e || !t) && -1 !== t.indexOf(e);
      }
      function we(t, e) {
        var i = e.startPTS;
        if (I(i)) {
          var r,
            a = 0;
          e.sn > t.sn
            ? ((a = i - t.start), (r = t))
            : ((a = t.start - i), (r = e)),
            r.duration !== a && (r.duration = a);
        } else
          e.sn > t.sn
            ? t.cc === e.cc && t.minEndPTS
              ? (e.start = t.start + (t.minEndPTS - t.start))
              : (e.start = t.start + t.duration)
            : (e.start = Math.max(t.start - e.duration, 0));
      }
      function Qe(t, e, i, r, a, s) {
        r - i <= 0 &&
          (R.warn("Fragment should have a positive duration", e),
          (r = i + e.duration),
          (s = a + e.duration));
        var n = i,
          o = r,
          h = e.startPTS,
          l = e.endPTS;
        if (I(h)) {
          var A = Math.abs(h - i);
          I(e.deltaPTS)
            ? (e.deltaPTS = Math.max(A, e.deltaPTS))
            : (e.deltaPTS = A),
            (n = Math.max(i, h)),
            (i = Math.min(i, h)),
            (a = Math.min(a, e.startDTS)),
            (o = Math.min(r, l)),
            (r = Math.max(r, l)),
            (s = Math.max(s, e.endDTS));
        }
        var d = i - e.start;
        0 !== e.start && (e.start = i),
          (e.duration = r - e.start),
          (e.startPTS = i),
          (e.maxStartPTS = n),
          (e.startDTS = a),
          (e.endPTS = r),
          (e.minEndPTS = o),
          (e.endDTS = s);
        var u,
          c = e.sn;
        if (!t || c < t.startSN || c > t.endSN) return 0;
        var g = c - t.startSN,
          f = t.fragments;
        for (f[g] = e, u = g; u > 0; u--) we(f[u], f[u - 1]);
        for (u = g; u < f.length - 1; u++) we(f[u], f[u + 1]);
        return (
          t.fragmentHint && we(f[f.length - 1], t.fragmentHint),
          (t.PTSKnown = t.alignedSliding = !0),
          d
        );
      }
      function Se(t, e) {
        var i = e.startSN + e.skippedSegments - t.startSN,
          r = t.fragments;
        i < 0 ||
          i >= r.length ||
          (function (t, e) {
            if (e) {
              for (
                var i = t.fragments, r = t.skippedSegments;
                r < i.length;
                r++
              )
                i[r].start += e;
              t.fragmentHint && (t.fragmentHint.start += e);
            }
          })(e, r[i].start);
      }
      function be(t, e, i) {
        var r;
        return null != t && t.details
          ? De(null == (r = t.details) ? void 0 : r.partList, e, i)
          : null;
      }
      function De(t, e, i) {
        if (t)
          for (var r = t.length; r--; ) {
            var a = t[r];
            if (a.index === i && a.fragment.sn === e) return a;
          }
        return null;
      }
      function Re(t) {
        t.forEach(function (t, e) {
          var i = t.details;
          null != i &&
            i.fragments &&
            i.fragments.forEach(function (t) {
              t.level = e;
            });
        });
      }
      function Le(t) {
        switch (t.details) {
          case w.FRAG_LOAD_TIMEOUT:
          case w.KEY_LOAD_TIMEOUT:
          case w.LEVEL_LOAD_TIMEOUT:
          case w.MANIFEST_LOAD_TIMEOUT:
            return !0;
        }
        return !1;
      }
      function Te(t, e) {
        var i = Le(e);
        return t.default[(i ? "timeout" : "error") + "Retry"];
      }
      function Me(t, e) {
        var i = "linear" === t.backoff ? 1 : Math.pow(2, e);
        return Math.min(i * t.retryDelayMs, t.maxRetryDelayMs);
      }
      function Fe(t) {
        return r(r({}, t), { errorRetry: null, timeoutRetry: null });
      }
      function Pe(t, e, i, r) {
        if (!t) return !1;
        var a,
          s = null == r ? void 0 : r.code,
          n =
            e < t.maxNumRetry &&
            ((0 === (a = s) && !1 === navigator.onLine) ||
              (!!a && (a < 400 || a > 499)) ||
              !!i);
        return t.shouldRetry ? t.shouldRetry(t, e, i, r, n) : n;
      }
      var _e = function (t, e) {
        for (var i = 0, r = t.length - 1, a = null, s = null; i <= r; ) {
          var n = e((s = t[(a = ((i + r) / 2) | 0)]));
          if (n > 0) i = a + 1;
          else {
            if (!(n < 0)) return s;
            r = a - 1;
          }
        }
        return null;
      };
      function Ne(t, e, i, r) {
        void 0 === i && (i = 0), void 0 === r && (r = 0);
        var a = null;
        if (t) {
          a = e[t.sn - e[0].sn + 1] || null;
          var s = t.endDTS - i;
          s > 0 && s < 15e-7 && (i += 15e-7);
        } else 0 === i && 0 === e[0].start && (a = e[0]);
        if (a && (!t || t.level === a.level) && 0 === Ue(i, r, a)) return a;
        var n = _e(e, Ue.bind(null, i, r));
        return !n || (n === t && a) ? a : n;
      }
      function Ue(t, e, i) {
        if (
          (void 0 === t && (t = 0),
          void 0 === e && (e = 0),
          i.start <= t && i.start + i.duration > t)
        )
          return 0;
        var r = Math.min(e, i.duration + (i.deltaPTS ? i.deltaPTS : 0));
        return i.start + i.duration - r <= t
          ? 1
          : i.start - r > t && i.start
          ? -1
          : 0;
      }
      function Ge(t, e, i) {
        var r = 1e3 * Math.min(e, i.duration + (i.deltaPTS ? i.deltaPTS : 0));
        return (i.endProgramDateTime || 0) - r > t;
      }
      var Oe = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.playlistError = 0),
              (this.penalizedRenditions = {}),
              (this.log = void 0),
              (this.warn = void 0),
              (this.error = void 0),
              (this.hls = t),
              (this.log = R.log.bind(R, "[info]:")),
              (this.warn = R.warn.bind(R, "[warning]:")),
              (this.error = R.error.bind(R, "[error]:")),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(k.ERROR, this.onError, this),
                t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(k.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(k.ERROR, this.onError, this),
                t.off(k.ERROR, this.onErrorOut, this),
                t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(k.LEVEL_UPDATED, this.onLevelUpdated, this));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                (this.hls = null),
                (this.penalizedRenditions = {});
            }),
            (e.startLoad = function (t) {}),
            (e.stopLoad = function () {
              this.playlistError = 0;
            }),
            (e.getVariantLevelIndex = function (t) {
              return (null == t ? void 0 : t.type) === ne
                ? t.level
                : this.hls.loadLevel;
            }),
            (e.onManifestLoading = function () {
              (this.playlistError = 0), (this.penalizedRenditions = {});
            }),
            (e.onLevelUpdated = function () {
              this.playlistError = 0;
            }),
            (e.onError = function (t, e) {
              var i, r;
              if (!e.fatal) {
                var a = this.hls,
                  s = e.context;
                switch (e.details) {
                  case w.FRAG_LOAD_ERROR:
                  case w.FRAG_LOAD_TIMEOUT:
                  case w.KEY_LOAD_ERROR:
                  case w.KEY_LOAD_TIMEOUT:
                    return void (e.errorAction =
                      this.getFragRetryOrSwitchAction(e));
                  case w.FRAG_PARSING_ERROR:
                    if (null != (i = e.frag) && i.gap)
                      return void (e.errorAction = { action: 0, flags: 0 });
                  case w.FRAG_GAP:
                  case w.FRAG_DECRYPT_ERROR:
                    return (
                      (e.errorAction = this.getFragRetryOrSwitchAction(e)),
                      void (e.errorAction.action = 2)
                    );
                  case w.LEVEL_EMPTY_ERROR:
                  case w.LEVEL_PARSING_ERROR:
                    var n,
                      o,
                      h = e.parent === ne ? e.level : a.loadLevel;
                    return void (e.details === w.LEVEL_EMPTY_ERROR &&
                    null != (n = e.context) &&
                    null != (o = n.levelDetails) &&
                    o.live
                      ? (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                          e,
                          h
                        ))
                      : ((e.levelRetry = !1),
                        (e.errorAction = this.getLevelSwitchAction(e, h))));
                  case w.LEVEL_LOAD_ERROR:
                  case w.LEVEL_LOAD_TIMEOUT:
                    return void (
                      "number" == typeof (null == s ? void 0 : s.level) &&
                      (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                        e,
                        s.level
                      ))
                    );
                  case w.AUDIO_TRACK_LOAD_ERROR:
                  case w.AUDIO_TRACK_LOAD_TIMEOUT:
                  case w.SUBTITLE_LOAD_ERROR:
                  case w.SUBTITLE_TRACK_LOAD_TIMEOUT:
                    if (s) {
                      var l = a.levels[a.loadLevel];
                      if (
                        l &&
                        ((s.type === ae && l.hasAudioGroup(s.groupId)) ||
                          (s.type === se && l.hasSubtitleGroup(s.groupId)))
                      )
                        return (
                          (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                            e,
                            a.loadLevel
                          )),
                          (e.errorAction.action = 2),
                          void (e.errorAction.flags = 1)
                        );
                    }
                    return;
                  case w.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                    var A = a.levels[a.loadLevel],
                      d = null == A ? void 0 : A.attrs["HDCP-LEVEL"];
                    return void (d
                      ? (e.errorAction = { action: 2, flags: 2, hdcpLevel: d })
                      : this.keySystemError(e));
                  case w.BUFFER_ADD_CODEC_ERROR:
                  case w.REMUX_ALLOC_ERROR:
                  case w.BUFFER_APPEND_ERROR:
                    return void (e.errorAction = this.getLevelSwitchAction(
                      e,
                      null != (r = e.level) ? r : a.loadLevel
                    ));
                  case w.INTERNAL_EXCEPTION:
                  case w.BUFFER_APPENDING_ERROR:
                  case w.BUFFER_FULL_ERROR:
                  case w.LEVEL_SWITCH_ERROR:
                  case w.BUFFER_STALLED_ERROR:
                  case w.BUFFER_SEEK_OVER_HOLE:
                  case w.BUFFER_NUDGE_ON_STALL:
                    return void (e.errorAction = { action: 0, flags: 0 });
                }
                e.type === x.KEY_SYSTEM_ERROR && this.keySystemError(e);
              }
            }),
            (e.keySystemError = function (t) {
              var e = this.getVariantLevelIndex(t.frag);
              (t.levelRetry = !1),
                (t.errorAction = this.getLevelSwitchAction(t, e));
            }),
            (e.getPlaylistRetryOrSwitchAction = function (t, e) {
              var i = Te(this.hls.config.playlistLoadPolicy, t),
                r = this.playlistError++;
              if (Pe(i, r, Le(t), t.response))
                return { action: 5, flags: 0, retryConfig: i, retryCount: r };
              var a = this.getLevelSwitchAction(t, e);
              return i && ((a.retryConfig = i), (a.retryCount = r)), a;
            }),
            (e.getFragRetryOrSwitchAction = function (t) {
              var e = this.hls,
                i = this.getVariantLevelIndex(t.frag),
                r = e.levels[i],
                a = e.config,
                s = a.fragLoadPolicy,
                n = a.keyLoadPolicy,
                o = Te(t.details.startsWith("key") ? n : s, t),
                h = e.levels.reduce(function (t, e) {
                  return t + e.fragmentError;
                }, 0);
              if (
                r &&
                (t.details !== w.FRAG_GAP && r.fragmentError++,
                Pe(o, h, Le(t), t.response))
              )
                return { action: 5, flags: 0, retryConfig: o, retryCount: h };
              var l = this.getLevelSwitchAction(t, i);
              return o && ((l.retryConfig = o), (l.retryCount = h)), l;
            }),
            (e.getLevelSwitchAction = function (t, e) {
              var i = this.hls;
              null == e && (e = i.loadLevel);
              var r = this.hls.levels[e];
              if (r) {
                var a,
                  s,
                  n = t.details;
                r.loadError++, n === w.BUFFER_APPEND_ERROR && r.fragmentError++;
                var o = -1,
                  h = i.levels,
                  l = i.loadLevel,
                  A = i.minAutoLevel,
                  d = i.maxAutoLevel;
                i.autoLevelEnabled || (i.loadLevel = -1);
                for (
                  var u,
                    c = null == (a = t.frag) ? void 0 : a.type,
                    g =
                      ((c === oe && n === w.FRAG_PARSING_ERROR) ||
                        ("audio" === t.sourceBufferName &&
                          (n === w.BUFFER_ADD_CODEC_ERROR ||
                            n === w.BUFFER_APPEND_ERROR))) &&
                      h.some(function (t) {
                        var e = t.audioCodec;
                        return r.audioCodec !== e;
                      }),
                    f =
                      "video" === t.sourceBufferName &&
                      (n === w.BUFFER_ADD_CODEC_ERROR ||
                        n === w.BUFFER_APPEND_ERROR) &&
                      h.some(function (t) {
                        var e = t.codecSet,
                          i = t.audioCodec;
                        return r.codecSet !== e && r.audioCodec === i;
                      }),
                    p = null != (s = t.context) ? s : {},
                    m = p.type,
                    v = p.groupId,
                    E = function () {
                      var e = (y + l) % h.length;
                      if (e !== l && e >= A && e <= d && 0 === h[e].loadError) {
                        var i,
                          a,
                          s = h[e];
                        if (n === w.FRAG_GAP && t.frag) {
                          var u = h[e].details;
                          if (u) {
                            var p = Ne(t.frag, u.fragments, t.frag.start);
                            if (null != p && p.gap) return 0;
                          }
                        } else {
                          if (
                            (m === ae && s.hasAudioGroup(v)) ||
                            (m === se && s.hasSubtitleGroup(v))
                          )
                            return 0;
                          if (
                            (c === oe &&
                              null != (i = r.audioGroups) &&
                              i.some(function (t) {
                                return s.hasAudioGroup(t);
                              })) ||
                            (c === he &&
                              null != (a = r.subtitleGroups) &&
                              a.some(function (t) {
                                return s.hasSubtitleGroup(t);
                              })) ||
                            (g && r.audioCodec === s.audioCodec) ||
                            (!g && r.audioCodec !== s.audioCodec) ||
                            (f && r.codecSet === s.codecSet)
                          )
                            return 0;
                        }
                        return (o = e), 1;
                      }
                    },
                    y = h.length;
                  y-- && (0 === (u = E()) || 1 !== u);

                );
                if (o > -1 && i.loadLevel !== o)
                  return (
                    (t.levelRetry = !0),
                    (this.playlistError = 0),
                    { action: 2, flags: 0, nextAutoLevel: o }
                  );
              }
              return { action: 2, flags: 1 };
            }),
            (e.onErrorOut = function (t, e) {
              var i;
              switch (null == (i = e.errorAction) ? void 0 : i.action) {
                case 0:
                  break;
                case 2:
                  this.sendAlternateToPenaltyBox(e),
                    e.errorAction.resolved || e.details === w.FRAG_GAP
                      ? /MediaSource readyState: ended/.test(e.error.message) &&
                        (this.warn(
                          'MediaSource ended after "' +
                            e.sourceBufferName +
                            '" sourceBuffer append error. Attempting to recover from media error.'
                        ),
                        this.hls.recoverMediaError())
                      : (e.fatal = !0);
              }
              e.fatal && this.hls.stopLoad();
            }),
            (e.sendAlternateToPenaltyBox = function (t) {
              var e = this.hls,
                i = t.errorAction;
              if (i) {
                var r = i.flags,
                  a = i.hdcpLevel,
                  s = i.nextAutoLevel;
                switch (r) {
                  case 0:
                    this.switchLevel(t, s);
                    break;
                  case 2:
                    a &&
                      ((e.maxHdcpLevel = Ie[Ie.indexOf(a) - 1]),
                      (i.resolved = !0)),
                      this.warn(
                        'Restricting playback to HDCP-LEVEL of "' +
                          e.maxHdcpLevel +
                          '" or lower'
                      );
                }
                i.resolved || this.switchLevel(t, s);
              }
            }),
            (e.switchLevel = function (t, e) {
              void 0 !== e &&
                t.errorAction &&
                (this.warn("switching to level " + e + " after " + t.details),
                (this.hls.nextAutoLevel = e),
                (t.errorAction.resolved = !0),
                (this.hls.nextLoadLevel = this.hls.nextAutoLevel));
            }),
            t
          );
        })(),
        je = (function () {
          function t(t, e) {
            (this.hls = void 0),
              (this.timer = -1),
              (this.requestScheduled = -1),
              (this.canLoad = !1),
              (this.log = void 0),
              (this.warn = void 0),
              (this.log = R.log.bind(R, e + ":")),
              (this.warn = R.warn.bind(R, e + ":")),
              (this.hls = t);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.clearTimer(), (this.hls = this.log = this.warn = null);
            }),
            (e.clearTimer = function () {
              -1 !== this.timer &&
                (self.clearTimeout(this.timer), (this.timer = -1));
            }),
            (e.startLoad = function () {
              (this.canLoad = !0),
                (this.requestScheduled = -1),
                this.loadPlaylist();
            }),
            (e.stopLoad = function () {
              (this.canLoad = !1), this.clearTimer();
            }),
            (e.switchParams = function (t, e) {
              var i = null == e ? void 0 : e.renditionReports;
              if (i) {
                for (var r = -1, a = 0; a < i.length; a++) {
                  var s = i[a],
                    n = void 0;
                  try {
                    n = new self.URL(s.URI, e.url).href;
                  } catch (d) {
                    R.warn(
                      "Could not construct new URL for Rendition Report: " + d
                    ),
                      (n = s.URI || "");
                  }
                  if (n === t) {
                    r = a;
                    break;
                  }
                  n === t.substring(0, n.length) && (r = a);
                }
                if (-1 !== r) {
                  var o = i[r],
                    h =
                      parseInt(o["LAST-MSN"]) ||
                      (null == e ? void 0 : e.lastPartSn),
                    l =
                      parseInt(o["LAST-PART"]) ||
                      (null == e ? void 0 : e.lastPartIndex);
                  if (this.hls.config.lowLatencyMode) {
                    var A = Math.min(e.age - e.partTarget, e.targetduration);
                    l >= 0 && A > e.partTarget && (l += 1);
                  }
                  return new Be(h, l >= 0 ? l : void 0, "");
                }
              }
            }),
            (e.loadPlaylist = function (t) {
              -1 === this.requestScheduled &&
                (this.requestScheduled = self.performance.now());
            }),
            (e.shouldLoadPlaylist = function (t) {
              return (
                this.canLoad && !!t && !!t.url && (!t.details || t.details.live)
              );
            }),
            (e.shouldReloadPlaylist = function (t) {
              return (
                -1 === this.timer &&
                -1 === this.requestScheduled &&
                this.shouldLoadPlaylist(t)
              );
            }),
            (e.playlistLoaded = function (t, e, i) {
              var r = this,
                a = e.details,
                s = e.stats,
                n = self.performance.now(),
                h = s.loading.first ? Math.max(0, n - s.loading.first) : 0;
              if (
                ((a.advancedDateTime = Date.now() - h),
                a.live || (null != i && i.live))
              ) {
                if (
                  (a.reloaded(i),
                  i &&
                    this.log(
                      "live playlist " +
                        t +
                        " " +
                        (a.advanced
                          ? "REFRESHED " + a.lastPartSn + "-" + a.lastPartIndex
                          : a.updated
                          ? "UPDATED"
                          : "MISSED")
                    ),
                  i &&
                    a.fragments.length > 0 &&
                    (function (t, e) {
                      for (
                        var i = null, r = t.fragments, a = r.length - 1;
                        a >= 0;
                        a--
                      ) {
                        var s = r[a].initSegment;
                        if (s) {
                          i = s;
                          break;
                        }
                      }
                      t.fragmentHint && delete t.fragmentHint.endPTS;
                      var n,
                        h,
                        l,
                        A,
                        d,
                        u = 0;
                      if (
                        ((function (t, e, i) {
                          for (
                            var r = e.skippedSegments,
                              a = Math.max(t.startSN, e.startSN) - e.startSN,
                              s =
                                (t.fragmentHint ? 1 : 0) +
                                (r ? e.endSN : Math.min(t.endSN, e.endSN)) -
                                e.startSN,
                              n = e.startSN - t.startSN,
                              o = e.fragmentHint
                                ? e.fragments.concat(e.fragmentHint)
                                : e.fragments,
                              h = t.fragmentHint
                                ? t.fragments.concat(t.fragmentHint)
                                : t.fragments,
                              l = a;
                            l <= s;
                            l++
                          ) {
                            var A = h[n + l],
                              d = o[l];
                            r && !d && l < r && (d = e.fragments[l] = A),
                              A && d && i(A, d);
                          }
                        })(t, e, function (t, r) {
                          t.relurl && (u = t.cc - r.cc),
                            I(t.startPTS) &&
                              I(t.endPTS) &&
                              ((r.start = r.startPTS = t.startPTS),
                              (r.startDTS = t.startDTS),
                              (r.maxStartPTS = t.maxStartPTS),
                              (r.endPTS = t.endPTS),
                              (r.endDTS = t.endDTS),
                              (r.minEndPTS = t.minEndPTS),
                              (r.duration = t.endPTS - t.startPTS),
                              r.duration && (n = r),
                              (e.PTSKnown = e.alignedSliding = !0)),
                            (r.elementaryStreams = t.elementaryStreams),
                            (r.loader = t.loader),
                            (r.stats = t.stats),
                            t.initSegment &&
                              ((r.initSegment = t.initSegment),
                              (i = t.initSegment));
                        }),
                        i &&
                          (e.fragmentHint
                            ? e.fragments.concat(e.fragmentHint)
                            : e.fragments
                          ).forEach(function (t) {
                            var e;
                            !t ||
                              (t.initSegment &&
                                t.initSegment.relurl !==
                                  (null == (e = i) ? void 0 : e.relurl)) ||
                              (t.initSegment = i);
                          }),
                        e.skippedSegments)
                      )
                        if (
                          ((e.deltaUpdateFailed = e.fragments.some(function (
                            t
                          ) {
                            return !t;
                          })),
                          e.deltaUpdateFailed)
                        ) {
                          R.warn(
                            "[level-helper] Previous playlist missing segments skipped in delta playlist"
                          );
                          for (var c = e.skippedSegments; c--; )
                            e.fragments.shift();
                          (e.startSN = e.fragments[0].sn),
                            (e.startCC = e.fragments[0].cc);
                        } else
                          e.canSkipDateRanges &&
                            (e.dateRanges =
                              ((h = t.dateRanges),
                              (l = e.dateRanges),
                              (A = e.recentlyRemovedDateranges),
                              (d = o({}, h)),
                              A &&
                                A.forEach(function (t) {
                                  delete d[t];
                                }),
                              Object.keys(l).forEach(function (t) {
                                var e = new P(l[t].attr, d[t]);
                                e.isValid
                                  ? (d[t] = e)
                                  : R.warn(
                                      'Ignoring invalid Playlist Delta Update DATERANGE tag: "' +
                                        JSON.stringify(l[t].attr) +
                                        '"'
                                    );
                              }),
                              d));
                      var g = e.fragments;
                      if (u) {
                        R.warn(
                          "discontinuity sliding from playlist, take drift into account"
                        );
                        for (var f = 0; f < g.length; f++) g[f].cc += u;
                      }
                      e.skippedSegments && (e.startCC = e.fragments[0].cc),
                        (function (t, e, i) {
                          if (t && e)
                            for (var r = 0, a = 0, s = t.length; a <= s; a++) {
                              var n = t[a],
                                o = e[a + r];
                              n &&
                              o &&
                              n.index === o.index &&
                              n.fragment.sn === o.fragment.sn
                                ? i(n, o)
                                : r--;
                            }
                        })(t.partList, e.partList, function (t, e) {
                          (e.elementaryStreams = t.elementaryStreams),
                            (e.stats = t.stats);
                        }),
                        n
                          ? Qe(e, n, n.startPTS, n.endPTS, n.startDTS, n.endDTS)
                          : Se(t, e),
                        g.length && (e.totalduration = e.edge - g[0].start),
                        (e.driftStartTime = t.driftStartTime),
                        (e.driftStart = t.driftStart);
                      var p = e.advancedDateTime;
                      if (e.advanced && p) {
                        var m = e.edge;
                        e.driftStart ||
                          ((e.driftStartTime = p), (e.driftStart = m)),
                          (e.driftEndTime = p),
                          (e.driftEnd = m);
                      } else
                        (e.driftEndTime = t.driftEndTime),
                          (e.driftEnd = t.driftEnd),
                          (e.advancedDateTime = t.advancedDateTime);
                    })(i, a),
                  !this.canLoad || !a.live)
                )
                  return;
                var l,
                  A = void 0,
                  d = void 0;
                if (a.canBlockReload && a.endSN && a.advanced) {
                  var u = this.hls.config.lowLatencyMode,
                    c = a.lastPartSn,
                    g = a.endSN,
                    f = a.lastPartIndex,
                    p = c === g;
                  -1 !== f
                    ? ((A = p ? g + 1 : c), (d = p ? (u ? 0 : f) : f + 1))
                    : (A = g + 1);
                  var m = a.age,
                    v = m + a.ageHeader,
                    E = Math.min(v - a.partTarget, 1.5 * a.targetduration);
                  if (E > 0) {
                    if (i && E > i.tuneInGoal)
                      this.warn(
                        "CDN Tune-in goal increased from: " +
                          i.tuneInGoal +
                          " to: " +
                          E +
                          " with playlist age: " +
                          a.age
                      ),
                        (E = 0);
                    else {
                      var y = Math.floor(E / a.targetduration);
                      (A += y),
                        void 0 !== d &&
                          (d += Math.round(
                            (E % a.targetduration) / a.partTarget
                          )),
                        this.log(
                          "CDN Tune-in age: " +
                            a.ageHeader +
                            "s last advanced " +
                            m.toFixed(2) +
                            "s goal: " +
                            E +
                            " skip sn " +
                            y +
                            " to part " +
                            d
                        );
                    }
                    a.tuneInGoal = E;
                  }
                  if (
                    ((l = this.getDeliveryDirectives(
                      a,
                      e.deliveryDirectives,
                      A,
                      d
                    )),
                    u || !p)
                  )
                    return void this.loadPlaylist(l);
                } else
                  (a.canBlockReload || a.canSkipUntil) &&
                    (l = this.getDeliveryDirectives(
                      a,
                      e.deliveryDirectives,
                      A,
                      d
                    ));
                var C = this.hls.mainForwardBufferInfo,
                  B = C ? C.end - C.len : 0,
                  k = (function (t, e) {
                    void 0 === e && (e = 1 / 0);
                    var i = 1e3 * t.targetduration;
                    if (t.updated) {
                      var r = t.fragments;
                      if (r.length && 4 * i > e) {
                        var a = 1e3 * r[r.length - 1].duration;
                        a < i && (i = a);
                      }
                    } else i /= 2;
                    return Math.round(i);
                  })(a, 1e3 * (a.edge - B));
                a.updated &&
                  n > this.requestScheduled + k &&
                  (this.requestScheduled = s.loading.start),
                  void 0 !== A && a.canBlockReload
                    ? (this.requestScheduled =
                        s.loading.first + k - (1e3 * a.partTarget || 1e3))
                    : -1 === this.requestScheduled ||
                      this.requestScheduled + k < n
                    ? (this.requestScheduled = n)
                    : this.requestScheduled - n <= 0 &&
                      (this.requestScheduled += k);
                var x = this.requestScheduled - n;
                (x = Math.max(0, x)),
                  this.log(
                    "reload live playlist " + t + " in " + Math.round(x) + " ms"
                  ),
                  (this.timer = self.setTimeout(function () {
                    return r.loadPlaylist(l);
                  }, x));
              } else this.clearTimer();
            }),
            (e.getDeliveryDirectives = function (t, e, i, r) {
              var a,
                s,
                n,
                o,
                h,
                l =
                  ((s = i),
                  (n = (a = t).canSkipUntil),
                  (o = a.canSkipDateRanges),
                  (h = a.endSN),
                  n && (void 0 !== s ? s - h : 0) < n
                    ? o
                      ? "v2"
                      : "YES"
                    : "");
              return (
                null != e &&
                  e.skip &&
                  t.deltaUpdateFailed &&
                  ((i = e.msn), (r = e.part), (l = "")),
                new Be(i, r, l)
              );
            }),
            (e.checkRetry = function (t) {
              var e = this,
                i = t.details,
                r = Le(t),
                a = t.errorAction,
                s = a || {},
                n = s.action,
                o = s.retryCount,
                h = void 0 === o ? 0 : o,
                l = s.retryConfig,
                A = !!a && !!l && (5 === n || (!a.resolved && 2 === n));
              if (A) {
                var d;
                if (((this.requestScheduled = -1), h >= l.maxNumRetry))
                  return !1;
                if (r && null != (d = t.context) && d.deliveryDirectives)
                  this.warn(
                    "Retrying playlist loading " +
                      (h + 1) +
                      "/" +
                      l.maxNumRetry +
                      ' after "' +
                      i +
                      '" without delivery-directives'
                  ),
                    this.loadPlaylist();
                else {
                  var u = Me(l, h);
                  (this.timer = self.setTimeout(function () {
                    return e.loadPlaylist();
                  }, u)),
                    this.warn(
                      "Retrying playlist loading " +
                        (h + 1) +
                        "/" +
                        l.maxNumRetry +
                        ' after "' +
                        i +
                        '" in ' +
                        u +
                        "ms"
                    );
                }
                (t.levelRetry = !0), (a.resolved = !0);
              }
              return A;
            }),
            t
          );
        })(),
        Ye = (function () {
          function t(t, e, i) {
            void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              (this.halfLife = void 0),
              (this.alpha_ = void 0),
              (this.estimate_ = void 0),
              (this.totalWeight_ = void 0),
              (this.halfLife = t),
              (this.alpha_ = t ? Math.exp(Math.log(0.5) / t) : 0),
              (this.estimate_ = e),
              (this.totalWeight_ = i);
          }
          var e = t.prototype;
          return (
            (e.sample = function (t, e) {
              var i = Math.pow(this.alpha_, t);
              (this.estimate_ = e * (1 - i) + i * this.estimate_),
                (this.totalWeight_ += t);
            }),
            (e.getTotalWeight = function () {
              return this.totalWeight_;
            }),
            (e.getEstimate = function () {
              if (this.alpha_) {
                var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                if (t) return this.estimate_ / t;
              }
              return this.estimate_;
            }),
            t
          );
        })(),
        He = (function () {
          function t(t, e, i, r) {
            void 0 === r && (r = 100),
              (this.defaultEstimate_ = void 0),
              (this.minWeight_ = void 0),
              (this.minDelayMs_ = void 0),
              (this.slow_ = void 0),
              (this.fast_ = void 0),
              (this.defaultTTFB_ = void 0),
              (this.ttfb_ = void 0),
              (this.defaultEstimate_ = i),
              (this.minWeight_ = 0.001),
              (this.minDelayMs_ = 50),
              (this.slow_ = new Ye(t)),
              (this.fast_ = new Ye(e)),
              (this.defaultTTFB_ = r),
              (this.ttfb_ = new Ye(t));
          }
          var e = t.prototype;
          return (
            (e.update = function (t, e) {
              var i = this.slow_,
                r = this.fast_,
                a = this.ttfb_;
              i.halfLife !== t &&
                (this.slow_ = new Ye(t, i.getEstimate(), i.getTotalWeight())),
                r.halfLife !== e &&
                  (this.fast_ = new Ye(e, r.getEstimate(), r.getTotalWeight())),
                a.halfLife !== t &&
                  (this.ttfb_ = new Ye(t, a.getEstimate(), a.getTotalWeight()));
            }),
            (e.sample = function (t, e) {
              var i = (t = Math.max(t, this.minDelayMs_)) / 1e3,
                r = (8 * e) / i;
              this.fast_.sample(i, r), this.slow_.sample(i, r);
            }),
            (e.sampleTTFB = function (t) {
              var e = t / 1e3,
                i = Math.sqrt(2) * Math.exp(-Math.pow(e, 2) / 2);
              this.ttfb_.sample(i, Math.max(t, 5));
            }),
            (e.canEstimate = function () {
              return this.fast_.getTotalWeight() >= this.minWeight_;
            }),
            (e.getEstimate = function () {
              return this.canEstimate()
                ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate())
                : this.defaultEstimate_;
            }),
            (e.getEstimateTTFB = function () {
              return this.ttfb_.getTotalWeight() >= this.minWeight_
                ? this.ttfb_.getEstimate()
                : this.defaultTTFB_;
            }),
            (e.destroy = function () {}),
            t
          );
        })();
      function Ve(t, e) {
        R.log('[abr] start candidates with "' + t + '" ignored because ' + e);
      }
      var Ke = (function () {
          function t(t) {
            var e = this;
            (this.hls = void 0),
              (this.lastLevelLoadSec = 0),
              (this.lastLoadedFragLevel = -1),
              (this.firstSelection = -1),
              (this._nextAutoLevel = -1),
              (this.nextAutoLevelKey = ""),
              (this.audioTracksByGroup = null),
              (this.codecTiers = null),
              (this.timer = -1),
              (this.fragCurrent = null),
              (this.partCurrent = null),
              (this.bitrateTestDelay = 0),
              (this.bwEstimator = void 0),
              (this._abandonRulesCheck = function () {
                var t = e.fragCurrent,
                  i = e.partCurrent,
                  r = e.hls,
                  a = r.autoLevelEnabled,
                  s = r.media;
                if (t && s) {
                  var n = performance.now(),
                    o = i ? i.stats : t.stats,
                    h = i ? i.duration : t.duration,
                    l = n - o.loading.start,
                    A = r.minAutoLevel;
                  if (
                    o.aborted ||
                    (o.loaded && o.loaded === o.total) ||
                    t.level <= A
                  )
                    return e.clearTimer(), void (e._nextAutoLevel = -1);
                  if (a && !s.paused && s.playbackRate && s.readyState) {
                    var d = r.mainForwardBufferInfo;
                    if (null !== d) {
                      var u = e.bwEstimator.getEstimateTTFB(),
                        c = Math.abs(s.playbackRate);
                      if (!(l <= Math.max(u, (h / (2 * c)) * 1e3))) {
                        var g = d.len / c,
                          f = o.loading.first
                            ? o.loading.first - o.loading.start
                            : -1,
                          p = o.loaded && f > -1,
                          m = e.getBwEstimate(),
                          v = r.levels,
                          E = v[t.level],
                          y =
                            o.total ||
                            Math.max(
                              o.loaded,
                              Math.round((h * E.maxBitrate) / 8)
                            ),
                          C = p ? l - f : l;
                        C < 1 && p && (C = Math.min(l, (8 * o.loaded) / m));
                        var B = p ? (1e3 * o.loaded) / C : 0,
                          x = B ? (y - o.loaded) / B : (8 * y) / m + u / 1e3;
                        if (!(x <= g)) {
                          var w,
                            Q = B ? 8 * B : m,
                            S = Number.POSITIVE_INFINITY;
                          for (w = t.level - 1; w > A; w--) {
                            var b = v[w].maxBitrate;
                            if (
                              (S = e.getTimeToLoadFrag(
                                u / 1e3,
                                Q,
                                h * b,
                                !v[w].details
                              )) < g
                            )
                              break;
                          }
                          if (!(S >= x || S > 10 * h)) {
                            (r.nextLoadLevel = r.nextAutoLevel = w),
                              p
                                ? e.bwEstimator.sample(
                                    l - Math.min(u, f),
                                    o.loaded
                                  )
                                : e.bwEstimator.sampleTTFB(l);
                            var D = v[w].bitrate;
                            e.getBwEstimate() *
                              e.hls.config.abrBandWidthUpFactor >
                              D && e.resetEstimator(D),
                              e.clearTimer(),
                              R.warn(
                                "[abr] Fragment " +
                                  t.sn +
                                  (i ? " part " + i.index : "") +
                                  " of level " +
                                  t.level +
                                  " is loading too slowly;\n      Time to underbuffer: " +
                                  g.toFixed(3) +
                                  " s\n      Estimated load time for current fragment: " +
                                  x.toFixed(3) +
                                  " s\n      Estimated load time for down switch fragment: " +
                                  S.toFixed(3) +
                                  " s\n      TTFB estimate: " +
                                  (0 | f) +
                                  " ms\n      Current BW estimate: " +
                                  (I(m) ? 0 | m : "Unknown") +
                                  " bps\n      New BW estimate: " +
                                  (0 | e.getBwEstimate()) +
                                  " bps\n      Switching to level " +
                                  w +
                                  " @ " +
                                  (0 | D) +
                                  " bps"
                              ),
                              r.trigger(k.FRAG_LOAD_EMERGENCY_ABORTED, {
                                frag: t,
                                part: i,
                                stats: o,
                              });
                          }
                        }
                      }
                    }
                  }
                }
              }),
              (this.hls = t),
              (this.bwEstimator = this.initEstimator()),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.resetEstimator = function (t) {
              t &&
                (R.log("setting initial bwe to " + t),
                (this.hls.config.abrEwmaDefaultEstimate = t)),
                (this.firstSelection = -1),
                (this.bwEstimator = this.initEstimator());
            }),
            (e.initEstimator = function () {
              var t = this.hls.config;
              return new He(
                t.abrEwmaSlowVoD,
                t.abrEwmaFastVoD,
                t.abrEwmaDefaultEstimate
              );
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(k.FRAG_LOADING, this.onFragLoading, this),
                t.on(k.FRAG_LOADED, this.onFragLoaded, this),
                t.on(k.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(k.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(k.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(
                  k.MAX_AUTO_LEVEL_UPDATED,
                  this.onMaxAutoLevelUpdated,
                  this
                ),
                t.on(k.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(k.FRAG_LOADING, this.onFragLoading, this),
                t.off(k.FRAG_LOADED, this.onFragLoaded, this),
                t.off(k.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(k.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(k.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(
                  k.MAX_AUTO_LEVEL_UPDATED,
                  this.onMaxAutoLevelUpdated,
                  this
                ),
                t.off(k.ERROR, this.onError, this));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.clearTimer(),
                (this.hls = this._abandonRulesCheck = null),
                (this.fragCurrent = this.partCurrent = null);
            }),
            (e.onManifestLoading = function (t, e) {
              (this.lastLoadedFragLevel = -1),
                (this.firstSelection = -1),
                (this.lastLevelLoadSec = 0),
                (this.fragCurrent = this.partCurrent = null),
                this.onLevelsUpdated(),
                this.clearTimer();
            }),
            (e.onLevelsUpdated = function () {
              this.lastLoadedFragLevel > -1 &&
                this.fragCurrent &&
                (this.lastLoadedFragLevel = this.fragCurrent.level),
                (this._nextAutoLevel = -1),
                this.onMaxAutoLevelUpdated(),
                (this.codecTiers = null),
                (this.audioTracksByGroup = null);
            }),
            (e.onMaxAutoLevelUpdated = function () {
              (this.firstSelection = -1), (this.nextAutoLevelKey = "");
            }),
            (e.onFragLoading = function (t, e) {
              var i,
                r = e.frag;
              this.ignoreFragment(r) ||
                (r.bitrateTest ||
                  ((this.fragCurrent = r),
                  (this.partCurrent = null != (i = e.part) ? i : null)),
                this.clearTimer(),
                (this.timer = self.setInterval(this._abandonRulesCheck, 100)));
            }),
            (e.onLevelSwitching = function (t, e) {
              this.clearTimer();
            }),
            (e.onError = function (t, e) {
              if (!e.fatal)
                switch (e.details) {
                  case w.BUFFER_ADD_CODEC_ERROR:
                  case w.BUFFER_APPEND_ERROR:
                    (this.lastLoadedFragLevel = -1), (this.firstSelection = -1);
                    break;
                  case w.FRAG_LOAD_TIMEOUT:
                    var i = e.frag,
                      r = this.fragCurrent,
                      a = this.partCurrent;
                    if (i && r && i.sn === r.sn && i.level === r.level) {
                      var s = performance.now(),
                        n = a ? a.stats : i.stats,
                        o = s - n.loading.start,
                        h = n.loading.first
                          ? n.loading.first - n.loading.start
                          : -1;
                      if (n.loaded && h > -1) {
                        var l = this.bwEstimator.getEstimateTTFB();
                        this.bwEstimator.sample(o - Math.min(l, h), n.loaded);
                      } else this.bwEstimator.sampleTTFB(o);
                    }
                }
            }),
            (e.getTimeToLoadFrag = function (t, e, i, r) {
              return t + i / e + (r ? this.lastLevelLoadSec : 0);
            }),
            (e.onLevelLoaded = function (t, e) {
              var i = this.hls.config,
                r = e.stats.loading,
                a = r.end - r.start;
              I(a) && (this.lastLevelLoadSec = a / 1e3),
                e.details.live
                  ? this.bwEstimator.update(
                      i.abrEwmaSlowLive,
                      i.abrEwmaFastLive
                    )
                  : this.bwEstimator.update(i.abrEwmaSlowVoD, i.abrEwmaFastVoD);
            }),
            (e.onFragLoaded = function (t, e) {
              var i = e.frag,
                r = e.part,
                a = r ? r.stats : i.stats;
              if (
                (i.type === ne &&
                  this.bwEstimator.sampleTTFB(
                    a.loading.first - a.loading.start
                  ),
                !this.ignoreFragment(i))
              ) {
                if (
                  (this.clearTimer(),
                  i.level === this._nextAutoLevel && (this._nextAutoLevel = -1),
                  (this.firstSelection = -1),
                  this.hls.config.abrMaxWithRealBitrate)
                ) {
                  var s = r ? r.duration : i.duration,
                    n = this.hls.levels[i.level],
                    o = (n.loaded ? n.loaded.bytes : 0) + a.loaded,
                    h = (n.loaded ? n.loaded.duration : 0) + s;
                  (n.loaded = { bytes: o, duration: h }),
                    (n.realBitrate = Math.round((8 * o) / h));
                }
                if (i.bitrateTest) {
                  var l = { stats: a, frag: i, part: r, id: i.type };
                  this.onFragBuffered(k.FRAG_BUFFERED, l), (i.bitrateTest = !1);
                } else this.lastLoadedFragLevel = i.level;
              }
            }),
            (e.onFragBuffered = function (t, e) {
              var i = e.frag,
                r = e.part,
                a = null != r && r.stats.loaded ? r.stats : i.stats;
              if (!a.aborted && !this.ignoreFragment(i)) {
                var s =
                  a.parsing.end -
                  a.loading.start -
                  Math.min(
                    a.loading.first - a.loading.start,
                    this.bwEstimator.getEstimateTTFB()
                  );
                this.bwEstimator.sample(s, a.loaded),
                  (a.bwEstimate = this.getBwEstimate()),
                  i.bitrateTest
                    ? (this.bitrateTestDelay = s / 1e3)
                    : (this.bitrateTestDelay = 0);
              }
            }),
            (e.ignoreFragment = function (t) {
              return t.type !== ne || "initSegment" === t.sn;
            }),
            (e.clearTimer = function () {
              this.timer > -1 &&
                (self.clearInterval(this.timer), (this.timer = -1));
            }),
            (e.getAutoLevelKey = function () {
              var t;
              return (
                this.getBwEstimate() +
                "_" +
                (null == (t = this.hls.mainForwardBufferInfo) ? void 0 : t.len)
              );
            }),
            (e.getNextABRAutoLevel = function () {
              var t = this.fragCurrent,
                e = this.partCurrent,
                i = this.hls,
                r = i.maxAutoLevel,
                a = i.config,
                s = i.minAutoLevel,
                n = i.media,
                o = e ? e.duration : t ? t.duration : 0,
                h = n && 0 !== n.playbackRate ? Math.abs(n.playbackRate) : 1,
                l = this.getBwEstimate(),
                A = i.mainForwardBufferInfo,
                d = (A ? A.len : 0) / h,
                u = a.abrBandWidthFactor,
                c = a.abrBandWidthUpFactor;
              if (d) {
                var g = this.findBestLevel(l, s, r, d, 0, u, c);
                if (g >= 0) return g;
              }
              var f = o
                ? Math.min(o, a.maxStarvationDelay)
                : a.maxStarvationDelay;
              if (!d) {
                var p = this.bitrateTestDelay;
                p &&
                  ((f =
                    (o ? Math.min(o, a.maxLoadingDelay) : a.maxLoadingDelay) -
                    p),
                  R.info(
                    "[abr] bitrate test took " +
                      Math.round(1e3 * p) +
                      "ms, set first fragment max fetchDuration to " +
                      Math.round(1e3 * f) +
                      " ms"
                  ),
                  (u = c = 1));
              }
              var m = this.findBestLevel(l, s, r, d, f, u, c);
              if (
                (R.info(
                  "[abr] " +
                    (d ? "rebuffering expected" : "buffer is empty") +
                    ", optimal quality level " +
                    m
                ),
                m > -1)
              )
                return m;
              var v = i.levels[s],
                E = i.levels[i.loadLevel];
              return (null == v ? void 0 : v.bitrate) <
                (null == E ? void 0 : E.bitrate)
                ? s
                : i.loadLevel;
            }),
            (e.getBwEstimate = function () {
              return this.bwEstimator.canEstimate()
                ? this.bwEstimator.getEstimate()
                : this.hls.config.abrEwmaDefaultEstimate;
            }),
            (e.findBestLevel = function (t, e, i, r, a, s, n) {
              var o,
                h = this,
                l = r + a,
                A = this.lastLoadedFragLevel,
                d = -1 === A ? this.hls.firstLevel : A,
                u = this.fragCurrent,
                c = this.partCurrent,
                g = this.hls,
                f = g.levels,
                p = g.allAudioTracks,
                m = g.loadLevel,
                v = g.config;
              if (1 === f.length) return 0;
              var E,
                y = f[d],
                C = !(null == y || null == (o = y.details) || !o.live),
                B = -1 === m || -1 === A,
                k = "SDR",
                x = (null == y ? void 0 : y.frameRate) || 0,
                w = v.audioPreference,
                Q = v.videoPreference,
                S =
                  this.audioTracksByGroup ||
                  (this.audioTracksByGroup = p.reduce(
                    function (t, e) {
                      var i = t.groups[e.groupId];
                      i ||
                        (i = t.groups[e.groupId] =
                          {
                            tracks: [],
                            channels: { 2: 0 },
                            hasDefault: !1,
                            hasAutoSelect: !1,
                          }),
                        i.tracks.push(e);
                      var r = e.channels || "2";
                      return (
                        (i.channels[r] = (i.channels[r] || 0) + 1),
                        (i.hasDefault = i.hasDefault || e.default),
                        (i.hasAutoSelect = i.hasAutoSelect || e.autoselect),
                        i.hasDefault && (t.hasDefaultAudio = !0),
                        i.hasAutoSelect && (t.hasAutoSelectAudio = !0),
                        t
                      );
                    },
                    { hasDefaultAudio: !1, hasAutoSelectAudio: !1, groups: {} }
                  ));
              if (B) {
                if (-1 !== this.firstSelection) return this.firstSelection;
                var b =
                    this.codecTiers ||
                    (this.codecTiers = (function (t, e, i, r) {
                      return t.slice(i, r + 1).reduce(function (t, i) {
                        if (!i.codecSet) return t;
                        var r = i.audioGroups,
                          a = t[i.codecSet];
                        a ||
                          (t[i.codecSet] = a =
                            {
                              minBitrate: 1 / 0,
                              minHeight: 1 / 0,
                              minFramerate: 1 / 0,
                              maxScore: 0,
                              videoRanges: { SDR: 0 },
                              channels: { 2: 0 },
                              hasDefaultAudio: !r,
                              fragmentError: 0,
                            }),
                          (a.minBitrate = Math.min(a.minBitrate, i.bitrate));
                        var s = Math.min(i.height, i.width);
                        return (
                          (a.minHeight = Math.min(a.minHeight, s)),
                          (a.minFramerate = Math.min(
                            a.minFramerate,
                            i.frameRate
                          )),
                          (a.maxScore = Math.max(a.maxScore, i.score)),
                          (a.fragmentError += i.fragmentError),
                          (a.videoRanges[i.videoRange] =
                            (a.videoRanges[i.videoRange] || 0) + 1),
                          r &&
                            r.forEach(function (t) {
                              if (t) {
                                var i = e.groups[t];
                                (a.hasDefaultAudio =
                                  a.hasDefaultAudio || e.hasDefaultAudio
                                    ? i.hasDefault
                                    : i.hasAutoSelect ||
                                      (!e.hasDefaultAudio &&
                                        !e.hasAutoSelectAudio)),
                                  Object.keys(i.channels).forEach(function (t) {
                                    a.channels[t] =
                                      (a.channels[t] || 0) + i.channels[t];
                                  });
                              }
                            }),
                          t
                        );
                      }, {});
                    })(f, S, e, i)),
                  D = (function (t, e, i, r, a) {
                    for (
                      var s = Object.keys(t),
                        n = null == r ? void 0 : r.channels,
                        o = null == r ? void 0 : r.audioCodec,
                        h = n && 2 === parseInt(n),
                        l = !0,
                        A = !1,
                        d = 1 / 0,
                        u = 1 / 0,
                        c = 1 / 0,
                        g = 0,
                        f = [],
                        p = (function (t, e) {
                          var i = !1,
                            r = [];
                          return (
                            t && ((i = "SDR" !== t), (r = [t])),
                            e &&
                              ((r = e.allowedVideoRanges || Ce.slice(0)),
                              (r = (i =
                                void 0 !== e.preferHDR
                                  ? e.preferHDR
                                  : (function () {
                                      if ("function" == typeof matchMedia) {
                                        var t = matchMedia(
                                            "(dynamic-range: high)"
                                          ),
                                          e = matchMedia("bad query");
                                        if (t.media !== e.media)
                                          return !0 === t.matches;
                                      }
                                      return !1;
                                    })())
                                ? r.filter(function (t) {
                                    return "SDR" !== t;
                                  })
                                : ["SDR"])),
                            { preferHDR: i, allowedVideoRanges: r }
                          );
                        })(e, a),
                        m = p.preferHDR,
                        v = p.allowedVideoRanges,
                        E = function () {
                          var e = t[s[y]];
                          (l = e.channels[2] > 0),
                            (d = Math.min(d, e.minHeight)),
                            (u = Math.min(u, e.minFramerate)),
                            (c = Math.min(c, e.minBitrate));
                          var i = v.filter(function (t) {
                            return e.videoRanges[t] > 0;
                          });
                          i.length > 0 && ((A = !0), (f = i));
                        },
                        y = s.length;
                      y--;

                    )
                      E();
                    (d = I(d) ? d : 0), (u = I(u) ? u : 0);
                    var C = Math.max(1080, d),
                      B = Math.max(30, u);
                    return (
                      (c = I(c) ? c : i),
                      (i = Math.max(c, i)),
                      A || ((e = void 0), (f = [])),
                      {
                        codecSet: s.reduce(function (e, r) {
                          var a = t[r];
                          if (r === e) return e;
                          if (a.minBitrate > i)
                            return (
                              Ve(
                                r,
                                "min bitrate of " +
                                  a.minBitrate +
                                  " > current estimate of " +
                                  i
                              ),
                              e
                            );
                          if (!a.hasDefaultAudio)
                            return (
                              Ve(
                                r,
                                "no renditions with default or auto-select sound found"
                              ),
                              e
                            );
                          if (o && r.indexOf(o.substring(0, 4)) % 5 != 0)
                            return (
                              Ve(
                                r,
                                'audio codec preference "' + o + '" not found'
                              ),
                              e
                            );
                          if (n && !h) {
                            if (!a.channels[n])
                              return (
                                Ve(
                                  r,
                                  "no renditions with " +
                                    n +
                                    " channel sound found (channels options: " +
                                    Object.keys(a.channels) +
                                    ")"
                                ),
                                e
                              );
                          } else if ((!o || h) && l && 0 === a.channels[2]) return Ve(r, "no renditions with stereo sound found"), e;
                          return a.minHeight > C
                            ? (Ve(
                                r,
                                "min resolution of " +
                                  a.minHeight +
                                  " > maximum of " +
                                  C
                              ),
                              e)
                            : a.minFramerate > B
                            ? (Ve(
                                r,
                                "min framerate of " +
                                  a.minFramerate +
                                  " > maximum of " +
                                  B
                              ),
                              e)
                            : f.some(function (t) {
                                return a.videoRanges[t] > 0;
                              })
                            ? a.maxScore < g
                              ? (Ve(
                                  r,
                                  "max score of " +
                                    a.maxScore +
                                    " < selected max of " +
                                    g
                                ),
                                e)
                              : e &&
                                (Nt(r) >= Nt(e) ||
                                  a.fragmentError > t[e].fragmentError)
                              ? e
                              : ((g = a.maxScore), r)
                            : (Ve(
                                r,
                                "no variants with VIDEO-RANGE of " +
                                  JSON.stringify(f) +
                                  " found"
                              ),
                              e);
                        }, void 0),
                        videoRanges: f,
                        preferHDR: m,
                        minFramerate: u,
                        minBitrate: c,
                      }
                    );
                  })(b, k, t, w, Q),
                  L = D.codecSet,
                  T = D.videoRanges,
                  M = D.minFramerate,
                  F = D.minBitrate,
                  P = D.preferHDR;
                (E = L),
                  (k = P ? T[T.length - 1] : T[0]),
                  (x = M),
                  (t = Math.max(t, F)),
                  R.log("[abr] picked start tier " + JSON.stringify(D));
              } else
                (E = null == y ? void 0 : y.codecSet),
                  (k = null == y ? void 0 : y.videoRange);
              for (
                var _,
                  N = c ? c.duration : u ? u.duration : 0,
                  U = this.bwEstimator.getEstimateTTFB() / 1e3,
                  G = [],
                  O = function () {
                    var e,
                      o,
                      u = f[j],
                      g = j > d;
                    if (!u) return 0;
                    if (
                      (E && u.codecSet !== E) ||
                      (k && u.videoRange !== k) ||
                      (g && x > u.frameRate) ||
                      (!g && x > 0 && x < u.frameRate) ||
                      null == (e = u.supportedResult) ||
                      null == (o = e.decodingInfoResults) ||
                      !o[0].smooth
                    )
                      return G.push(j), 0;
                    var p,
                      v = u.details,
                      w =
                        (c
                          ? null == v
                            ? void 0
                            : v.partTarget
                          : null == v
                          ? void 0
                          : v.averagetargetduration) || N;
                    p = g ? n * t : s * t;
                    var Q =
                        N && r >= 2 * N && 0 === a
                          ? f[j].averageBitrate
                          : f[j].maxBitrate,
                      S = h.getTimeToLoadFrag(U, p, Q * w, void 0 === v);
                    if (
                      p >= Q &&
                      (j === A ||
                        (0 === u.loadError && 0 === u.fragmentError)) &&
                      (S <= U || !I(S) || (C && !h.bitrateTestDelay) || S < l)
                    ) {
                      var b = h.forcedAutoLevel;
                      return (
                        j === m ||
                          (-1 !== b && b === m) ||
                          (G.length &&
                            R.trace(
                              "[abr] Skipped level(s) " +
                                G.join(",") +
                                " of " +
                                i +
                                ' max with CODECS and VIDEO-RANGE:"' +
                                f[G[0]].codecs +
                                '" ' +
                                f[G[0]].videoRange +
                                '; not compatible with "' +
                                y.codecs +
                                '" ' +
                                k
                            ),
                          R.info(
                            "[abr] switch candidate:" +
                              d +
                              "->" +
                              j +
                              " adjustedbw(" +
                              Math.round(p) +
                              ")-bitrate=" +
                              Math.round(p - Q) +
                              " ttfb:" +
                              U.toFixed(1) +
                              " avgDuration:" +
                              w.toFixed(1) +
                              " maxFetchDuration:" +
                              l.toFixed(1) +
                              " fetchDuration:" +
                              S.toFixed(1) +
                              " firstSelection:" +
                              B +
                              " codecSet:" +
                              E +
                              " videoRange:" +
                              k +
                              " hls.loadLevel:" +
                              m
                          )),
                        B && (h.firstSelection = j),
                        { v: j }
                      );
                    }
                  },
                  j = i;
                j >= e;
                j--
              )
                if (0 !== (_ = O()) && _) return _.v;
              return -1;
            }),
            n(t, [
              {
                key: "firstAutoLevel",
                get: function () {
                  var t = this.hls,
                    e = t.maxAutoLevel,
                    i = t.minAutoLevel,
                    r = this.getBwEstimate(),
                    a = this.hls.config.maxStarvationDelay,
                    s = this.findBestLevel(r, i, e, 0, a, 1, 1);
                  if (s > -1) return s;
                  var n = this.hls.firstLevel,
                    o = Math.min(Math.max(n, i), e);
                  return (
                    R.warn(
                      "[abr] Could not find best starting auto level. Defaulting to first in playlist " +
                        n +
                        " clamped to " +
                        o
                    ),
                    o
                  );
                },
              },
              {
                key: "forcedAutoLevel",
                get: function () {
                  return this.nextAutoLevelKey ? -1 : this._nextAutoLevel;
                },
              },
              {
                key: "nextAutoLevel",
                get: function () {
                  var t = this.forcedAutoLevel,
                    e = this.bwEstimator.canEstimate(),
                    i = this.lastLoadedFragLevel > -1;
                  if (
                    !(
                      -1 === t ||
                      (e &&
                        i &&
                        this.nextAutoLevelKey !== this.getAutoLevelKey())
                    )
                  )
                    return t;
                  var r =
                    e && i ? this.getNextABRAutoLevel() : this.firstAutoLevel;
                  if (-1 !== t) {
                    var a = this.hls.levels;
                    if (
                      a.length > Math.max(t, r) &&
                      a[t].loadError <= a[r].loadError
                    )
                      return t;
                  }
                  return (
                    (this._nextAutoLevel = r),
                    (this.nextAutoLevelKey = this.getAutoLevelKey()),
                    r
                  );
                },
                set: function (t) {
                  var e = Math.max(this.hls.minAutoLevel, t);
                  this._nextAutoLevel != e &&
                    ((this.nextAutoLevelKey = ""), (this._nextAutoLevel = e));
                },
              },
            ]),
            t
          );
        })(),
        ze = {
          length: 0,
          start: function () {
            return 0;
          },
          end: function () {
            return 0;
          },
        },
        qe = (function () {
          function t() {}
          return (
            (t.isBuffered = function (e, i) {
              try {
                if (e)
                  for (var r = t.getBuffered(e), a = 0; a < r.length; a++)
                    if (i >= r.start(a) && i <= r.end(a)) return !0;
              } catch (s) {}
              return !1;
            }),
            (t.bufferInfo = function (e, i, r) {
              try {
                if (e) {
                  var a,
                    s = t.getBuffered(e),
                    n = [];
                  for (a = 0; a < s.length; a++)
                    n.push({ start: s.start(a), end: s.end(a) });
                  return this.bufferedInfo(n, i, r);
                }
              } catch (o) {}
              return { len: 0, start: i, end: i, nextStart: void 0 };
            }),
            (t.bufferedInfo = function (t, e, i) {
              (e = Math.max(0, e)),
                t.sort(function (t, e) {
                  return t.start - e.start || e.end - t.end;
                });
              var r = [];
              if (i)
                for (var a = 0; a < t.length; a++) {
                  var s = r.length;
                  if (s) {
                    var n = r[s - 1].end;
                    t[a].start - n < i
                      ? t[a].end > n && (r[s - 1].end = t[a].end)
                      : r.push(t[a]);
                  } else r.push(t[a]);
                }
              else r = t;
              for (var o, h = 0, l = e, A = e, d = 0; d < r.length; d++) {
                var u = r[d].start,
                  c = r[d].end;
                if (e + i >= u && e < c) (l = u), (h = (A = c) - e);
                else if (e + i < u) {
                  o = u;
                  break;
                }
              }
              return { len: h, start: l || 0, end: A || 0, nextStart: o };
            }),
            (t.getBuffered = function (t) {
              try {
                return t.buffered;
              } catch (e) {
                return R.log("failed to get media.buffered", e), ze;
              }
            }),
            t
          );
        })(),
        We = (function () {
          function t(t) {
            (this.buffers = void 0),
              (this.queues = { video: [], audio: [], audiovideo: [] }),
              (this.buffers = t);
          }
          var e = t.prototype;
          return (
            (e.append = function (t, e, i) {
              var r = this.queues[e];
              r.push(t), 1 !== r.length || i || this.executeNext(e);
            }),
            (e.insertAbort = function (t, e) {
              this.queues[e].unshift(t), this.executeNext(e);
            }),
            (e.appendBlocker = function (t) {
              var e,
                i = new Promise(function (t) {
                  e = t;
                }),
                r = {
                  execute: e,
                  onStart: function () {},
                  onComplete: function () {},
                  onError: function () {},
                };
              return this.append(r, t), i;
            }),
            (e.executeNext = function (t) {
              var e = this.queues[t];
              if (e.length) {
                var i = e[0];
                try {
                  i.execute();
                } catch (a) {
                  R.warn(
                    '[buffer-operation-queue]: Exception executing "' +
                      t +
                      '" SourceBuffer operation: ' +
                      a
                  ),
                    i.onError(a);
                  var r = this.buffers[t];
                  (null != r && r.updating) || this.shiftAndExecuteNext(t);
                }
              }
            }),
            (e.shiftAndExecuteNext = function (t) {
              this.queues[t].shift(), this.executeNext(t);
            }),
            (e.current = function (t) {
              return this.queues[t][0];
            }),
            t
          );
        })(),
        Je = /(avc[1234]|hvc1|hev1|dvh[1e]|vp09|av01)(?:\.[^.,]+)+/,
        Ze = (function () {
          function t(t) {
            var e = this;
            (this.details = null),
              (this._objectUrl = null),
              (this.operationQueue = void 0),
              (this.listeners = void 0),
              (this.hls = void 0),
              (this.bufferCodecEventsExpected = 0),
              (this._bufferCodecEventsTotal = 0),
              (this.media = null),
              (this.mediaSource = null),
              (this.lastMpegAudioChunk = null),
              (this.appendSource = void 0),
              (this.appendErrors = { audio: 0, video: 0, audiovideo: 0 }),
              (this.tracks = {}),
              (this.pendingTracks = {}),
              (this.sourceBuffer = void 0),
              (this.log = void 0),
              (this.warn = void 0),
              (this.error = void 0),
              (this._onEndStreaming = function (t) {
                e.hls && e.hls.pauseBuffering();
              }),
              (this._onStartStreaming = function (t) {
                e.hls && e.hls.resumeBuffering();
              }),
              (this._onMediaSourceOpen = function () {
                var t = e.media,
                  i = e.mediaSource;
                e.log("Media source opened"),
                  t &&
                    (t.removeEventListener("emptied", e._onMediaEmptied),
                    e.updateMediaElementDuration(),
                    e.hls.trigger(k.MEDIA_ATTACHED, {
                      media: t,
                      mediaSource: i,
                    })),
                  i &&
                    i.removeEventListener("sourceopen", e._onMediaSourceOpen),
                  e.checkPendingTracks();
              }),
              (this._onMediaSourceClose = function () {
                e.log("Media source closed");
              }),
              (this._onMediaSourceEnded = function () {
                e.log("Media source ended");
              }),
              (this._onMediaEmptied = function () {
                var t = e.mediaSrc,
                  i = e._objectUrl;
                t !== i &&
                  R.error(
                    "Media element src was set while attaching MediaSource (" +
                      i +
                      " > " +
                      t +
                      ")"
                  );
              }),
              (this.hls = t);
            var i = "[buffer-controller]";
            (this.appendSource = t.config.preferManagedMediaSource),
              (this.log = R.log.bind(R, i)),
              (this.warn = R.warn.bind(R, i)),
              (this.error = R.error.bind(R, i)),
              this._initSourceBuffer(),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.hasSourceTypes = function () {
              return (
                this.getSourceBufferTypes().length > 0 ||
                Object.keys(this.pendingTracks).length > 0
              );
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                (this.details = null),
                (this.lastMpegAudioChunk = null),
                (this.hls = null);
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(k.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(k.BUFFER_RESET, this.onBufferReset, this),
                t.on(k.BUFFER_APPENDING, this.onBufferAppending, this),
                t.on(k.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(k.BUFFER_EOS, this.onBufferEos, this),
                t.on(k.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(k.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.on(k.FRAG_PARSED, this.onFragParsed, this),
                t.on(k.FRAG_CHANGED, this.onFragChanged, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t.off(k.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(k.BUFFER_RESET, this.onBufferReset, this),
                t.off(k.BUFFER_APPENDING, this.onBufferAppending, this),
                t.off(k.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(k.BUFFER_EOS, this.onBufferEos, this),
                t.off(k.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(k.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.off(k.FRAG_PARSED, this.onFragParsed, this),
                t.off(k.FRAG_CHANGED, this.onFragChanged, this);
            }),
            (e._initSourceBuffer = function () {
              (this.sourceBuffer = {}),
                (this.operationQueue = new We(this.sourceBuffer)),
                (this.listeners = { audio: [], video: [], audiovideo: [] }),
                (this.appendErrors = { audio: 0, video: 0, audiovideo: 0 }),
                (this.lastMpegAudioChunk = null);
            }),
            (e.onManifestLoading = function () {
              (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal =
                0),
                (this.details = null);
            }),
            (e.onManifestParsed = function (t, e) {
              (e.audio && !e.video) || e.altAudio,
                (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal =
                  1),
                this.log(
                  this.bufferCodecEventsExpected +
                    " bufferCodec event(s) expected"
                );
            }),
            (e.onMediaAttaching = function (t, e) {
              var i,
                r,
                a,
                s = (this.media = e.media),
                n = Lt(this.appendSource);
              if (s && n) {
                var o,
                  h = (this.mediaSource = new n());
                this.log(
                  "created media source: " +
                    (null == (o = h.constructor) ? void 0 : o.name)
                ),
                  h.addEventListener("sourceopen", this._onMediaSourceOpen),
                  h.addEventListener("sourceended", this._onMediaSourceEnded),
                  h.addEventListener("sourceclose", this._onMediaSourceClose),
                  h.addEventListener("startstreaming", this._onStartStreaming),
                  h.addEventListener("endstreaming", this._onEndStreaming);
                var l = (this._objectUrl = self.URL.createObjectURL(h));
                if (this.appendSource)
                  try {
                    s.removeAttribute("src");
                    var A = self.ManagedMediaSource;
                    (s.disableRemotePlayback =
                      s.disableRemotePlayback || (A && h instanceof A)),
                      Xe(s),
                      (i = s),
                      (r = l),
                      ((a = self.document.createElement("source")).type =
                        "video/mp4"),
                      (a.src = r),
                      i.appendChild(a),
                      s.load();
                  } catch (i) {
                    s.src = l;
                  }
                else s.src = l;
                s.addEventListener("emptied", this._onMediaEmptied);
              }
            }),
            (e.onMediaDetaching = function () {
              var t = this.media,
                e = this.mediaSource,
                i = this._objectUrl;
              if (e) {
                if (
                  (this.log("media source detaching"), "open" === e.readyState)
                )
                  try {
                    e.endOfStream();
                  } catch (r) {
                    this.warn(
                      "onMediaDetaching: " +
                        r.message +
                        " while calling endOfStream"
                    );
                  }
                this.onBufferReset(),
                  e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                  e.removeEventListener(
                    "sourceended",
                    this._onMediaSourceEnded
                  ),
                  e.removeEventListener(
                    "sourceclose",
                    this._onMediaSourceClose
                  ),
                  e.removeEventListener(
                    "startstreaming",
                    this._onStartStreaming
                  ),
                  e.removeEventListener("endstreaming", this._onEndStreaming),
                  t &&
                    (t.removeEventListener("emptied", this._onMediaEmptied),
                    i && self.URL.revokeObjectURL(i),
                    this.mediaSrc === i
                      ? (t.removeAttribute("src"),
                        this.appendSource && Xe(t),
                        t.load())
                      : this.warn(
                          "media|source.src was changed by a third party - skip cleanup"
                        )),
                  (this.mediaSource = null),
                  (this.media = null),
                  (this._objectUrl = null),
                  (this.bufferCodecEventsExpected =
                    this._bufferCodecEventsTotal),
                  (this.pendingTracks = {}),
                  (this.tracks = {});
              }
              this.hls.trigger(k.MEDIA_DETACHED, void 0);
            }),
            (e.onBufferReset = function () {
              var t = this;
              this.getSourceBufferTypes().forEach(function (e) {
                t.resetBuffer(e);
              }),
                this._initSourceBuffer();
            }),
            (e.resetBuffer = function (t) {
              var e = this.sourceBuffer[t];
              try {
                var i;
                e &&
                  (this.removeBufferListeners(t),
                  (this.sourceBuffer[t] = void 0),
                  null != (i = this.mediaSource) &&
                    i.sourceBuffers.length &&
                    this.mediaSource.removeSourceBuffer(e));
              } catch (r) {
                this.warn("onBufferReset " + t, r);
              }
            }),
            (e.onBufferCodecs = function (t, e) {
              var i = this,
                r = this.getSourceBufferTypes().length,
                a = Object.keys(e);
              if (
                (a.forEach(function (t) {
                  if (r) {
                    var a = i.tracks[t];
                    if (a && "function" == typeof a.buffer.changeType) {
                      var s,
                        n = e[t],
                        o = n.id,
                        h = n.codec,
                        l = n.levelCodec,
                        A = n.container,
                        d = n.metadata,
                        u = jt(a.codec, a.levelCodec),
                        c = null == u ? void 0 : u.replace(Je, "$1"),
                        g = jt(h, l),
                        f = null == (s = g) ? void 0 : s.replace(Je, "$1");
                      if (g && c !== f) {
                        "audio" === t.slice(0, 5) &&
                          (g = Ot(g, i.hls.config.preferManagedMediaSource));
                        var p = A + ";codecs=" + g;
                        i.appendChangeType(t, p),
                          i.log("switching codec " + u + " to " + g),
                          (i.tracks[t] = {
                            buffer: a.buffer,
                            codec: h,
                            container: A,
                            levelCodec: l,
                            metadata: d,
                            id: o,
                          });
                      }
                    }
                  } else i.pendingTracks[t] = e[t];
                }),
                !r)
              ) {
                var s = Math.max(this.bufferCodecEventsExpected - 1, 0);
                this.bufferCodecEventsExpected !== s &&
                  (this.log(
                    s + " bufferCodec event(s) expected " + a.join(",")
                  ),
                  (this.bufferCodecEventsExpected = s)),
                  this.mediaSource &&
                    "open" === this.mediaSource.readyState &&
                    this.checkPendingTracks();
              }
            }),
            (e.appendChangeType = function (t, e) {
              var i = this,
                r = this.operationQueue,
                a = {
                  execute: function () {
                    var a = i.sourceBuffer[t];
                    a &&
                      (i.log("changing " + t + " sourceBuffer type to " + e),
                      a.changeType(e)),
                      r.shiftAndExecuteNext(t);
                  },
                  onStart: function () {},
                  onComplete: function () {},
                  onError: function (e) {
                    i.warn("Failed to change " + t + " SourceBuffer type", e);
                  },
                };
              r.append(a, t, !!this.pendingTracks[t]);
            }),
            (e.onBufferAppending = function (t, e) {
              var i = this,
                r = this.hls,
                a = this.operationQueue,
                s = this.tracks,
                n = e.data,
                o = e.type,
                h = e.frag,
                l = e.part,
                A = e.chunkMeta,
                d = A.buffering[o],
                u = self.performance.now();
              d.start = u;
              var c = h.stats.buffering,
                g = l ? l.stats.buffering : null;
              0 === c.start && (c.start = u),
                g && 0 === g.start && (g.start = u);
              var f = s.audio,
                p = !1;
              "audio" === o &&
                "audio/mpeg" === (null == f ? void 0 : f.container) &&
                ((p =
                  !this.lastMpegAudioChunk ||
                  1 === A.id ||
                  this.lastMpegAudioChunk.sn !== A.sn),
                (this.lastMpegAudioChunk = A));
              var m = h.start,
                v = {
                  execute: function () {
                    if (((d.executeStart = self.performance.now()), p)) {
                      var t = i.sourceBuffer[o];
                      if (t) {
                        var e = m - t.timestampOffset;
                        Math.abs(e) >= 0.1 &&
                          (i.log(
                            "Updating audio SourceBuffer timestampOffset to " +
                              m +
                              " (delta: " +
                              e +
                              ") sn: " +
                              h.sn +
                              ")"
                          ),
                          (t.timestampOffset = m));
                      }
                    }
                    i.appendExecutor(n, o);
                  },
                  onStart: function () {},
                  onComplete: function () {
                    var t = self.performance.now();
                    (d.executeEnd = d.end = t),
                      0 === c.first && (c.first = t),
                      g && 0 === g.first && (g.first = t);
                    var e = i.sourceBuffer,
                      r = {};
                    for (var a in e) r[a] = qe.getBuffered(e[a]);
                    (i.appendErrors[o] = 0),
                      "audio" === o || "video" === o
                        ? (i.appendErrors.audiovideo = 0)
                        : ((i.appendErrors.audio = 0),
                          (i.appendErrors.video = 0)),
                      i.hls.trigger(k.BUFFER_APPENDED, {
                        type: o,
                        frag: h,
                        part: l,
                        chunkMeta: A,
                        parent: h.type,
                        timeRanges: r,
                      });
                  },
                  onError: function (t) {
                    var e = {
                      type: x.MEDIA_ERROR,
                      parent: h.type,
                      details: w.BUFFER_APPEND_ERROR,
                      sourceBufferName: o,
                      frag: h,
                      part: l,
                      chunkMeta: A,
                      error: t,
                      err: t,
                      fatal: !1,
                    };
                    if (t.code === DOMException.QUOTA_EXCEEDED_ERR)
                      e.details = w.BUFFER_FULL_ERROR;
                    else {
                      var a = ++i.appendErrors[o];
                      (e.details = w.BUFFER_APPEND_ERROR),
                        i.warn(
                          "Failed " +
                            a +
                            "/" +
                            r.config.appendErrorMaxRetry +
                            ' times to append segment in "' +
                            o +
                            '" sourceBuffer'
                        ),
                        a >= r.config.appendErrorMaxRetry && (e.fatal = !0);
                    }
                    r.trigger(k.ERROR, e);
                  },
                };
              a.append(v, o, !!this.pendingTracks[o]);
            }),
            (e.onBufferFlushing = function (t, e) {
              var i = this,
                r = this.operationQueue,
                a = function (t) {
                  return {
                    execute: i.removeExecutor.bind(
                      i,
                      t,
                      e.startOffset,
                      e.endOffset
                    ),
                    onStart: function () {},
                    onComplete: function () {
                      i.hls.trigger(k.BUFFER_FLUSHED, { type: t });
                    },
                    onError: function (e) {
                      i.warn("Failed to remove from " + t + " SourceBuffer", e);
                    },
                  };
                };
              e.type
                ? r.append(a(e.type), e.type)
                : this.getSourceBufferTypes().forEach(function (t) {
                    r.append(a(t), t);
                  });
            }),
            (e.onFragParsed = function (t, e) {
              var i = this,
                r = e.frag,
                a = e.part,
                s = [],
                n = a ? a.elementaryStreams : r.elementaryStreams;
              n[G]
                ? s.push("audiovideo")
                : (n[N] && s.push("audio"), n[U] && s.push("video")),
                0 === s.length &&
                  this.warn(
                    "Fragments must have at least one ElementaryStreamType set. type: " +
                      r.type +
                      " level: " +
                      r.level +
                      " sn: " +
                      r.sn
                  ),
                this.blockBuffers(function () {
                  var t = self.performance.now();
                  (r.stats.buffering.end = t), a && (a.stats.buffering.end = t);
                  var e = a ? a.stats : r.stats;
                  i.hls.trigger(k.FRAG_BUFFERED, {
                    frag: r,
                    part: a,
                    stats: e,
                    id: r.type,
                  });
                }, s);
            }),
            (e.onFragChanged = function (t, e) {
              this.trimBuffers();
            }),
            (e.onBufferEos = function (t, e) {
              var i = this;
              this.getSourceBufferTypes().reduce(function (t, r) {
                var a = i.sourceBuffer[r];
                return (
                  !a ||
                    (e.type && e.type !== r) ||
                    ((a.ending = !0),
                    a.ended ||
                      ((a.ended = !0), i.log(r + " sourceBuffer now EOS"))),
                  t && !(a && !a.ended)
                );
              }, !0) &&
                (this.log("Queueing mediaSource.endOfStream()"),
                this.blockBuffers(function () {
                  i.getSourceBufferTypes().forEach(function (t) {
                    var e = i.sourceBuffer[t];
                    e && (e.ending = !1);
                  });
                  var t = i.mediaSource;
                  t && "open" === t.readyState
                    ? (i.log("Calling mediaSource.endOfStream()"),
                      t.endOfStream())
                    : t &&
                      i.log(
                        "Could not call mediaSource.endOfStream(). mediaSource.readyState: " +
                          t.readyState
                      );
                }));
            }),
            (e.onLevelUpdated = function (t, e) {
              var i = e.details;
              i.fragments.length &&
                ((this.details = i),
                this.getSourceBufferTypes().length
                  ? this.blockBuffers(
                      this.updateMediaElementDuration.bind(this)
                    )
                  : this.updateMediaElementDuration());
            }),
            (e.trimBuffers = function () {
              var t = this.hls,
                e = this.details,
                i = this.media;
              if (i && null !== e && this.getSourceBufferTypes().length) {
                var r = t.config,
                  a = i.currentTime,
                  s = e.levelTargetDuration,
                  n =
                    e.live && null !== r.liveBackBufferLength
                      ? r.liveBackBufferLength
                      : r.backBufferLength;
                if (I(n) && n > 0) {
                  var o = Math.max(n, s),
                    h = Math.floor(a / s) * s - o;
                  this.flushBackBuffer(a, s, h);
                }
                if (
                  I(r.frontBufferFlushThreshold) &&
                  r.frontBufferFlushThreshold > 0
                ) {
                  var l = Math.max(
                      r.maxBufferLength,
                      r.frontBufferFlushThreshold
                    ),
                    A = Math.max(l, s),
                    d = Math.floor(a / s) * s + A;
                  this.flushFrontBuffer(a, s, d);
                }
              }
            }),
            (e.flushBackBuffer = function (t, e, i) {
              var r = this,
                a = this.details,
                s = this.sourceBuffer;
              this.getSourceBufferTypes().forEach(function (n) {
                var o = s[n];
                if (o) {
                  var h = qe.getBuffered(o);
                  if (h.length > 0 && i > h.start(0)) {
                    if (
                      (r.hls.trigger(k.BACK_BUFFER_REACHED, { bufferEnd: i }),
                      null != a && a.live)
                    )
                      r.hls.trigger(k.LIVE_BACK_BUFFER_REACHED, {
                        bufferEnd: i,
                      });
                    else if (o.ended && h.end(h.length - 1) - t < 2 * e)
                      return void r.log(
                        "Cannot flush " +
                          n +
                          " back buffer while SourceBuffer is in ended state"
                      );
                    r.hls.trigger(k.BUFFER_FLUSHING, {
                      startOffset: 0,
                      endOffset: i,
                      type: n,
                    });
                  }
                }
              });
            }),
            (e.flushFrontBuffer = function (t, e, i) {
              var r = this,
                a = this.sourceBuffer;
              this.getSourceBufferTypes().forEach(function (s) {
                var n = a[s];
                if (n) {
                  var o = qe.getBuffered(n),
                    h = o.length;
                  if (h < 2) return;
                  var l = o.start(h - 1),
                    A = o.end(h - 1);
                  if (i > l || (t >= l && t <= A)) return;
                  if (n.ended && t - A < 2 * e)
                    return void r.log(
                      "Cannot flush " +
                        s +
                        " front buffer while SourceBuffer is in ended state"
                    );
                  r.hls.trigger(k.BUFFER_FLUSHING, {
                    startOffset: l,
                    endOffset: 1 / 0,
                    type: s,
                  });
                }
              });
            }),
            (e.updateMediaElementDuration = function () {
              if (
                this.details &&
                this.media &&
                this.mediaSource &&
                "open" === this.mediaSource.readyState
              ) {
                var t = this.details,
                  e = this.hls,
                  i = this.media,
                  r = this.mediaSource,
                  a = t.fragments[0].start + t.totalduration,
                  s = i.duration,
                  n = I(r.duration) ? r.duration : 0;
                t.live && e.config.liveDurationInfinity
                  ? ((r.duration = 1 / 0), this.updateSeekableRange(t))
                  : ((a > n && a > s) || !I(s)) &&
                    (this.log(
                      "Updating Media Source duration to " + a.toFixed(3)
                    ),
                    (r.duration = a));
              }
            }),
            (e.updateSeekableRange = function (t) {
              var e = this.mediaSource,
                i = t.fragments;
              if (i.length && t.live && null != e && e.setLiveSeekableRange) {
                var r = Math.max(0, i[0].start),
                  a = Math.max(r, r + t.totalduration);
                this.log(
                  "Media Source duration is set to " +
                    e.duration +
                    ". Setting seekable range to " +
                    r +
                    "-" +
                    a +
                    "."
                ),
                  e.setLiveSeekableRange(r, a);
              }
            }),
            (e.checkPendingTracks = function () {
              var t = this.bufferCodecEventsExpected,
                e = this.operationQueue,
                i = this.pendingTracks,
                r = Object.keys(i).length;
              if (r && (!t || 2 === r || "audiovideo" in i)) {
                this.createSourceBuffers(i), (this.pendingTracks = {});
                var a = this.getSourceBufferTypes();
                if (a.length)
                  this.hls.trigger(k.BUFFER_CREATED, { tracks: this.tracks }),
                    a.forEach(function (t) {
                      e.executeNext(t);
                    });
                else {
                  var s = new Error(
                    "could not create source buffer for media codec(s)"
                  );
                  this.hls.trigger(k.ERROR, {
                    type: x.MEDIA_ERROR,
                    details: w.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                    fatal: !0,
                    error: s,
                    reason: s.message,
                  });
                }
              }
            }),
            (e.createSourceBuffers = function (t) {
              var e = this,
                i = this.sourceBuffer,
                r = this.mediaSource;
              if (!r)
                throw Error(
                  "createSourceBuffers called when mediaSource was null"
                );
              var a = function (a) {
                if (!i[a]) {
                  var s = t[a];
                  if (!s)
                    throw Error(
                      "source buffer exists for track " +
                        a +
                        ", however track does not"
                    );
                  var n = s.levelCodec || s.codec;
                  n &&
                    "audio" === a.slice(0, 5) &&
                    (n = Ot(n, e.hls.config.preferManagedMediaSource));
                  var o = s.container + ";codecs=" + n;
                  e.log("creating sourceBuffer(" + o + ")");
                  try {
                    var h = (i[a] = r.addSourceBuffer(o)),
                      l = a;
                    e.addBufferListener(l, "updatestart", e._onSBUpdateStart),
                      e.addBufferListener(l, "updateend", e._onSBUpdateEnd),
                      e.addBufferListener(l, "error", e._onSBUpdateError),
                      e.addBufferListener(l, "bufferedchange", function (t, i) {
                        var r = i.removedRanges;
                        null != r &&
                          r.length &&
                          e.hls.trigger(k.BUFFER_FLUSHED, { type: a });
                      }),
                      (e.tracks[a] = {
                        buffer: h,
                        codec: n,
                        container: s.container,
                        levelCodec: s.levelCodec,
                        metadata: s.metadata,
                        id: s.id,
                      });
                  } catch (A) {
                    e.error(
                      "error while trying to add sourceBuffer: " + A.message
                    ),
                      e.hls.trigger(k.ERROR, {
                        type: x.MEDIA_ERROR,
                        details: w.BUFFER_ADD_CODEC_ERROR,
                        fatal: !1,
                        error: A,
                        sourceBufferName: a,
                        mimeType: o,
                      });
                  }
                }
              };
              for (var s in t) a(s);
            }),
            (e._onSBUpdateStart = function (t) {
              this.operationQueue.current(t).onStart();
            }),
            (e._onSBUpdateEnd = function (t) {
              var e;
              if (
                "closed" !==
                (null == (e = this.mediaSource) ? void 0 : e.readyState)
              ) {
                var i = this.operationQueue;
                i.current(t).onComplete(), i.shiftAndExecuteNext(t);
              } else this.resetBuffer(t);
            }),
            (e._onSBUpdateError = function (t, e) {
              var i,
                r = new Error(
                  t +
                    " SourceBuffer error. MediaSource readyState: " +
                    (null == (i = this.mediaSource) ? void 0 : i.readyState)
                );
              this.error("" + r, e),
                this.hls.trigger(k.ERROR, {
                  type: x.MEDIA_ERROR,
                  details: w.BUFFER_APPENDING_ERROR,
                  sourceBufferName: t,
                  error: r,
                  fatal: !1,
                });
              var a = this.operationQueue.current(t);
              a && a.onError(r);
            }),
            (e.removeExecutor = function (t, e, i) {
              var r = this.media,
                a = this.mediaSource,
                s = this.operationQueue,
                n = this.sourceBuffer[t];
              if (!r || !a || !n)
                return (
                  this.warn(
                    "Attempting to remove from the " +
                      t +
                      " SourceBuffer, but it does not exist"
                  ),
                  void s.shiftAndExecuteNext(t)
                );
              var o = I(r.duration) ? r.duration : 1 / 0,
                h = I(a.duration) ? a.duration : 1 / 0,
                l = Math.max(0, e),
                A = Math.min(i, o, h);
              A > l && (!n.ending || n.ended)
                ? ((n.ended = !1),
                  this.log(
                    "Removing [" +
                      l +
                      "," +
                      A +
                      "] from the " +
                      t +
                      " SourceBuffer"
                  ),
                  n.remove(l, A))
                : s.shiftAndExecuteNext(t);
            }),
            (e.appendExecutor = function (t, e) {
              var i = this.sourceBuffer[e];
              if (i) (i.ended = !1), i.appendBuffer(t);
              else if (!this.pendingTracks[e])
                throw new Error(
                  "Attempting to append to the " +
                    e +
                    " SourceBuffer, but it does not exist"
                );
            }),
            (e.blockBuffers = function (t, e) {
              var i = this;
              if (
                (void 0 === e && (e = this.getSourceBufferTypes()), !e.length)
              )
                return (
                  this.log(
                    "Blocking operation requested, but no SourceBuffers exist"
                  ),
                  void Promise.resolve().then(t)
                );
              var r = this.operationQueue,
                a = e.map(function (t) {
                  return r.appendBlocker(t);
                });
              Promise.all(a).then(function () {
                t(),
                  e.forEach(function (t) {
                    var e = i.sourceBuffer[t];
                    (null != e && e.updating) || r.shiftAndExecuteNext(t);
                  });
              });
            }),
            (e.getSourceBufferTypes = function () {
              return Object.keys(this.sourceBuffer);
            }),
            (e.addBufferListener = function (t, e, i) {
              var r = this.sourceBuffer[t];
              if (r) {
                var a = i.bind(this, t);
                this.listeners[t].push({ event: e, listener: a }),
                  r.addEventListener(e, a);
              }
            }),
            (e.removeBufferListeners = function (t) {
              var e = this.sourceBuffer[t];
              e &&
                this.listeners[t].forEach(function (t) {
                  e.removeEventListener(t.event, t.listener);
                });
            }),
            n(t, [
              {
                key: "mediaSrc",
                get: function () {
                  var t,
                    e =
                      (null == (t = this.media) ? void 0 : t.firstChild) ||
                      this.media;
                  return null == e ? void 0 : e.src;
                },
              },
            ]),
            t
          );
        })();
      function Xe(t) {
        var e = t.querySelectorAll("source");
        [].slice.call(e).forEach(function (e) {
          t.removeChild(e);
        });
      }
      var $e = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.autoLevelCapping = void 0),
              (this.firstLevel = void 0),
              (this.media = void 0),
              (this.restrictedLevels = void 0),
              (this.timer = void 0),
              (this.clientRect = void 0),
              (this.streamController = void 0),
              (this.hls = t),
              (this.autoLevelCapping = Number.POSITIVE_INFINITY),
              (this.firstLevel = -1),
              (this.media = null),
              (this.restrictedLevels = []),
              (this.timer = void 0),
              (this.clientRect = null),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.setStreamController = function (t) {
              this.streamController = t;
            }),
            (e.destroy = function () {
              this.hls && this.unregisterListener(),
                this.timer && this.stopCapping(),
                (this.media = null),
                (this.clientRect = null),
                (this.hls = this.streamController = null);
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(k.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.on(k.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(k.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(k.MEDIA_DETACHING, this.onMediaDetaching, this);
            }),
            (e.unregisterListener = function () {
              var t = this.hls;
              t.off(k.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.off(k.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(k.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(k.MEDIA_DETACHING, this.onMediaDetaching, this);
            }),
            (e.onFpsDropLevelCapping = function (t, e) {
              var i = this.hls.levels[e.droppedLevel];
              this.isLevelAllowed(i) &&
                this.restrictedLevels.push({
                  bitrate: i.bitrate,
                  height: i.height,
                  width: i.width,
                });
            }),
            (e.onMediaAttaching = function (t, e) {
              (this.media =
                e.media instanceof HTMLVideoElement ? e.media : null),
                (this.clientRect = null),
                this.timer && this.hls.levels.length && this.detectPlayerSize();
            }),
            (e.onManifestParsed = function (t, e) {
              var i = this.hls;
              (this.restrictedLevels = []),
                (this.firstLevel = e.firstLevel),
                i.config.capLevelToPlayerSize && e.video && this.startCapping();
            }),
            (e.onLevelsUpdated = function (t, e) {
              this.timer && I(this.autoLevelCapping) && this.detectPlayerSize();
            }),
            (e.onBufferCodecs = function (t, e) {
              this.hls.config.capLevelToPlayerSize &&
                e.video &&
                this.startCapping();
            }),
            (e.onMediaDetaching = function () {
              this.stopCapping();
            }),
            (e.detectPlayerSize = function () {
              if (this.media) {
                if (this.mediaHeight <= 0 || this.mediaWidth <= 0)
                  return void (this.clientRect = null);
                var t = this.hls.levels;
                if (t.length) {
                  var e = this.hls,
                    i = this.getMaxLevel(t.length - 1);
                  i !== this.autoLevelCapping &&
                    R.log(
                      "Setting autoLevelCapping to " +
                        i +
                        ": " +
                        t[i].height +
                        "p@" +
                        t[i].bitrate +
                        " for media " +
                        this.mediaWidth +
                        "x" +
                        this.mediaHeight
                    ),
                    (e.autoLevelCapping = i),
                    e.autoLevelCapping > this.autoLevelCapping &&
                      this.streamController &&
                      this.streamController.nextLevelSwitch(),
                    (this.autoLevelCapping = e.autoLevelCapping);
                }
              }
            }),
            (e.getMaxLevel = function (e) {
              var i = this,
                r = this.hls.levels;
              if (!r.length) return -1;
              var a = r.filter(function (t, r) {
                return i.isLevelAllowed(t) && r <= e;
              });
              return (
                (this.clientRect = null),
                t.getMaxLevelByMediaSize(a, this.mediaWidth, this.mediaHeight)
              );
            }),
            (e.startCapping = function () {
              this.timer ||
                ((this.autoLevelCapping = Number.POSITIVE_INFINITY),
                self.clearInterval(this.timer),
                (this.timer = self.setInterval(
                  this.detectPlayerSize.bind(this),
                  1e3
                )),
                this.detectPlayerSize());
            }),
            (e.stopCapping = function () {
              (this.restrictedLevels = []),
                (this.firstLevel = -1),
                (this.autoLevelCapping = Number.POSITIVE_INFINITY),
                this.timer &&
                  (self.clearInterval(this.timer), (this.timer = void 0));
            }),
            (e.getDimensions = function () {
              if (this.clientRect) return this.clientRect;
              var t = this.media,
                e = { width: 0, height: 0 };
              if (t) {
                var i = t.getBoundingClientRect();
                (e.width = i.width),
                  (e.height = i.height),
                  e.width ||
                    e.height ||
                    ((e.width = i.right - i.left || t.width || 0),
                    (e.height = i.bottom - i.top || t.height || 0));
              }
              return (this.clientRect = e), e;
            }),
            (e.isLevelAllowed = function (t) {
              return !this.restrictedLevels.some(function (e) {
                return (
                  t.bitrate === e.bitrate &&
                  t.width === e.width &&
                  t.height === e.height
                );
              });
            }),
            (t.getMaxLevelByMediaSize = function (t, e, i) {
              if (null == t || !t.length) return -1;
              for (
                var r, a, s = t.length - 1, n = Math.max(e, i), o = 0;
                o < t.length;
                o += 1
              ) {
                var h = t[o];
                if (
                  (h.width >= n || h.height >= n) &&
                  ((r = h),
                  !(a = t[o + 1]) ||
                    r.width !== a.width ||
                    r.height !== a.height)
                ) {
                  s = o;
                  break;
                }
              }
              return s;
            }),
            n(t, [
              {
                key: "mediaWidth",
                get: function () {
                  return this.getDimensions().width * this.contentScaleFactor;
                },
              },
              {
                key: "mediaHeight",
                get: function () {
                  return this.getDimensions().height * this.contentScaleFactor;
                },
              },
              {
                key: "contentScaleFactor",
                get: function () {
                  var t = 1;
                  if (!this.hls.config.ignoreDevicePixelRatio)
                    try {
                      t = self.devicePixelRatio;
                    } catch (e) {}
                  return t;
                },
              },
            ]),
            t
          );
        })(),
        ti = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.isVideoPlaybackQualityAvailable = !1),
              (this.timer = void 0),
              (this.media = null),
              (this.lastTime = void 0),
              (this.lastDroppedFrames = 0),
              (this.lastDecodedFrames = 0),
              (this.streamController = void 0),
              (this.hls = t),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.setStreamController = function (t) {
              this.streamController = t;
            }),
            (e.registerListeners = function () {
              this.hls.on(k.MEDIA_ATTACHING, this.onMediaAttaching, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(k.MEDIA_ATTACHING, this.onMediaAttaching, this);
            }),
            (e.destroy = function () {
              this.timer && clearInterval(this.timer),
                this.unregisterListeners(),
                (this.isVideoPlaybackQualityAvailable = !1),
                (this.media = null);
            }),
            (e.onMediaAttaching = function (t, e) {
              var i = this.hls.config;
              if (i.capLevelOnFPSDrop) {
                var r =
                  e.media instanceof self.HTMLVideoElement ? e.media : null;
                (this.media = r),
                  r &&
                    "function" == typeof r.getVideoPlaybackQuality &&
                    (this.isVideoPlaybackQualityAvailable = !0),
                  self.clearInterval(this.timer),
                  (this.timer = self.setInterval(
                    this.checkFPSInterval.bind(this),
                    i.fpsDroppedMonitoringPeriod
                  ));
              }
            }),
            (e.checkFPS = function (t, e, i) {
              var r = performance.now();
              if (e) {
                if (this.lastTime) {
                  var a = r - this.lastTime,
                    s = i - this.lastDroppedFrames,
                    n = e - this.lastDecodedFrames,
                    o = (1e3 * s) / a,
                    h = this.hls;
                  if (
                    (h.trigger(k.FPS_DROP, {
                      currentDropped: s,
                      currentDecoded: n,
                      totalDroppedFrames: i,
                    }),
                    o > 0 && s > h.config.fpsDroppedMonitoringThreshold * n)
                  ) {
                    var l = h.currentLevel;
                    R.warn(
                      "drop FPS ratio greater than max allowed value for currentLevel: " +
                        l
                    ),
                      l > 0 &&
                        (-1 === h.autoLevelCapping ||
                          h.autoLevelCapping >= l) &&
                        ((l -= 1),
                        h.trigger(k.FPS_DROP_LEVEL_CAPPING, {
                          level: l,
                          droppedLevel: h.currentLevel,
                        }),
                        (h.autoLevelCapping = l),
                        this.streamController.nextLevelSwitch());
                  }
                }
                (this.lastTime = r),
                  (this.lastDroppedFrames = i),
                  (this.lastDecodedFrames = e);
              }
            }),
            (e.checkFPSInterval = function () {
              var t = this.media;
              if (t)
                if (this.isVideoPlaybackQualityAvailable) {
                  var e = t.getVideoPlaybackQuality();
                  this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames);
                } else
                  this.checkFPS(
                    t,
                    t.webkitDecodedFrameCount,
                    t.webkitDroppedFrameCount
                  );
            }),
            t
          );
        })(),
        ei = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.log = void 0),
              (this.loader = null),
              (this.uri = null),
              (this.pathwayId = "."),
              (this.pathwayPriority = null),
              (this.timeToLoad = 300),
              (this.reloadTimer = -1),
              (this.updated = 0),
              (this.started = !1),
              (this.enabled = !0),
              (this.levels = null),
              (this.audioTracks = null),
              (this.subtitleTracks = null),
              (this.penalizedPathways = {}),
              (this.hls = t),
              (this.log = R.log.bind(R, "[content-steering]:")),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(k.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(k.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(k.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(k.ERROR, this.onError, this));
            }),
            (e.startLoad = function () {
              if (
                ((this.started = !0),
                this.clearTimeout(),
                this.enabled && this.uri)
              ) {
                if (this.updated) {
                  var t =
                    1e3 * this.timeToLoad - (performance.now() - this.updated);
                  if (t > 0) return void this.scheduleRefresh(this.uri, t);
                }
                this.loadSteeringManifest(this.uri);
              }
            }),
            (e.stopLoad = function () {
              (this.started = !1),
                this.loader && (this.loader.destroy(), (this.loader = null)),
                this.clearTimeout();
            }),
            (e.clearTimeout = function () {
              -1 !== this.reloadTimer &&
                (self.clearTimeout(this.reloadTimer), (this.reloadTimer = -1));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.stopLoad(),
                (this.hls = null),
                (this.levels = this.audioTracks = this.subtitleTracks = null);
            }),
            (e.removeLevel = function (t) {
              var e = this.levels;
              e &&
                (this.levels = e.filter(function (e) {
                  return e !== t;
                }));
            }),
            (e.onManifestLoading = function () {
              this.stopLoad(),
                (this.enabled = !0),
                (this.timeToLoad = 300),
                (this.updated = 0),
                (this.uri = null),
                (this.pathwayId = "."),
                (this.levels = this.audioTracks = this.subtitleTracks = null);
            }),
            (e.onManifestLoaded = function (t, e) {
              var i = e.contentSteering;
              null !== i &&
                ((this.pathwayId = i.pathwayId),
                (this.uri = i.uri),
                this.started && this.startLoad());
            }),
            (e.onManifestParsed = function (t, e) {
              (this.audioTracks = e.audioTracks),
                (this.subtitleTracks = e.subtitleTracks);
            }),
            (e.onError = function (t, e) {
              var i = e.errorAction;
              if (2 === (null == i ? void 0 : i.action) && 1 === i.flags) {
                var r = this.levels,
                  a = this.pathwayPriority,
                  s = this.pathwayId;
                if (e.context) {
                  var n = e.context,
                    o = n.groupId,
                    h = n.pathwayId,
                    l = n.type;
                  o && r
                    ? (s = this.getPathwayForGroupId(o, l, s))
                    : h && (s = h);
                }
                s in this.penalizedPathways ||
                  (this.penalizedPathways[s] = performance.now()),
                  !a &&
                    r &&
                    (a = r.reduce(function (t, e) {
                      return (
                        -1 === t.indexOf(e.pathwayId) && t.push(e.pathwayId), t
                      );
                    }, [])),
                  a &&
                    a.length > 1 &&
                    (this.updatePathwayPriority(a),
                    (i.resolved = this.pathwayId !== s)),
                  i.resolved ||
                    R.warn(
                      "Could not resolve " +
                        e.details +
                        ' ("' +
                        e.error.message +
                        '") with content-steering for Pathway: ' +
                        s +
                        " levels: " +
                        (r ? r.length : r) +
                        " priorities: " +
                        JSON.stringify(a) +
                        " penalized: " +
                        JSON.stringify(this.penalizedPathways)
                    );
              }
            }),
            (e.filterParsedLevels = function (t) {
              this.levels = t;
              var e = this.getLevelsForPathway(this.pathwayId);
              if (0 === e.length) {
                var i = t[0].pathwayId;
                this.log(
                  "No levels found in Pathway " +
                    this.pathwayId +
                    '. Setting initial Pathway to "' +
                    i +
                    '"'
                ),
                  (e = this.getLevelsForPathway(i)),
                  (this.pathwayId = i);
              }
              return e.length !== t.length
                ? (this.log(
                    "Found " +
                      e.length +
                      "/" +
                      t.length +
                      ' levels in Pathway "' +
                      this.pathwayId +
                      '"'
                  ),
                  e)
                : t;
            }),
            (e.getLevelsForPathway = function (t) {
              return null === this.levels
                ? []
                : this.levels.filter(function (e) {
                    return t === e.pathwayId;
                  });
            }),
            (e.updatePathwayPriority = function (t) {
              var e;
              this.pathwayPriority = t;
              var i = this.penalizedPathways,
                r = performance.now();
              Object.keys(i).forEach(function (t) {
                r - i[t] > 3e5 && delete i[t];
              });
              for (var a = 0; a < t.length; a++) {
                var s = t[a];
                if (!(s in i)) {
                  if (s === this.pathwayId) return;
                  var n = this.hls.nextLoadLevel,
                    o = this.hls.levels[n];
                  if ((e = this.getLevelsForPathway(s)).length > 0) {
                    this.log('Setting Pathway to "' + s + '"'),
                      (this.pathwayId = s),
                      Re(e),
                      this.hls.trigger(k.LEVELS_UPDATED, { levels: e });
                    var h = this.hls.levels[n];
                    o &&
                      h &&
                      this.levels &&
                      (h.attrs["STABLE-VARIANT-ID"] !==
                        o.attrs["STABLE-VARIANT-ID"] &&
                        h.bitrate !== o.bitrate &&
                        this.log(
                          "Unstable Pathways change from bitrate " +
                            o.bitrate +
                            " to " +
                            h.bitrate
                        ),
                      (this.hls.nextLoadLevel = n));
                    break;
                  }
                }
              }
            }),
            (e.getPathwayForGroupId = function (t, e, i) {
              for (
                var r = this.getLevelsForPathway(i).concat(this.levels || []),
                  a = 0;
                a < r.length;
                a++
              )
                if (
                  (e === ae && r[a].hasAudioGroup(t)) ||
                  (e === se && r[a].hasSubtitleGroup(t))
                )
                  return r[a].pathwayId;
              return i;
            }),
            (e.clonePathways = function (t) {
              var e = this,
                i = this.levels;
              if (i) {
                var r = {},
                  a = {};
                t.forEach(function (t) {
                  var s = t.ID,
                    n = t["BASE-ID"],
                    o = t["URI-REPLACEMENT"];
                  if (
                    !i.some(function (t) {
                      return t.pathwayId === s;
                    })
                  ) {
                    var h = e.getLevelsForPathway(n).map(function (t) {
                      var e = new M(t.attrs);
                      e["PATHWAY-ID"] = s;
                      var i = e.AUDIO && e.AUDIO + "_clone_" + s,
                        n = e.SUBTITLES && e.SUBTITLES + "_clone_" + s;
                      i && ((r[e.AUDIO] = i), (e.AUDIO = i)),
                        n && ((a[e.SUBTITLES] = n), (e.SUBTITLES = n));
                      var h = ri(
                          t.uri,
                          e["STABLE-VARIANT-ID"],
                          "PER-VARIANT-URIS",
                          o
                        ),
                        l = new ke({
                          attrs: e,
                          audioCodec: t.audioCodec,
                          bitrate: t.bitrate,
                          height: t.height,
                          name: t.name,
                          url: h,
                          videoCodec: t.videoCodec,
                          width: t.width,
                        });
                      if (t.audioGroups)
                        for (var A = 1; A < t.audioGroups.length; A++)
                          l.addGroupId(
                            "audio",
                            t.audioGroups[A] + "_clone_" + s
                          );
                      if (t.subtitleGroups)
                        for (var d = 1; d < t.subtitleGroups.length; d++)
                          l.addGroupId(
                            "text",
                            t.subtitleGroups[d] + "_clone_" + s
                          );
                      return l;
                    });
                    i.push.apply(i, h),
                      ii(e.audioTracks, r, o, s),
                      ii(e.subtitleTracks, a, o, s);
                  }
                });
              }
            }),
            (e.loadSteeringManifest = function (t) {
              var e,
                i = this,
                r = this.hls.config,
                a = r.loader;
              this.loader && this.loader.destroy(), (this.loader = new a(r));
              try {
                e = new self.URL(t);
              } catch (d) {
                return (
                  (this.enabled = !1),
                  void this.log("Failed to parse Steering Manifest URI: " + t)
                );
              }
              if ("data:" !== e.protocol) {
                var s =
                  0 | (this.hls.bandwidthEstimate || r.abrEwmaDefaultEstimate);
                e.searchParams.set("_HLS_pathway", this.pathwayId),
                  e.searchParams.set("_HLS_throughput", "" + s);
              }
              var n = { responseType: "json", url: e.href },
                o = r.steeringManifestLoadPolicy.default,
                h = o.errorRetry || o.timeoutRetry || {},
                l = {
                  loadPolicy: o,
                  timeout: o.maxLoadTimeMs,
                  maxRetry: h.maxNumRetry || 0,
                  retryDelay: h.retryDelayMs || 0,
                  maxRetryDelay: h.maxRetryDelayMs || 0,
                },
                A = {
                  onSuccess: function (t, r, a, s) {
                    i.log('Loaded steering manifest: "' + e + '"');
                    var n = t.data;
                    if (1 === n.VERSION) {
                      (i.updated = performance.now()), (i.timeToLoad = n.TTL);
                      var o = n["RELOAD-URI"],
                        h = n["PATHWAY-CLONES"],
                        l = n["PATHWAY-PRIORITY"];
                      if (o)
                        try {
                          i.uri = new self.URL(o, e).href;
                        } catch (d) {
                          return (
                            (i.enabled = !1),
                            void i.log(
                              "Failed to parse Steering Manifest RELOAD-URI: " +
                                o
                            )
                          );
                        }
                      i.scheduleRefresh(i.uri || a.url),
                        h && i.clonePathways(h);
                      var A = { steeringManifest: n, url: e.toString() };
                      i.hls.trigger(k.STEERING_MANIFEST_LOADED, A),
                        l && i.updatePathwayPriority(l);
                    } else
                      i.log(
                        "Steering VERSION " + n.VERSION + " not supported!"
                      );
                  },
                  onError: function (t, e, r, a) {
                    if (
                      (i.log(
                        "Error loading steering manifest: " +
                          t.code +
                          " " +
                          t.text +
                          " (" +
                          e.url +
                          ")"
                      ),
                      i.stopLoad(),
                      410 === t.code)
                    )
                      return (
                        (i.enabled = !1),
                        void i.log(
                          "Steering manifest " + e.url + " no longer available"
                        )
                      );
                    var s = 1e3 * i.timeToLoad;
                    if (429 !== t.code) i.scheduleRefresh(i.uri || e.url, s);
                    else {
                      var n = i.loader;
                      if (
                        "function" ==
                        typeof (null == n ? void 0 : n.getResponseHeader)
                      ) {
                        var o = n.getResponseHeader("Retry-After");
                        o && (s = 1e3 * parseFloat(o));
                      }
                      i.log("Steering manifest " + e.url + " rate limited");
                    }
                  },
                  onTimeout: function (t, e, r) {
                    i.log("Timeout loading steering manifest (" + e.url + ")"),
                      i.scheduleRefresh(i.uri || e.url);
                  },
                };
              this.log("Requesting steering manifest: " + e),
                this.loader.load(n, l, A);
            }),
            (e.scheduleRefresh = function (t, e) {
              var i = this;
              void 0 === e && (e = 1e3 * this.timeToLoad),
                this.clearTimeout(),
                (this.reloadTimer = self.setTimeout(function () {
                  var e,
                    r = null == (e = i.hls) ? void 0 : e.media;
                  !r || r.ended
                    ? i.scheduleRefresh(t, 1e3 * i.timeToLoad)
                    : i.loadSteeringManifest(t);
                }, e));
            }),
            t
          );
        })();
      function ii(t, e, i, r) {
        t &&
          Object.keys(e).forEach(function (a) {
            var s = t
              .filter(function (t) {
                return t.groupId === a;
              })
              .map(function (t) {
                var s = o({}, t);
                return (
                  (s.details = void 0),
                  (s.attrs = new M(s.attrs)),
                  (s.url = s.attrs.URI =
                    ri(
                      t.url,
                      t.attrs["STABLE-RENDITION-ID"],
                      "PER-RENDITION-URIS",
                      i
                    )),
                  (s.groupId = s.attrs["GROUP-ID"] = e[a]),
                  (s.attrs["PATHWAY-ID"] = r),
                  s
                );
              });
            t.push.apply(t, s);
          });
      }
      function ri(t, e, i, r) {
        var a,
          s = r.HOST,
          n = r.PARAMS,
          o = r[i];
        e && (a = null == o ? void 0 : o[e]) && (t = a);
        var h = new self.URL(t);
        return (
          s && !a && (h.host = s),
          n &&
            Object.keys(n)
              .sort()
              .forEach(function (t) {
                t && h.searchParams.set(t, n[t]);
              }),
          h.href
        );
      }
      var ai = /^age:\s*[\d.]+\s*$/im,
        si = (function () {
          function t(t) {
            (this.xhrSetup = void 0),
              (this.requestTimeout = void 0),
              (this.retryTimeout = void 0),
              (this.retryDelay = void 0),
              (this.config = null),
              (this.callbacks = null),
              (this.context = null),
              (this.loader = null),
              (this.stats = void 0),
              (this.xhrSetup = (t && t.xhrSetup) || null),
              (this.stats = new _()),
              (this.retryDelay = 0);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.callbacks = null),
                this.abortInternal(),
                (this.loader = null),
                (this.config = null),
                (this.context = null),
                (this.xhrSetup = null),
                (this.stats = null);
            }),
            (e.abortInternal = function () {
              var t = this.loader;
              self.clearTimeout(this.requestTimeout),
                self.clearTimeout(this.retryTimeout),
                t &&
                  ((t.onreadystatechange = null),
                  (t.onprogress = null),
                  4 !== t.readyState && ((this.stats.aborted = !0), t.abort()));
            }),
            (e.abort = function () {
              var t;
              this.abortInternal(),
                null != (t = this.callbacks) &&
                  t.onAbort &&
                  this.callbacks.onAbort(this.stats, this.context, this.loader);
            }),
            (e.load = function (t, e, i) {
              if (this.stats.loading.start)
                throw new Error("Loader can only be used once.");
              (this.stats.loading.start = self.performance.now()),
                (this.context = t),
                (this.config = e),
                (this.callbacks = i),
                this.loadInternal();
            }),
            (e.loadInternal = function () {
              var t = this,
                e = this.config,
                i = this.context;
              if (e && i) {
                var r = (this.loader = new self.XMLHttpRequest()),
                  a = this.stats;
                (a.loading.first = 0), (a.loaded = 0), (a.aborted = !1);
                var s = this.xhrSetup;
                s
                  ? Promise.resolve()
                      .then(function () {
                        if (!t.stats.aborted) return s(r, i.url);
                      })
                      .catch(function (t) {
                        return r.open("GET", i.url, !0), s(r, i.url);
                      })
                      .then(function () {
                        t.stats.aborted || t.openAndSendXhr(r, i, e);
                      })
                      .catch(function (e) {
                        t.callbacks.onError(
                          { code: r.status, text: e.message },
                          i,
                          r,
                          a
                        );
                      })
                  : this.openAndSendXhr(r, i, e);
              }
            }),
            (e.openAndSendXhr = function (t, e, i) {
              t.readyState || t.open("GET", e.url, !0);
              var r = e.headers,
                a = i.loadPolicy,
                s = a.maxTimeToFirstByteMs,
                n = a.maxLoadTimeMs;
              if (r) for (var o in r) t.setRequestHeader(o, r[o]);
              e.rangeEnd &&
                t.setRequestHeader(
                  "Range",
                  "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)
                ),
                (t.onreadystatechange = this.readystatechange.bind(this)),
                (t.onprogress = this.loadprogress.bind(this)),
                (t.responseType = e.responseType),
                self.clearTimeout(this.requestTimeout),
                (i.timeout = s && I(s) ? s : n),
                (this.requestTimeout = self.setTimeout(
                  this.loadtimeout.bind(this),
                  i.timeout
                )),
                t.send();
            }),
            (e.readystatechange = function () {
              var t = this.context,
                e = this.loader,
                i = this.stats;
              if (t && e) {
                var r = e.readyState,
                  a = this.config;
                if (
                  !i.aborted &&
                  r >= 2 &&
                  (0 === i.loading.first &&
                    ((i.loading.first = Math.max(
                      self.performance.now(),
                      i.loading.start
                    )),
                    a.timeout !== a.loadPolicy.maxLoadTimeMs &&
                      (self.clearTimeout(this.requestTimeout),
                      (a.timeout = a.loadPolicy.maxLoadTimeMs),
                      (this.requestTimeout = self.setTimeout(
                        this.loadtimeout.bind(this),
                        a.loadPolicy.maxLoadTimeMs -
                          (i.loading.first - i.loading.start)
                      )))),
                  4 === r)
                ) {
                  self.clearTimeout(this.requestTimeout),
                    (e.onreadystatechange = null),
                    (e.onprogress = null);
                  var s = e.status,
                    n = "text" !== e.responseType;
                  if (
                    s >= 200 &&
                    s < 300 &&
                    ((n && e.response) || null !== e.responseText)
                  ) {
                    i.loading.end = Math.max(
                      self.performance.now(),
                      i.loading.first
                    );
                    var o = n ? e.response : e.responseText,
                      h =
                        "arraybuffer" === e.responseType
                          ? o.byteLength
                          : o.length;
                    if (
                      ((i.loaded = i.total = h),
                      (i.bwEstimate =
                        (8e3 * i.total) / (i.loading.end - i.loading.first)),
                      !this.callbacks)
                    )
                      return;
                    var l = this.callbacks.onProgress;
                    if ((l && l(i, t, o, e), !this.callbacks)) return;
                    var A = { url: e.responseURL, data: o, code: s };
                    this.callbacks.onSuccess(A, i, t, e);
                  } else {
                    var d = a.loadPolicy.errorRetry;
                    Pe(d, i.retry, !1, { url: t.url, data: void 0, code: s })
                      ? this.retry(d)
                      : (R.error(s + " while loading " + t.url),
                        this.callbacks.onError(
                          { code: s, text: e.statusText },
                          t,
                          e,
                          i
                        ));
                  }
                }
              }
            }),
            (e.loadtimeout = function () {
              var t,
                e =
                  null == (t = this.config)
                    ? void 0
                    : t.loadPolicy.timeoutRetry;
              if (Pe(e, this.stats.retry, !0)) this.retry(e);
              else {
                var i;
                R.warn(
                  "timeout while loading " +
                    (null == (i = this.context) ? void 0 : i.url)
                );
                var r = this.callbacks;
                r &&
                  (this.abortInternal(),
                  r.onTimeout(this.stats, this.context, this.loader));
              }
            }),
            (e.retry = function (t) {
              var e = this.context,
                i = this.stats;
              (this.retryDelay = Me(t, i.retry)),
                i.retry++,
                R.warn(
                  (status ? "HTTP Status " + status : "Timeout") +
                    " while loading " +
                    (null == e ? void 0 : e.url) +
                    ", retrying " +
                    i.retry +
                    "/" +
                    t.maxNumRetry +
                    " in " +
                    this.retryDelay +
                    "ms"
                ),
                this.abortInternal(),
                (this.loader = null),
                self.clearTimeout(this.retryTimeout),
                (this.retryTimeout = self.setTimeout(
                  this.loadInternal.bind(this),
                  this.retryDelay
                ));
            }),
            (e.loadprogress = function (t) {
              var e = this.stats;
              (e.loaded = t.loaded), t.lengthComputable && (e.total = t.total);
            }),
            (e.getCacheAge = function () {
              var t = null;
              if (this.loader && ai.test(this.loader.getAllResponseHeaders())) {
                var e = this.loader.getResponseHeader("age");
                t = e ? parseFloat(e) : null;
              }
              return t;
            }),
            (e.getResponseHeader = function (t) {
              return this.loader &&
                new RegExp("^" + t + ":\\s*[\\d.]+\\s*$", "im").test(
                  this.loader.getAllResponseHeaders()
                )
                ? this.loader.getResponseHeader(t)
                : null;
            }),
            t
          );
        })(),
        ni = (function () {
          function t() {
            (this.chunks = []), (this.dataLength = 0);
          }
          var e = t.prototype;
          return (
            (e.push = function (t) {
              this.chunks.push(t), (this.dataLength += t.length);
            }),
            (e.flush = function () {
              var t,
                e = this.chunks,
                i = this.dataLength;
              return e.length
                ? ((t =
                    1 === e.length
                      ? e[0]
                      : (function (t, e) {
                          for (
                            var i = new Uint8Array(e), r = 0, a = 0;
                            a < t.length;
                            a++
                          ) {
                            var s = t[a];
                            i.set(s, r), (r += s.length);
                          }
                          return i;
                        })(e, i)),
                  this.reset(),
                  t)
                : new Uint8Array(0);
            }),
            (e.reset = function () {
              (this.chunks.length = 0), (this.dataLength = 0);
            }),
            t
          );
        })(),
        oi = /(\d+)-(\d+)\/(\d+)/,
        hi = (function () {
          function t(t) {
            (this.fetchSetup = void 0),
              (this.requestTimeout = void 0),
              (this.request = null),
              (this.response = null),
              (this.controller = void 0),
              (this.context = null),
              (this.config = null),
              (this.callbacks = null),
              (this.stats = void 0),
              (this.loader = null),
              (this.fetchSetup = t.fetchSetup || li),
              (this.controller = new self.AbortController()),
              (this.stats = new _());
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.loader =
                this.callbacks =
                this.context =
                this.config =
                this.request =
                  null),
                this.abortInternal(),
                (this.response = null),
                (this.fetchSetup = this.controller = this.stats = null);
            }),
            (e.abortInternal = function () {
              this.controller &&
                !this.stats.loading.end &&
                ((this.stats.aborted = !0), this.controller.abort());
            }),
            (e.abort = function () {
              var t;
              this.abortInternal(),
                null != (t = this.callbacks) &&
                  t.onAbort &&
                  this.callbacks.onAbort(
                    this.stats,
                    this.context,
                    this.response
                  );
            }),
            (e.load = function (t, e, i) {
              var r = this,
                a = this.stats;
              if (a.loading.start)
                throw new Error("Loader can only be used once.");
              a.loading.start = self.performance.now();
              var s,
                n,
                h,
                l =
                  ((s = t),
                  (n = this.controller.signal),
                  (h = {
                    method: "GET",
                    mode: "cors",
                    credentials: "same-origin",
                    signal: n,
                    headers: new self.Headers(o({}, s.headers)),
                  }),
                  s.rangeEnd &&
                    h.headers.set(
                      "Range",
                      "bytes=" + s.rangeStart + "-" + String(s.rangeEnd - 1)
                    ),
                  h),
                A = i.onProgress,
                d = "arraybuffer" === t.responseType,
                u = d ? "byteLength" : "length",
                c = e.loadPolicy,
                g = c.maxTimeToFirstByteMs,
                f = c.maxLoadTimeMs;
              (this.context = t),
                (this.config = e),
                (this.callbacks = i),
                (this.request = this.fetchSetup(t, l)),
                self.clearTimeout(this.requestTimeout),
                (e.timeout = g && I(g) ? g : f),
                (this.requestTimeout = self.setTimeout(function () {
                  r.abortInternal(), i.onTimeout(a, t, r.response);
                }, e.timeout)),
                self
                  .fetch(this.request)
                  .then(function (s) {
                    r.response = r.loader = s;
                    var n = Math.max(self.performance.now(), a.loading.start);
                    if (
                      (self.clearTimeout(r.requestTimeout),
                      (e.timeout = f),
                      (r.requestTimeout = self.setTimeout(function () {
                        r.abortInternal(), i.onTimeout(a, t, r.response);
                      }, f - (n - a.loading.start))),
                      !s.ok)
                    ) {
                      var o = s.status,
                        h = s.statusText;
                      throw new di(h || "fetch, bad network response", o, s);
                    }
                    return (
                      (a.loading.first = n),
                      (a.total =
                        (function (t) {
                          var e = t.get("Content-Range");
                          if (e) {
                            var i = (function (t) {
                              var e = oi.exec(t);
                              if (e) return parseInt(e[2]) - parseInt(e[1]) + 1;
                            })(e);
                            if (I(i)) return i;
                          }
                          var r = t.get("Content-Length");
                          if (r) return parseInt(r);
                        })(s.headers) || a.total),
                      A && I(e.highWaterMark)
                        ? r.loadProgressively(s, a, t, e.highWaterMark, A)
                        : d
                        ? s.arrayBuffer()
                        : "json" === t.responseType
                        ? s.json()
                        : s.text()
                    );
                  })
                  .then(function (s) {
                    var n = r.response;
                    if (!n) throw new Error("loader destroyed");
                    self.clearTimeout(r.requestTimeout),
                      (a.loading.end = Math.max(
                        self.performance.now(),
                        a.loading.first
                      ));
                    var o = s[u];
                    o && (a.loaded = a.total = o);
                    var h = { url: n.url, data: s, code: n.status };
                    A && !I(e.highWaterMark) && A(a, t, s, n),
                      i.onSuccess(h, a, t, n);
                  })
                  .catch(function (e) {
                    if ((self.clearTimeout(r.requestTimeout), !a.aborted)) {
                      var s = (e && e.code) || 0,
                        n = e ? e.message : null;
                      i.onError(
                        { code: s, text: n },
                        t,
                        e ? e.details : null,
                        a
                      );
                    }
                  });
            }),
            (e.getCacheAge = function () {
              var t = null;
              if (this.response) {
                var e = this.response.headers.get("age");
                t = e ? parseFloat(e) : null;
              }
              return t;
            }),
            (e.getResponseHeader = function (t) {
              return this.response ? this.response.headers.get(t) : null;
            }),
            (e.loadProgressively = function (t, e, i, r, a) {
              void 0 === r && (r = 0);
              var s = new ni(),
                n = t.body.getReader();
              return (function o() {
                return n
                  .read()
                  .then(function (n) {
                    if (n.done)
                      return (
                        s.dataLength && a(e, i, s.flush(), t),
                        Promise.resolve(new ArrayBuffer(0))
                      );
                    var h = n.value,
                      l = h.length;
                    return (
                      (e.loaded += l),
                      l < r || s.dataLength
                        ? (s.push(h),
                          s.dataLength >= r && a(e, i, s.flush(), t))
                        : a(e, i, h, t),
                      o()
                    );
                  })
                  .catch(function () {
                    return Promise.reject();
                  });
              })();
            }),
            t
          );
        })();
      function li(t, e) {
        return new self.Request(t.url, e);
      }
      var Ai,
        di = (function (t) {
          function e(e, i, r) {
            var a;
            return (
              ((a = t.call(this, e) || this).code = void 0),
              (a.details = void 0),
              (a.code = i),
              (a.details = r),
              a
            );
          }
          return h(e, t), e;
        })(u(Error)),
        ui = r(
          r(
            {
              autoStartLoad: !0,
              startPosition: -1,
              defaultAudioCodec: void 0,
              debug: !1,
              capLevelOnFPSDrop: !1,
              capLevelToPlayerSize: !1,
              ignoreDevicePixelRatio: !1,
              preferManagedMediaSource: !0,
              initialLiveManifestSize: 1,
              maxBufferLength: 30,
              backBufferLength: 1 / 0,
              frontBufferFlushThreshold: 1 / 0,
              maxBufferSize: 6e7,
              maxBufferHole: 0.1,
              highBufferWatchdogPeriod: 2,
              nudgeOffset: 0.1,
              nudgeMaxRetry: 3,
              maxFragLookUpTolerance: 0.25,
              liveSyncDurationCount: 3,
              liveMaxLatencyDurationCount: 1 / 0,
              liveSyncDuration: void 0,
              liveMaxLatencyDuration: void 0,
              maxLiveSyncPlaybackRate: 1,
              liveDurationInfinity: !1,
              liveBackBufferLength: null,
              maxMaxBufferLength: 600,
              enableWorker: !0,
              workerPath: null,
              enableSoftwareAES: !0,
              startLevel: void 0,
              startFragPrefetch: !1,
              fpsDroppedMonitoringPeriod: 5e3,
              fpsDroppedMonitoringThreshold: 0.2,
              appendErrorMaxRetry: 3,
              loader: si,
              fLoader: void 0,
              pLoader: void 0,
              xhrSetup: void 0,
              licenseXhrSetup: void 0,
              licenseResponseCallback: void 0,
              abrController: Ke,
              bufferController: Ze,
              capLevelController: $e,
              errorController: Oe,
              fpsController: ti,
              stretchShortVideoTrack: !1,
              maxAudioFramesDrift: 1,
              forceKeyFrameOnDiscontinuity: !0,
              abrEwmaFastLive: 3,
              abrEwmaSlowLive: 9,
              abrEwmaFastVoD: 3,
              abrEwmaSlowVoD: 9,
              abrEwmaDefaultEstimate: 5e5,
              abrEwmaDefaultEstimateMax: 5e6,
              abrBandWidthFactor: 0.95,
              abrBandWidthUpFactor: 0.7,
              abrMaxWithRealBitrate: !1,
              maxStarvationDelay: 4,
              maxLoadingDelay: 4,
              minAutoBitrate: 0,
              emeEnabled: !1,
              widevineLicenseUrl: void 0,
              drmSystems: {},
              drmSystemOptions: {},
              requestMediaKeySystemAccessFunc: null,
              testBandwidth: !0,
              progressive: !1,
              lowLatencyMode: !0,
              cmcd: void 0,
              enableDateRangeMetadataCues: !0,
              enableEmsgMetadataCues: !0,
              enableID3MetadataCues: !0,
              useMediaCapabilities: !1,
              certLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 8e3,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: null,
                  errorRetry: null,
                },
              },
              keyLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 8e3,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 2e4,
                    backoff: "linear",
                  },
                  errorRetry: {
                    maxNumRetry: 8,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 2e4,
                    backoff: "linear",
                  },
                },
              },
              manifestLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1 / 0,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              playlistLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              fragLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 12e4,
                  timeoutRetry: {
                    maxNumRetry: 4,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 6,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              steeringManifestLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              manifestLoadingTimeOut: 1e4,
              manifestLoadingMaxRetry: 1,
              manifestLoadingRetryDelay: 1e3,
              manifestLoadingMaxRetryTimeout: 64e3,
              levelLoadingTimeOut: 1e4,
              levelLoadingMaxRetry: 4,
              levelLoadingRetryDelay: 1e3,
              levelLoadingMaxRetryTimeout: 64e3,
              fragLoadingTimeOut: 2e4,
              fragLoadingMaxRetry: 6,
              fragLoadingRetryDelay: 1e3,
              fragLoadingMaxRetryTimeout: 64e3,
            },
            {
              cueHandler: V,
              enableWebVTT: !1,
              enableIMSC1: !1,
              enableCEA708Captions: !1,
              captionsTextTrack1Label: "English",
              captionsTextTrack1LanguageCode: "en",
              captionsTextTrack2Label: "Spanish",
              captionsTextTrack2LanguageCode: "es",
              captionsTextTrack3Label: "Unknown CC",
              captionsTextTrack3LanguageCode: "",
              captionsTextTrack4Label: "Unknown CC",
              captionsTextTrack4LanguageCode: "",
              renderTextTracksNatively: !0,
            }
          ),
          {},
          {
            subtitleStreamController: void 0,
            subtitleTrackController: void 0,
            timelineController: void 0,
            audioStreamController: void 0,
            audioTrackController: void 0,
            emeController: void 0,
            cmcdController: void 0,
            contentSteeringController: ei,
          }
        );
      function ci(t) {
        return t && "object" == typeof t
          ? Array.isArray(t)
            ? t.map(ci)
            : Object.keys(t).reduce(function (e, i) {
                return (e[i] = ci(t[i])), e;
              }, {})
          : t;
      }
      var gi = (function (t) {
        function e(e, i) {
          var r;
          return (
            ((r = t.call(this, e, "[level-controller]") || this)._levels = []),
            (r._firstLevel = -1),
            (r._maxAutoLevel = -1),
            (r._startLevel = void 0),
            (r.currentLevel = null),
            (r.currentLevelIndex = -1),
            (r.manualLevelIndex = -1),
            (r.steering = void 0),
            (r.onParsedComplete = void 0),
            (r.steering = i),
            r._registerListeners(),
            r
          );
        }
        h(e, t);
        var i = e.prototype;
        return (
          (i._registerListeners = function () {
            var t = this.hls;
            t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
              t.on(k.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.on(k.LEVEL_LOADED, this.onLevelLoaded, this),
              t.on(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
              t.on(k.FRAG_BUFFERED, this.onFragBuffered, this),
              t.on(k.ERROR, this.onError, this);
          }),
          (i._unregisterListeners = function () {
            var t = this.hls;
            t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(k.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.off(k.LEVEL_LOADED, this.onLevelLoaded, this),
              t.off(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
              t.off(k.FRAG_BUFFERED, this.onFragBuffered, this),
              t.off(k.ERROR, this.onError, this);
          }),
          (i.destroy = function () {
            this._unregisterListeners(),
              (this.steering = null),
              this.resetLevels(),
              t.prototype.destroy.call(this);
          }),
          (i.stopLoad = function () {
            this._levels.forEach(function (t) {
              (t.loadError = 0), (t.fragmentError = 0);
            }),
              t.prototype.stopLoad.call(this);
          }),
          (i.resetLevels = function () {
            (this._startLevel = void 0),
              (this.manualLevelIndex = -1),
              (this.currentLevelIndex = -1),
              (this.currentLevel = null),
              (this._levels = []),
              (this._maxAutoLevel = -1);
          }),
          (i.onManifestLoading = function (t, e) {
            this.resetLevels();
          }),
          (i.onManifestLoaded = function (t, e) {
            var i = this.hls.config.preferManagedMediaSource,
              r = [],
              a = {},
              s = {},
              n = !1,
              o = !1,
              h = !1;
            e.levels.forEach(function (t) {
              var e,
                l,
                A = t.attrs,
                d = t.audioCodec,
                u = t.videoCodec;
              -1 !== (null == (e = d) ? void 0 : e.indexOf("mp4a.40.34")) &&
                (Ai || (Ai = /chrome|firefox/i.test(navigator.userAgent)),
                Ai && (t.audioCodec = d = void 0)),
                d && (t.audioCodec = d = Ot(d, i)),
                0 === (null == (l = u) ? void 0 : l.indexOf("avc1")) &&
                  (u = t.videoCodec =
                    (function (t) {
                      var e = t.split(".");
                      if (e.length > 2) {
                        var i = e.shift() + ".";
                        return (
                          (i += parseInt(e.shift()).toString(16)) +
                          ("000" + parseInt(e.shift()).toString(16)).slice(-4)
                        );
                      }
                      return t;
                    })(u));
              var c = t.width,
                g = t.height,
                f = t.unknownCodecs;
              if (
                (n || (n = !(!c || !g)),
                o || (o = !!u),
                h || (h = !!d),
                !(
                  (null != f && f.length) ||
                  (d && !Mt(d, "audio", i)) ||
                  (u && !Mt(u, "video", i))
                ))
              ) {
                var p = A.CODECS,
                  m = A["FRAME-RATE"],
                  v = A["HDCP-LEVEL"],
                  E = A["PATHWAY-ID"],
                  y = A.RESOLUTION,
                  I = A["VIDEO-RANGE"],
                  C =
                    (E || ".") +
                    "-" +
                    t.bitrate +
                    "-" +
                    y +
                    "-" +
                    m +
                    "-" +
                    p +
                    "-" +
                    I +
                    "-" +
                    v;
                if (a[C])
                  if (a[C].uri === t.url || t.attrs["PATHWAY-ID"])
                    a[C].addGroupId("audio", A.AUDIO),
                      a[C].addGroupId("text", A.SUBTITLES);
                  else {
                    var B = (s[C] += 1);
                    t.attrs["PATHWAY-ID"] = new Array(B + 1).join(".");
                    var k = new ke(t);
                    (a[C] = k), r.push(k);
                  }
                else {
                  var x = new ke(t);
                  (a[C] = x), (s[C] = 1), r.push(x);
                }
              }
            }),
              this.filterAndSortMediaOptions(r, e, n, o, h);
          }),
          (i.filterAndSortMediaOptions = function (t, e, i, r, a) {
            var s = this,
              n = [],
              o = [],
              h = t;
            if (
              ((i || r) &&
                a &&
                (h = h.filter(function (t) {
                  var e,
                    i = t.videoCodec,
                    r = t.videoRange,
                    a = t.width,
                    s = t.height;
                  return (
                    (!!i || !(!a || !s)) && !!(e = r) && Ce.indexOf(e) > -1
                  );
                })),
              0 !== h.length)
            ) {
              if (e.audioTracks) {
                var l = this.hls.config.preferManagedMediaSource;
                fi(
                  (n = e.audioTracks.filter(function (t) {
                    return !t.audioCodec || Mt(t.audioCodec, "audio", l);
                  }))
                );
              }
              e.subtitles && fi((o = e.subtitles));
              var A = h.slice(0);
              h.sort(function (t, e) {
                if (t.attrs["HDCP-LEVEL"] !== e.attrs["HDCP-LEVEL"])
                  return (t.attrs["HDCP-LEVEL"] || "") >
                    (e.attrs["HDCP-LEVEL"] || "")
                    ? 1
                    : -1;
                if (i && t.height !== e.height) return t.height - e.height;
                if (t.frameRate !== e.frameRate)
                  return t.frameRate - e.frameRate;
                if (t.videoRange !== e.videoRange)
                  return Ce.indexOf(t.videoRange) - Ce.indexOf(e.videoRange);
                if (t.videoCodec !== e.videoCodec) {
                  var r = _t(t.videoCodec),
                    a = _t(e.videoCodec);
                  if (r !== a) return a - r;
                }
                if (t.uri === e.uri && t.codecSet !== e.codecSet) {
                  var s = Nt(t.codecSet),
                    n = Nt(e.codecSet);
                  if (s !== n) return n - s;
                }
                return t.bitrate !== e.bitrate ? t.bitrate - e.bitrate : 0;
              });
              var d = A[0];
              if (
                this.steering &&
                (h = this.steering.filterParsedLevels(h)).length !== A.length
              )
                for (var u = 0; u < A.length; u++)
                  if (A[u].pathwayId === h[0].pathwayId) {
                    d = A[u];
                    break;
                  }
              this._levels = h;
              for (var c = 0; c < h.length; c++)
                if (h[c] === d) {
                  var g;
                  this._firstLevel = c;
                  var f = d.bitrate,
                    p = this.hls.bandwidthEstimate;
                  if (
                    (this.log(
                      "manifest loaded, " +
                        h.length +
                        " level(s) found, first bitrate: " +
                        f
                    ),
                    void 0 ===
                      (null == (g = this.hls.userConfig)
                        ? void 0
                        : g.abrEwmaDefaultEstimate))
                  ) {
                    var m = Math.min(
                      f,
                      this.hls.config.abrEwmaDefaultEstimateMax
                    );
                    m > p &&
                      p === ui.abrEwmaDefaultEstimate &&
                      (this.hls.bandwidthEstimate = m);
                  }
                  break;
                }
              var v = a && !r,
                E = {
                  levels: h,
                  audioTracks: n,
                  subtitleTracks: o,
                  sessionData: e.sessionData,
                  sessionKeys: e.sessionKeys,
                  firstLevel: this._firstLevel,
                  stats: e.stats,
                  audio: a,
                  video: r,
                  altAudio:
                    !v &&
                    n.some(function (t) {
                      return !!t.url;
                    }),
                };
              this.hls.trigger(k.MANIFEST_PARSED, E),
                (this.hls.config.autoStartLoad || this.hls.forceStartLoad) &&
                  this.hls.startLoad(this.hls.config.startPosition);
            } else
              Promise.resolve().then(function () {
                if (s.hls) {
                  e.levels.length &&
                    s.warn(
                      "One or more CODECS in variant not supported: " +
                        JSON.stringify(e.levels[0].attrs)
                    );
                  var t = new Error(
                    "no level with compatible codecs found in manifest"
                  );
                  s.hls.trigger(k.ERROR, {
                    type: x.MEDIA_ERROR,
                    details: w.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                    fatal: !0,
                    url: e.url,
                    error: t,
                    reason: t.message,
                  });
                }
              });
          }),
          (i.onError = function (t, e) {
            !e.fatal &&
              e.context &&
              e.context.type === re &&
              e.context.level === this.level &&
              this.checkRetry(e);
          }),
          (i.onFragBuffered = function (t, e) {
            var i = e.frag;
            if (void 0 !== i && i.type === ne) {
              var r = i.elementaryStreams;
              if (
                !Object.keys(r).some(function (t) {
                  return !!r[t];
                })
              )
                return;
              var a = this._levels[i.level];
              null != a &&
                a.loadError &&
                (this.log(
                  "Resetting level error count of " +
                    a.loadError +
                    " on frag buffered"
                ),
                (a.loadError = 0));
            }
          }),
          (i.onLevelLoaded = function (t, e) {
            var i,
              r,
              a = e.level,
              s = e.details,
              n = this._levels[a];
            if (!n)
              return (
                this.warn("Invalid level index " + a),
                void (
                  null != (r = e.deliveryDirectives) &&
                  r.skip &&
                  (s.deltaUpdateFailed = !0)
                )
              );
            a === this.currentLevelIndex
              ? (0 === n.fragmentError && (n.loadError = 0),
                this.playlistLoaded(a, e, n.details))
              : null != (i = e.deliveryDirectives) &&
                i.skip &&
                (s.deltaUpdateFailed = !0);
          }),
          (i.loadPlaylist = function (e) {
            t.prototype.loadPlaylist.call(this);
            var i = this.currentLevelIndex,
              r = this.currentLevel;
            if (r && this.shouldLoadPlaylist(r)) {
              var a = r.uri;
              if (e)
                try {
                  a = e.addDirectives(a);
                } catch (n) {
                  this.warn(
                    "Could not construct new URL with HLS Delivery Directives: " +
                      n
                  );
                }
              var s = r.attrs["PATHWAY-ID"];
              this.log(
                "Loading level index " +
                  i +
                  (void 0 !== (null == e ? void 0 : e.msn)
                    ? " at sn " + e.msn + " part " + e.part
                    : "") +
                  " with" +
                  (s ? " Pathway " + s : "") +
                  " " +
                  a
              ),
                this.clearTimer(),
                this.hls.trigger(k.LEVEL_LOADING, {
                  url: a,
                  level: i,
                  pathwayId: r.attrs["PATHWAY-ID"],
                  id: 0,
                  deliveryDirectives: e || null,
                });
            }
          }),
          (i.removeLevel = function (t) {
            var e,
              i = this,
              r = this._levels.filter(function (e, r) {
                return (
                  r !== t ||
                  (i.steering && i.steering.removeLevel(e),
                  e === i.currentLevel &&
                    ((i.currentLevel = null),
                    (i.currentLevelIndex = -1),
                    e.details &&
                      e.details.fragments.forEach(function (t) {
                        return (t.level = -1);
                      })),
                  !1)
                );
              });
            Re(r),
              (this._levels = r),
              this.currentLevelIndex > -1 &&
                null != (e = this.currentLevel) &&
                e.details &&
                (this.currentLevelIndex =
                  this.currentLevel.details.fragments[0].level),
              this.hls.trigger(k.LEVELS_UPDATED, { levels: r });
          }),
          (i.onLevelsUpdated = function (t, e) {
            var i = e.levels;
            this._levels = i;
          }),
          (i.checkMaxAutoUpdated = function () {
            var t = this.hls,
              e = t.autoLevelCapping,
              i = t.maxAutoLevel,
              r = t.maxHdcpLevel;
            this._maxAutoLevel !== i &&
              ((this._maxAutoLevel = i),
              this.hls.trigger(k.MAX_AUTO_LEVEL_UPDATED, {
                autoLevelCapping: e,
                levels: this.levels,
                maxAutoLevel: i,
                minAutoLevel: this.hls.minAutoLevel,
                maxHdcpLevel: r,
              }));
          }),
          n(e, [
            {
              key: "levels",
              get: function () {
                return 0 === this._levels.length ? null : this._levels;
              },
            },
            {
              key: "level",
              get: function () {
                return this.currentLevelIndex;
              },
              set: function (t) {
                var e = this._levels;
                if (0 !== e.length) {
                  if (t < 0 || t >= e.length) {
                    var i = new Error("invalid level idx"),
                      r = t < 0;
                    if (
                      (this.hls.trigger(k.ERROR, {
                        type: x.OTHER_ERROR,
                        details: w.LEVEL_SWITCH_ERROR,
                        level: t,
                        fatal: r,
                        error: i,
                        reason: i.message,
                      }),
                      r)
                    )
                      return;
                    t = Math.min(t, e.length - 1);
                  }
                  var a = this.currentLevelIndex,
                    s = this.currentLevel,
                    n = s ? s.attrs["PATHWAY-ID"] : void 0,
                    o = e[t],
                    h = o.attrs["PATHWAY-ID"];
                  if (
                    ((this.currentLevelIndex = t),
                    (this.currentLevel = o),
                    a !== t || !o.details || !s || n !== h)
                  ) {
                    this.log(
                      "Switching to level " +
                        t +
                        " (" +
                        (o.height ? o.height + "p " : "") +
                        (o.videoRange ? o.videoRange + " " : "") +
                        (o.codecSet ? o.codecSet + " " : "") +
                        "@" +
                        o.bitrate +
                        ")" +
                        (h ? " with Pathway " + h : "") +
                        " from level " +
                        a +
                        (n ? " with Pathway " + n : "")
                    );
                    var l = {
                      level: t,
                      attrs: o.attrs,
                      details: o.details,
                      bitrate: o.bitrate,
                      averageBitrate: o.averageBitrate,
                      maxBitrate: o.maxBitrate,
                      realBitrate: o.realBitrate,
                      width: o.width,
                      height: o.height,
                      codecSet: o.codecSet,
                      audioCodec: o.audioCodec,
                      videoCodec: o.videoCodec,
                      audioGroups: o.audioGroups,
                      subtitleGroups: o.subtitleGroups,
                      loaded: o.loaded,
                      loadError: o.loadError,
                      fragmentError: o.fragmentError,
                      name: o.name,
                      id: o.id,
                      uri: o.uri,
                      url: o.url,
                      urlId: 0,
                      audioGroupIds: o.audioGroupIds,
                      textGroupIds: o.textGroupIds,
                    };
                    this.hls.trigger(k.LEVEL_SWITCHING, l);
                    var A = o.details;
                    if (!A || A.live) {
                      var d = this.switchParams(
                        o.uri,
                        null == s ? void 0 : s.details
                      );
                      this.loadPlaylist(d);
                    }
                  }
                }
              },
            },
            {
              key: "manualLevel",
              get: function () {
                return this.manualLevelIndex;
              },
              set: function (t) {
                (this.manualLevelIndex = t),
                  void 0 === this._startLevel && (this._startLevel = t),
                  -1 !== t && (this.level = t);
              },
            },
            {
              key: "firstLevel",
              get: function () {
                return this._firstLevel;
              },
              set: function (t) {
                this._firstLevel = t;
              },
            },
            {
              key: "startLevel",
              get: function () {
                if (void 0 === this._startLevel) {
                  var t = this.hls.config.startLevel;
                  return void 0 !== t ? t : this.hls.firstAutoLevel;
                }
                return this._startLevel;
              },
              set: function (t) {
                this._startLevel = t;
              },
            },
            {
              key: "nextLoadLevel",
              get: function () {
                return -1 !== this.manualLevelIndex
                  ? this.manualLevelIndex
                  : this.hls.nextAutoLevel;
              },
              set: function (t) {
                (this.level = t),
                  -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t);
              },
            },
          ]),
          e
        );
      })(je);
      function fi(t) {
        var e = {};
        t.forEach(function (t) {
          var i = t.groupId || "";
          (t.id = e[i] = e[i] || 0), e[i]++;
        });
      }
      var pi = "NOT_LOADED",
        mi = "APPENDING",
        vi = "PARTIAL",
        Ei = "OK",
        yi = (function () {
          function t(t) {
            (this.activePartLists = Object.create(null)),
              (this.endListFragments = Object.create(null)),
              (this.fragments = Object.create(null)),
              (this.timeRanges = Object.create(null)),
              (this.bufferPadding = 0.2),
              (this.hls = void 0),
              (this.hasGaps = !1),
              (this.hls = t),
              this._registerListeners();
          }
          var e = t.prototype;
          return (
            (e._registerListeners = function () {
              var t = this.hls;
              t.on(k.BUFFER_APPENDED, this.onBufferAppended, this),
                t.on(k.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(k.FRAG_LOADED, this.onFragLoaded, this);
            }),
            (e._unregisterListeners = function () {
              var t = this.hls;
              t.off(k.BUFFER_APPENDED, this.onBufferAppended, this),
                t.off(k.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(k.FRAG_LOADED, this.onFragLoaded, this);
            }),
            (e.destroy = function () {
              this._unregisterListeners(),
                (this.fragments =
                  this.activePartLists =
                  this.endListFragments =
                  this.timeRanges =
                    null);
            }),
            (e.getAppendedFrag = function (t, e) {
              var i = this.activePartLists[e];
              if (i)
                for (var r = i.length; r--; ) {
                  var a = i[r];
                  if (!a) break;
                  var s = a.end;
                  if (a.start <= t && null !== s && t <= s) return a;
                }
              return this.getBufferedFrag(t, e);
            }),
            (e.getBufferedFrag = function (t, e) {
              for (
                var i = this.fragments, r = Object.keys(i), a = r.length;
                a--;

              ) {
                var s = i[r[a]];
                if ((null == s ? void 0 : s.body.type) === e && s.buffered) {
                  var n = s.body;
                  if (n.start <= t && t <= n.end) return n;
                }
              }
              return null;
            }),
            (e.detectEvictedFragments = function (t, e, i, r) {
              var a = this;
              this.timeRanges && (this.timeRanges[t] = e);
              var s = (null == r ? void 0 : r.fragment.sn) || -1;
              Object.keys(this.fragments).forEach(function (r) {
                var n = a.fragments[r];
                if (n && !(s >= n.body.sn))
                  if (n.buffered || n.loaded) {
                    var o = n.range[t];
                    o &&
                      o.time.some(function (t) {
                        var i = !a.isTimeBuffered(t.startPTS, t.endPTS, e);
                        return i && a.removeFragment(n.body), i;
                      });
                  } else n.body.type === i && a.removeFragment(n.body);
              });
            }),
            (e.detectPartialFragments = function (t) {
              var e = this,
                i = this.timeRanges,
                r = t.frag,
                a = t.part;
              if (i && "initSegment" !== r.sn) {
                var s = Ci(r),
                  n = this.fragments[s];
                if (!(!n || (n.buffered && r.gap))) {
                  var o = !r.relurl;
                  Object.keys(i).forEach(function (t) {
                    var s = r.elementaryStreams[t];
                    if (s) {
                      var h = i[t],
                        l = o || !0 === s.partial;
                      n.range[t] = e.getBufferedTimes(r, a, l, h);
                    }
                  }),
                    (n.loaded = null),
                    Object.keys(n.range).length
                      ? ((n.buffered = !0),
                        (n.body.endList = r.endList || n.body.endList) &&
                          (this.endListFragments[n.body.type] = n),
                        Ii(n) || this.removeParts(r.sn - 1, r.type))
                      : this.removeFragment(n.body);
                }
              }
            }),
            (e.removeParts = function (t, e) {
              var i = this.activePartLists[e];
              i &&
                (this.activePartLists[e] = i.filter(function (e) {
                  return e.fragment.sn >= t;
                }));
            }),
            (e.fragBuffered = function (t, e) {
              var i = Ci(t),
                r = this.fragments[i];
              !r &&
                e &&
                ((r = this.fragments[i] =
                  {
                    body: t,
                    appendedPTS: null,
                    loaded: null,
                    buffered: !1,
                    range: Object.create(null),
                  }),
                t.gap && (this.hasGaps = !0)),
                r && ((r.loaded = null), (r.buffered = !0));
            }),
            (e.getBufferedTimes = function (t, e, i, r) {
              for (
                var a = { time: [], partial: i },
                  s = t.start,
                  n = t.end,
                  o = t.minEndPTS || n,
                  h = t.maxStartPTS || s,
                  l = 0;
                l < r.length;
                l++
              ) {
                var A = r.start(l) - this.bufferPadding,
                  d = r.end(l) + this.bufferPadding;
                if (h >= A && o <= d) {
                  a.time.push({
                    startPTS: Math.max(s, r.start(l)),
                    endPTS: Math.min(n, r.end(l)),
                  });
                  break;
                }
                if (s < d && n > A) {
                  var u = Math.max(s, r.start(l)),
                    c = Math.min(n, r.end(l));
                  c > u &&
                    ((a.partial = !0), a.time.push({ startPTS: u, endPTS: c }));
                } else if (n <= A) break;
              }
              return a;
            }),
            (e.getPartialFragment = function (t) {
              var e,
                i,
                r,
                a = null,
                s = 0,
                n = this.bufferPadding,
                o = this.fragments;
              return (
                Object.keys(o).forEach(function (h) {
                  var l = o[h];
                  l &&
                    Ii(l) &&
                    ((i = l.body.start - n),
                    (r = l.body.end + n),
                    t >= i &&
                      t <= r &&
                      ((e = Math.min(t - i, r - t)),
                      s <= e && ((a = l.body), (s = e))));
                }),
                a
              );
            }),
            (e.isEndListAppended = function (t) {
              var e = this.endListFragments[t];
              return void 0 !== e && (e.buffered || Ii(e));
            }),
            (e.getState = function (t) {
              var e = Ci(t),
                i = this.fragments[e];
              return i ? (i.buffered ? (Ii(i) ? vi : Ei) : mi) : pi;
            }),
            (e.isTimeBuffered = function (t, e, i) {
              for (var r, a, s = 0; s < i.length; s++) {
                if (
                  ((r = i.start(s) - this.bufferPadding),
                  (a = i.end(s) + this.bufferPadding),
                  t >= r && e <= a)
                )
                  return !0;
                if (e <= r) return !1;
              }
              return !1;
            }),
            (e.onFragLoaded = function (t, e) {
              var i = e.frag,
                r = e.part;
              if ("initSegment" !== i.sn && !i.bitrateTest) {
                var a = r ? null : e,
                  s = Ci(i);
                this.fragments[s] = {
                  body: i,
                  appendedPTS: null,
                  loaded: a,
                  buffered: !1,
                  range: Object.create(null),
                };
              }
            }),
            (e.onBufferAppended = function (t, e) {
              var i = this,
                r = e.frag,
                a = e.part,
                s = e.timeRanges;
              if ("initSegment" !== r.sn) {
                var n = r.type;
                if (a) {
                  var o = this.activePartLists[n];
                  o || (this.activePartLists[n] = o = []), o.push(a);
                }
                (this.timeRanges = s),
                  Object.keys(s).forEach(function (t) {
                    var e = s[t];
                    i.detectEvictedFragments(t, e, n, a);
                  });
              }
            }),
            (e.onFragBuffered = function (t, e) {
              this.detectPartialFragments(e);
            }),
            (e.hasFragment = function (t) {
              var e = Ci(t);
              return !!this.fragments[e];
            }),
            (e.hasParts = function (t) {
              var e;
              return !(null == (e = this.activePartLists[t]) || !e.length);
            }),
            (e.removeFragmentsInRange = function (t, e, i, r, a) {
              var s = this;
              (r && !this.hasGaps) ||
                Object.keys(this.fragments).forEach(function (n) {
                  var o = s.fragments[n];
                  if (o) {
                    var h = o.body;
                    h.type !== i ||
                      (r && !h.gap) ||
                      (h.start < e &&
                        h.end > t &&
                        (o.buffered || a) &&
                        s.removeFragment(h));
                  }
                });
            }),
            (e.removeFragment = function (t) {
              var e = Ci(t);
              (t.stats.loaded = 0), t.clearElementaryStreamInfo();
              var i = this.activePartLists[t.type];
              if (i) {
                var r = t.sn;
                this.activePartLists[t.type] = i.filter(function (t) {
                  return t.fragment.sn !== r;
                });
              }
              delete this.fragments[e],
                t.endList && delete this.endListFragments[t.type];
            }),
            (e.removeAllFragments = function () {
              (this.fragments = Object.create(null)),
                (this.endListFragments = Object.create(null)),
                (this.activePartLists = Object.create(null)),
                (this.hasGaps = !1);
            }),
            t
          );
        })();
      function Ii(t) {
        var e, i, r;
        return (
          t.buffered &&
          (t.body.gap ||
            (null == (e = t.range.video) ? void 0 : e.partial) ||
            (null == (i = t.range.audio) ? void 0 : i.partial) ||
            (null == (r = t.range.audiovideo) ? void 0 : r.partial))
        );
      }
      function Ci(t) {
        return t.type + "_" + t.level + "_" + t.sn;
      }
      var Bi = Math.pow(2, 17),
        ki = (function () {
          function t(t) {
            (this.config = void 0),
              (this.loader = null),
              (this.partLoadTimeout = -1),
              (this.config = t);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.loader && (this.loader.destroy(), (this.loader = null));
            }),
            (e.abort = function () {
              this.loader && this.loader.abort();
            }),
            (e.load = function (t, e) {
              var i = this,
                a = t.url;
              if (!a)
                return Promise.reject(
                  new Qi({
                    type: x.NETWORK_ERROR,
                    details: w.FRAG_LOAD_ERROR,
                    fatal: !1,
                    frag: t,
                    error: new Error(
                      "Fragment does not have a " + (a ? "part list" : "url")
                    ),
                    networkDetails: null,
                  })
                );
              this.abort();
              var s = this.config,
                n = s.fLoader,
                o = s.loader;
              return new Promise(function (h, l) {
                if ((i.loader && i.loader.destroy(), t.gap)) {
                  if (
                    t.tagList.some(function (t) {
                      return "GAP" === t[0];
                    })
                  )
                    return void l(wi(t));
                  t.gap = !1;
                }
                var A = (i.loader = t.loader = n ? new n(s) : new o(s)),
                  d = xi(t),
                  u = Fe(s.fragLoadPolicy.default),
                  c = {
                    loadPolicy: u,
                    timeout: u.maxLoadTimeMs,
                    maxRetry: 0,
                    retryDelay: 0,
                    maxRetryDelay: 0,
                    highWaterMark: "initSegment" === t.sn ? 1 / 0 : Bi,
                  };
                (t.stats = A.stats),
                  A.load(d, c, {
                    onSuccess: function (e, r, a, s) {
                      i.resetLoader(t, A);
                      var n = e.data;
                      a.resetIV &&
                        t.decryptdata &&
                        ((t.decryptdata.iv = new Uint8Array(n.slice(0, 16))),
                        (n = n.slice(16))),
                        h({
                          frag: t,
                          part: null,
                          payload: n,
                          networkDetails: s,
                        });
                    },
                    onError: function (e, s, n, o) {
                      i.resetLoader(t, A),
                        l(
                          new Qi({
                            type: x.NETWORK_ERROR,
                            details: w.FRAG_LOAD_ERROR,
                            fatal: !1,
                            frag: t,
                            response: r({ url: a, data: void 0 }, e),
                            error: new Error(
                              "HTTP Error " + e.code + " " + e.text
                            ),
                            networkDetails: n,
                            stats: o,
                          })
                        );
                    },
                    onAbort: function (e, r, a) {
                      i.resetLoader(t, A),
                        l(
                          new Qi({
                            type: x.NETWORK_ERROR,
                            details: w.INTERNAL_ABORTED,
                            fatal: !1,
                            frag: t,
                            error: new Error("Aborted"),
                            networkDetails: a,
                            stats: e,
                          })
                        );
                    },
                    onTimeout: function (e, r, a) {
                      i.resetLoader(t, A),
                        l(
                          new Qi({
                            type: x.NETWORK_ERROR,
                            details: w.FRAG_LOAD_TIMEOUT,
                            fatal: !1,
                            frag: t,
                            error: new Error(
                              "Timeout after " + c.timeout + "ms"
                            ),
                            networkDetails: a,
                            stats: e,
                          })
                        );
                    },
                    onProgress: function (i, r, a, s) {
                      e &&
                        e({
                          frag: t,
                          part: null,
                          payload: a,
                          networkDetails: s,
                        });
                    },
                  });
              });
            }),
            (e.loadPart = function (t, e, i) {
              var a = this;
              this.abort();
              var s = this.config,
                n = s.fLoader,
                o = s.loader;
              return new Promise(function (h, l) {
                if ((a.loader && a.loader.destroy(), t.gap || e.gap))
                  l(wi(t, e));
                else {
                  var A = (a.loader = t.loader = n ? new n(s) : new o(s)),
                    d = xi(t, e),
                    u = Fe(s.fragLoadPolicy.default),
                    c = {
                      loadPolicy: u,
                      timeout: u.maxLoadTimeMs,
                      maxRetry: 0,
                      retryDelay: 0,
                      maxRetryDelay: 0,
                      highWaterMark: Bi,
                    };
                  (e.stats = A.stats),
                    A.load(d, c, {
                      onSuccess: function (r, s, n, o) {
                        a.resetLoader(t, A), a.updateStatsFromPart(t, e);
                        var l = {
                          frag: t,
                          part: e,
                          payload: r.data,
                          networkDetails: o,
                        };
                        i(l), h(l);
                      },
                      onError: function (i, s, n, o) {
                        a.resetLoader(t, A),
                          l(
                            new Qi({
                              type: x.NETWORK_ERROR,
                              details: w.FRAG_LOAD_ERROR,
                              fatal: !1,
                              frag: t,
                              part: e,
                              response: r({ url: d.url, data: void 0 }, i),
                              error: new Error(
                                "HTTP Error " + i.code + " " + i.text
                              ),
                              networkDetails: n,
                              stats: o,
                            })
                          );
                      },
                      onAbort: function (i, r, s) {
                        (t.stats.aborted = e.stats.aborted),
                          a.resetLoader(t, A),
                          l(
                            new Qi({
                              type: x.NETWORK_ERROR,
                              details: w.INTERNAL_ABORTED,
                              fatal: !1,
                              frag: t,
                              part: e,
                              error: new Error("Aborted"),
                              networkDetails: s,
                              stats: i,
                            })
                          );
                      },
                      onTimeout: function (i, r, s) {
                        a.resetLoader(t, A),
                          l(
                            new Qi({
                              type: x.NETWORK_ERROR,
                              details: w.FRAG_LOAD_TIMEOUT,
                              fatal: !1,
                              frag: t,
                              part: e,
                              error: new Error(
                                "Timeout after " + c.timeout + "ms"
                              ),
                              networkDetails: s,
                              stats: i,
                            })
                          );
                      },
                    });
                }
              });
            }),
            (e.updateStatsFromPart = function (t, e) {
              var i = t.stats,
                r = e.stats,
                a = r.total;
              if (((i.loaded += r.loaded), a)) {
                var s = Math.round(t.duration / e.duration),
                  n = Math.min(Math.round(i.loaded / a), s),
                  o = (s - n) * Math.round(i.loaded / n);
                i.total = i.loaded + o;
              } else i.total = Math.max(i.loaded, i.total);
              var h = i.loading,
                l = r.loading;
              h.start
                ? (h.first += l.first - l.start)
                : ((h.start = l.start), (h.first = l.first)),
                (h.end = l.end);
            }),
            (e.resetLoader = function (t, e) {
              (t.loader = null),
                this.loader === e &&
                  (self.clearTimeout(this.partLoadTimeout),
                  (this.loader = null)),
                e.destroy();
            }),
            t
          );
        })();
      function xi(t, e) {
        void 0 === e && (e = null);
        var i = e || t,
          r = {
            frag: t,
            part: e,
            responseType: "arraybuffer",
            url: i.url,
            headers: {},
            rangeStart: 0,
            rangeEnd: 0,
          },
          a = i.byteRangeStartOffset,
          s = i.byteRangeEndOffset;
        if (I(a) && I(s)) {
          var n,
            o = a,
            h = s;
          if (
            "initSegment" === t.sn &&
            "AES-128" === (null == (n = t.decryptdata) ? void 0 : n.method)
          ) {
            var l = s - a;
            l % 16 && (h = s + (16 - (l % 16))),
              0 !== a && ((r.resetIV = !0), (o = a - 16));
          }
          (r.rangeStart = o), (r.rangeEnd = h);
        }
        return r;
      }
      function wi(t, e) {
        var i = new Error("GAP " + (t.gap ? "tag" : "attribute") + " found"),
          r = {
            type: x.MEDIA_ERROR,
            details: w.FRAG_GAP,
            fatal: !1,
            frag: t,
            error: i,
            networkDetails: null,
          };
        return e && (r.part = e), ((e || t).stats.aborted = !0), new Qi(r);
      }
      var Qi = (function (t) {
          function e(e) {
            var i;
            return (
              ((i = t.call(this, e.error.message) || this).data = void 0),
              (i.data = e),
              i
            );
          }
          return h(e, t), e;
        })(u(Error)),
        Si = (function () {
          function t(t) {
            (this.config = void 0),
              (this.keyUriToKeyInfo = {}),
              (this.emeController = null),
              (this.config = t);
          }
          var e = t.prototype;
          return (
            (e.abort = function (t) {
              for (var e in this.keyUriToKeyInfo) {
                var i = this.keyUriToKeyInfo[e].loader;
                if (i) {
                  var r;
                  if (
                    t &&
                    t !== (null == (r = i.context) ? void 0 : r.frag.type)
                  )
                    return;
                  i.abort();
                }
              }
            }),
            (e.detach = function () {
              for (var t in this.keyUriToKeyInfo) {
                var e = this.keyUriToKeyInfo[t];
                (e.mediaKeySessionContext ||
                  e.decryptdata.isCommonEncryption) &&
                  delete this.keyUriToKeyInfo[t];
              }
            }),
            (e.destroy = function () {
              for (var t in (this.detach(), this.keyUriToKeyInfo)) {
                var e = this.keyUriToKeyInfo[t].loader;
                e && e.destroy();
              }
              this.keyUriToKeyInfo = {};
            }),
            (e.createKeyLoadError = function (t, e, i, r, a) {
              return (
                void 0 === e && (e = w.KEY_LOAD_ERROR),
                new Qi({
                  type: x.NETWORK_ERROR,
                  details: e,
                  fatal: !1,
                  frag: t,
                  response: a,
                  error: i,
                  networkDetails: r,
                })
              );
            }),
            (e.loadClear = function (t, e) {
              var i = this;
              if (this.emeController && this.config.emeEnabled)
                for (
                  var r = t.sn,
                    a = t.cc,
                    s = function () {
                      var t = e[n];
                      if (
                        a <= t.cc &&
                        ("initSegment" === r ||
                          "initSegment" === t.sn ||
                          r < t.sn)
                      )
                        return (
                          i.emeController
                            .selectKeySystemFormat(t)
                            .then(function (e) {
                              t.setKeyFormat(e);
                            }),
                          1
                        );
                    },
                    n = 0;
                  n < e.length && !s();
                  n++
                );
            }),
            (e.load = function (t) {
              var e = this;
              return !t.decryptdata && t.encrypted && this.emeController
                ? this.emeController
                    .selectKeySystemFormat(t)
                    .then(function (i) {
                      return e.loadInternal(t, i);
                    })
                : this.loadInternal(t);
            }),
            (e.loadInternal = function (t, e) {
              var i, r;
              e && t.setKeyFormat(e);
              var a = t.decryptdata;
              if (!a) {
                var s = new Error(
                  e
                    ? "Expected frag.decryptdata to be defined after setting format " +
                      e
                    : "Missing decryption data on fragment in onKeyLoading"
                );
                return Promise.reject(
                  this.createKeyLoadError(t, w.KEY_LOAD_ERROR, s)
                );
              }
              var n = a.uri;
              if (!n)
                return Promise.reject(
                  this.createKeyLoadError(
                    t,
                    w.KEY_LOAD_ERROR,
                    new Error('Invalid key URI: "' + n + '"')
                  )
                );
              var o,
                h = this.keyUriToKeyInfo[n];
              if (null != (i = h) && i.decryptdata.key)
                return (
                  (a.key = h.decryptdata.key),
                  Promise.resolve({ frag: t, keyInfo: h })
                );
              if (null != (r = h) && r.keyLoadPromise)
                switch (
                  null == (o = h.mediaKeySessionContext) ? void 0 : o.keyStatus
                ) {
                  case void 0:
                  case "status-pending":
                  case "usable":
                  case "usable-in-future":
                    return h.keyLoadPromise.then(function (e) {
                      return (
                        (a.key = e.keyInfo.decryptdata.key),
                        { frag: t, keyInfo: h }
                      );
                    });
                }
              switch (
                ((h = this.keyUriToKeyInfo[n] =
                  {
                    decryptdata: a,
                    keyLoadPromise: null,
                    loader: null,
                    mediaKeySessionContext: null,
                  }),
                a.method)
              ) {
                case "ISO-23001-7":
                case "SAMPLE-AES":
                case "SAMPLE-AES-CENC":
                case "SAMPLE-AES-CTR":
                  return "identity" === a.keyFormat
                    ? this.loadKeyHTTP(h, t)
                    : this.loadKeyEME(h, t);
                case "AES-128":
                  return this.loadKeyHTTP(h, t);
                default:
                  return Promise.reject(
                    this.createKeyLoadError(
                      t,
                      w.KEY_LOAD_ERROR,
                      new Error(
                        'Key supplied with unsupported METHOD: "' +
                          a.method +
                          '"'
                      )
                    )
                  );
              }
            }),
            (e.loadKeyEME = function (t, e) {
              var i = { frag: e, keyInfo: t };
              if (this.emeController && this.config.emeEnabled) {
                var r = this.emeController.loadKey(i);
                if (r)
                  return (t.keyLoadPromise = r.then(function (e) {
                    return (t.mediaKeySessionContext = e), i;
                  })).catch(function (e) {
                    throw ((t.keyLoadPromise = null), e);
                  });
              }
              return Promise.resolve(i);
            }),
            (e.loadKeyHTTP = function (t, e) {
              var i = this,
                a = this.config,
                s = new a.loader(a);
              return (
                (e.keyLoader = t.loader = s),
                (t.keyLoadPromise = new Promise(function (n, o) {
                  var h = {
                      keyInfo: t,
                      frag: e,
                      responseType: "arraybuffer",
                      url: t.decryptdata.uri,
                    },
                    l = a.keyLoadPolicy.default,
                    A = {
                      loadPolicy: l,
                      timeout: l.maxLoadTimeMs,
                      maxRetry: 0,
                      retryDelay: 0,
                      maxRetryDelay: 0,
                    },
                    d = {
                      onSuccess: function (t, e, r, a) {
                        var s = r.frag,
                          h = r.keyInfo,
                          l = r.url;
                        if (!s.decryptdata || h !== i.keyUriToKeyInfo[l])
                          return o(
                            i.createKeyLoadError(
                              s,
                              w.KEY_LOAD_ERROR,
                              new Error(
                                "after key load, decryptdata unset or changed"
                              ),
                              a
                            )
                          );
                        (h.decryptdata.key = s.decryptdata.key =
                          new Uint8Array(t.data)),
                          (s.keyLoader = null),
                          (h.loader = null),
                          n({ frag: s, keyInfo: h });
                      },
                      onError: function (t, a, s, n) {
                        i.resetLoader(a),
                          o(
                            i.createKeyLoadError(
                              e,
                              w.KEY_LOAD_ERROR,
                              new Error(
                                "HTTP Error " +
                                  t.code +
                                  " loading key " +
                                  t.text
                              ),
                              s,
                              r({ url: h.url, data: void 0 }, t)
                            )
                          );
                      },
                      onTimeout: function (t, r, a) {
                        i.resetLoader(r),
                          o(
                            i.createKeyLoadError(
                              e,
                              w.KEY_LOAD_TIMEOUT,
                              new Error("key loading timed out"),
                              a
                            )
                          );
                      },
                      onAbort: function (t, r, a) {
                        i.resetLoader(r),
                          o(
                            i.createKeyLoadError(
                              e,
                              w.INTERNAL_ABORTED,
                              new Error("key loading aborted"),
                              a
                            )
                          );
                      },
                    };
                  s.load(h, A, d);
                }))
              );
            }),
            (e.resetLoader = function (t) {
              var e = t.frag,
                i = t.keyInfo,
                r = t.url,
                a = i.loader;
              e.keyLoader === a && ((e.keyLoader = null), (i.loader = null)),
                delete this.keyUriToKeyInfo[r],
                a && a.destroy();
            }),
            t
          );
        })(),
        bi = (function () {
          function t() {
            (this._boundTick = void 0),
              (this._tickTimer = null),
              (this._tickInterval = null),
              (this._tickCallCount = 0),
              (this._boundTick = this.tick.bind(this));
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.onHandlerDestroying(), this.onHandlerDestroyed();
            }),
            (e.onHandlerDestroying = function () {
              this.clearNextTick(), this.clearInterval();
            }),
            (e.onHandlerDestroyed = function () {}),
            (e.hasInterval = function () {
              return !!this._tickInterval;
            }),
            (e.hasNextTick = function () {
              return !!this._tickTimer;
            }),
            (e.setInterval = function (t) {
              return (
                !this._tickInterval &&
                ((this._tickCallCount = 0),
                (this._tickInterval = self.setInterval(this._boundTick, t)),
                !0)
              );
            }),
            (e.clearInterval = function () {
              return (
                !!this._tickInterval &&
                (self.clearInterval(this._tickInterval),
                (this._tickInterval = null),
                !0)
              );
            }),
            (e.clearNextTick = function () {
              return (
                !!this._tickTimer &&
                (self.clearTimeout(this._tickTimer),
                (this._tickTimer = null),
                !0)
              );
            }),
            (e.tick = function () {
              this._tickCallCount++,
                1 === this._tickCallCount &&
                  (this.doTick(),
                  this._tickCallCount > 1 && this.tickImmediate(),
                  (this._tickCallCount = 0));
            }),
            (e.tickImmediate = function () {
              this.clearNextTick(),
                (this._tickTimer = self.setTimeout(this._boundTick, 0));
            }),
            (e.doTick = function () {}),
            t
          );
        })(),
        Di = function (t, e, i, r, a, s) {
          void 0 === r && (r = 0),
            void 0 === a && (a = -1),
            void 0 === s && (s = !1),
            (this.level = void 0),
            (this.sn = void 0),
            (this.part = void 0),
            (this.id = void 0),
            (this.size = void 0),
            (this.partial = void 0),
            (this.transmuxing = {
              start: 0,
              executeStart: 0,
              executeEnd: 0,
              end: 0,
            }),
            (this.buffering = {
              audio: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              video: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              audiovideo: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
            }),
            (this.level = t),
            (this.sn = e),
            (this.id = i),
            (this.size = r),
            (this.part = a),
            (this.partial = s);
        };
      function Ri(t, e) {
        for (var i = 0, r = t.length; i < r; i++) {
          var a;
          if ((null == (a = t[i]) ? void 0 : a.cc) === e) return t[i];
        }
        return null;
      }
      function Li(t, e) {
        if (t) {
          var i = t.start + e;
          (t.start = t.startPTS = i), (t.endPTS = i + t.duration);
        }
      }
      function Ti(t, e) {
        for (var i = e.fragments, r = 0, a = i.length; r < a; r++) Li(i[r], t);
        e.fragmentHint && Li(e.fragmentHint, t), (e.alignedSliding = !0);
      }
      var Mi = (function () {
          function t(t, e) {
            (this.subtle = void 0),
              (this.aesIV = void 0),
              (this.subtle = t),
              (this.aesIV = e);
          }
          return (
            (t.prototype.decrypt = function (t, e) {
              return this.subtle.decrypt(
                { name: "AES-CBC", iv: this.aesIV },
                e,
                t
              );
            }),
            t
          );
        })(),
        Fi = (function () {
          function t(t, e) {
            (this.subtle = void 0),
              (this.key = void 0),
              (this.subtle = t),
              (this.key = e);
          }
          return (
            (t.prototype.expandKey = function () {
              return this.subtle.importKey(
                "raw",
                this.key,
                { name: "AES-CBC" },
                !1,
                ["encrypt", "decrypt"]
              );
            }),
            t
          );
        })(),
        Pi = (function () {
          function t() {
            (this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]),
              (this.subMix = [
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
              ]),
              (this.invSubMix = [
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
              ]),
              (this.sBox = new Uint32Array(256)),
              (this.invSBox = new Uint32Array(256)),
              (this.key = new Uint32Array(0)),
              (this.ksRows = 0),
              (this.keySize = 0),
              (this.keySchedule = void 0),
              (this.invKeySchedule = void 0),
              this.initTable();
          }
          var e = t.prototype;
          return (
            (e.uint8ArrayToUint32Array_ = function (t) {
              for (
                var e = new DataView(t), i = new Uint32Array(4), r = 0;
                r < 4;
                r++
              )
                i[r] = e.getUint32(4 * r);
              return i;
            }),
            (e.initTable = function () {
              var t = this.sBox,
                e = this.invSBox,
                i = this.subMix,
                r = i[0],
                a = i[1],
                s = i[2],
                n = i[3],
                o = this.invSubMix,
                h = o[0],
                l = o[1],
                A = o[2],
                d = o[3],
                u = new Uint32Array(256),
                c = 0,
                g = 0,
                f = 0;
              for (f = 0; f < 256; f++)
                u[f] = f < 128 ? f << 1 : (f << 1) ^ 283;
              for (f = 0; f < 256; f++) {
                var p = g ^ (g << 1) ^ (g << 2) ^ (g << 3) ^ (g << 4);
                (p = (p >>> 8) ^ (255 & p) ^ 99), (t[c] = p), (e[p] = c);
                var m = u[c],
                  v = u[m],
                  E = u[v],
                  y = (257 * u[p]) ^ (16843008 * p);
                (r[c] = (y << 24) | (y >>> 8)),
                  (a[c] = (y << 16) | (y >>> 16)),
                  (s[c] = (y << 8) | (y >>> 24)),
                  (n[c] = y),
                  (y =
                    (16843009 * E) ^ (65537 * v) ^ (257 * m) ^ (16843008 * c)),
                  (h[p] = (y << 24) | (y >>> 8)),
                  (l[p] = (y << 16) | (y >>> 16)),
                  (A[p] = (y << 8) | (y >>> 24)),
                  (d[p] = y),
                  c ? ((c = m ^ u[u[u[E ^ m]]]), (g ^= u[u[g]])) : (c = g = 1);
              }
            }),
            (e.expandKey = function (t) {
              for (
                var e = this.uint8ArrayToUint32Array_(t), i = !0, r = 0;
                r < e.length && i;

              )
                (i = e[r] === this.key[r]), r++;
              if (!i) {
                this.key = e;
                var a = (this.keySize = e.length);
                if (4 !== a && 6 !== a && 8 !== a)
                  throw new Error("Invalid aes key size=" + a);
                var s,
                  n,
                  o,
                  h,
                  l = (this.ksRows = 4 * (a + 6 + 1)),
                  A = (this.keySchedule = new Uint32Array(l)),
                  d = (this.invKeySchedule = new Uint32Array(l)),
                  u = this.sBox,
                  c = this.rcon,
                  g = this.invSubMix,
                  f = g[0],
                  p = g[1],
                  m = g[2],
                  v = g[3];
                for (s = 0; s < l; s++)
                  s < a
                    ? (o = A[s] = e[s])
                    : ((h = o),
                      s % a == 0
                        ? ((h =
                            (u[(h = (h << 8) | (h >>> 24)) >>> 24] << 24) |
                            (u[(h >>> 16) & 255] << 16) |
                            (u[(h >>> 8) & 255] << 8) |
                            u[255 & h]),
                          (h ^= c[(s / a) | 0] << 24))
                        : a > 6 &&
                          s % a == 4 &&
                          (h =
                            (u[h >>> 24] << 24) |
                            (u[(h >>> 16) & 255] << 16) |
                            (u[(h >>> 8) & 255] << 8) |
                            u[255 & h]),
                      (A[s] = o = (A[s - a] ^ h) >>> 0));
                for (n = 0; n < l; n++)
                  (s = l - n),
                    (h = 3 & n ? A[s] : A[s - 4]),
                    (d[n] =
                      n < 4 || s <= 4
                        ? h
                        : f[u[h >>> 24]] ^
                          p[u[(h >>> 16) & 255]] ^
                          m[u[(h >>> 8) & 255]] ^
                          v[u[255 & h]]),
                    (d[n] = d[n] >>> 0);
              }
            }),
            (e.networkToHostOrderSwap = function (t) {
              return (
                (t << 24) |
                ((65280 & t) << 8) |
                ((16711680 & t) >> 8) |
                (t >>> 24)
              );
            }),
            (e.decrypt = function (t, e, i) {
              for (
                var r,
                  a,
                  s,
                  n,
                  o,
                  h,
                  l,
                  A,
                  d,
                  u,
                  c,
                  g,
                  f,
                  p,
                  m = this.keySize + 6,
                  v = this.invKeySchedule,
                  E = this.invSBox,
                  y = this.invSubMix,
                  I = y[0],
                  C = y[1],
                  B = y[2],
                  k = y[3],
                  x = this.uint8ArrayToUint32Array_(i),
                  w = x[0],
                  Q = x[1],
                  S = x[2],
                  b = x[3],
                  D = new Int32Array(t),
                  R = new Int32Array(D.length),
                  L = this.networkToHostOrderSwap;
                e < D.length;

              ) {
                for (
                  d = L(D[e]),
                    u = L(D[e + 1]),
                    c = L(D[e + 2]),
                    g = L(D[e + 3]),
                    o = d ^ v[0],
                    h = g ^ v[1],
                    l = c ^ v[2],
                    A = u ^ v[3],
                    f = 4,
                    p = 1;
                  p < m;
                  p++
                )
                  (r =
                    I[o >>> 24] ^
                    C[(h >> 16) & 255] ^
                    B[(l >> 8) & 255] ^
                    k[255 & A] ^
                    v[f]),
                    (a =
                      I[h >>> 24] ^
                      C[(l >> 16) & 255] ^
                      B[(A >> 8) & 255] ^
                      k[255 & o] ^
                      v[f + 1]),
                    (s =
                      I[l >>> 24] ^
                      C[(A >> 16) & 255] ^
                      B[(o >> 8) & 255] ^
                      k[255 & h] ^
                      v[f + 2]),
                    (n =
                      I[A >>> 24] ^
                      C[(o >> 16) & 255] ^
                      B[(h >> 8) & 255] ^
                      k[255 & l] ^
                      v[f + 3]),
                    (o = r),
                    (h = a),
                    (l = s),
                    (A = n),
                    (f += 4);
                (r =
                  (E[o >>> 24] << 24) ^
                  (E[(h >> 16) & 255] << 16) ^
                  (E[(l >> 8) & 255] << 8) ^
                  E[255 & A] ^
                  v[f]),
                  (a =
                    (E[h >>> 24] << 24) ^
                    (E[(l >> 16) & 255] << 16) ^
                    (E[(A >> 8) & 255] << 8) ^
                    E[255 & o] ^
                    v[f + 1]),
                  (s =
                    (E[l >>> 24] << 24) ^
                    (E[(A >> 16) & 255] << 16) ^
                    (E[(o >> 8) & 255] << 8) ^
                    E[255 & h] ^
                    v[f + 2]),
                  (n =
                    (E[A >>> 24] << 24) ^
                    (E[(o >> 16) & 255] << 16) ^
                    (E[(h >> 8) & 255] << 8) ^
                    E[255 & l] ^
                    v[f + 3]),
                  (R[e] = L(r ^ w)),
                  (R[e + 1] = L(n ^ Q)),
                  (R[e + 2] = L(s ^ S)),
                  (R[e + 3] = L(a ^ b)),
                  (w = d),
                  (Q = u),
                  (S = c),
                  (b = g),
                  (e += 4);
              }
              return R.buffer;
            }),
            t
          );
        })(),
        _i = (function () {
          function t(t, e) {
            var i = (void 0 === e ? {} : e).removePKCS7Padding,
              r = void 0 === i || i;
            if (
              ((this.logEnabled = !0),
              (this.removePKCS7Padding = void 0),
              (this.subtle = null),
              (this.softwareDecrypter = null),
              (this.key = null),
              (this.fastAesKey = null),
              (this.remainderData = null),
              (this.currentIV = null),
              (this.currentResult = null),
              (this.useSoftware = void 0),
              (this.useSoftware = t.enableSoftwareAES),
              (this.removePKCS7Padding = r),
              r)
            )
              try {
                var a = self.crypto;
                a && (this.subtle = a.subtle || a.webkitSubtle);
              } catch (s) {}
            null === this.subtle && (this.useSoftware = !0);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.subtle = null),
                (this.softwareDecrypter = null),
                (this.key = null),
                (this.fastAesKey = null),
                (this.remainderData = null),
                (this.currentIV = null),
                (this.currentResult = null);
            }),
            (e.isSync = function () {
              return this.useSoftware;
            }),
            (e.flush = function () {
              var t = this.currentResult,
                e = this.remainderData;
              if (!t || e) return this.reset(), null;
              var i,
                r,
                a,
                s = new Uint8Array(t);
              return (
                this.reset(),
                this.removePKCS7Padding
                  ? (a =
                      (r = (i = s).byteLength) &&
                      new DataView(i.buffer).getUint8(r - 1))
                    ? K(i, 0, r - a)
                    : i
                  : s
              );
            }),
            (e.reset = function () {
              (this.currentResult = null),
                (this.currentIV = null),
                (this.remainderData = null),
                this.softwareDecrypter && (this.softwareDecrypter = null);
            }),
            (e.decrypt = function (t, e, i) {
              var r = this;
              return this.useSoftware
                ? new Promise(function (a, s) {
                    r.softwareDecrypt(new Uint8Array(t), e, i);
                    var n = r.flush();
                    n
                      ? a(n.buffer)
                      : s(
                          new Error("[softwareDecrypt] Failed to decrypt data")
                        );
                  })
                : this.webCryptoDecrypt(new Uint8Array(t), e, i);
            }),
            (e.softwareDecrypt = function (t, e, i) {
              var r = this.currentIV,
                a = this.currentResult,
                s = this.remainderData;
              this.logOnce("JS AES decrypt"),
                s && ((t = wt(s, t)), (this.remainderData = null));
              var n = this.getValidChunk(t);
              if (!n.length) return null;
              r && (i = r);
              var o = this.softwareDecrypter;
              o || (o = this.softwareDecrypter = new Pi()), o.expandKey(e);
              var h = a;
              return (
                (this.currentResult = o.decrypt(n.buffer, 0, i)),
                (this.currentIV = K(n, -16).buffer),
                h || null
              );
            }),
            (e.webCryptoDecrypt = function (t, e, i) {
              var r = this,
                a = this.subtle;
              return (
                (this.key === e && this.fastAesKey) ||
                  ((this.key = e), (this.fastAesKey = new Fi(a, e))),
                this.fastAesKey
                  .expandKey()
                  .then(function (e) {
                    return a
                      ? (r.logOnce("WebCrypto AES decrypt"),
                        new Mi(a, new Uint8Array(i)).decrypt(t.buffer, e))
                      : Promise.reject(new Error("web crypto not initialized"));
                  })
                  .catch(function (a) {
                    return (
                      R.warn(
                        "[decrypter]: WebCrypto Error, disable WebCrypto API, " +
                          a.name +
                          ": " +
                          a.message
                      ),
                      r.onWebCryptoError(t, e, i)
                    );
                  })
              );
            }),
            (e.onWebCryptoError = function (t, e, i) {
              (this.useSoftware = !0),
                (this.logEnabled = !0),
                this.softwareDecrypt(t, e, i);
              var r = this.flush();
              if (r) return r.buffer;
              throw new Error(
                "WebCrypto and softwareDecrypt: failed to decrypt data"
              );
            }),
            (e.getValidChunk = function (t) {
              var e = t,
                i = t.length - (t.length % 16);
              return (
                i !== t.length &&
                  ((e = K(t, 0, i)), (this.remainderData = K(t, i))),
                e
              );
            }),
            (e.logOnce = function (t) {
              this.logEnabled &&
                (R.log("[decrypter]: " + t), (this.logEnabled = !1));
            }),
            t
          );
        })(),
        Ni = "STOPPED",
        Ui = "IDLE",
        Gi = "KEY_LOADING",
        Oi = "FRAG_LOADING",
        ji = "FRAG_LOADING_WAITING_RETRY",
        Yi = "PARSING",
        Hi = "PARSED",
        Vi = "ENDED",
        Ki = "ERROR",
        zi = "WAITING_LEVEL",
        qi = (function (t) {
          function e(e, i, r, a, s) {
            var n;
            return (
              ((n = t.call(this) || this).hls = void 0),
              (n.fragPrevious = null),
              (n.fragCurrent = null),
              (n.fragmentTracker = void 0),
              (n.transmuxer = null),
              (n._state = Ni),
              (n.playlistType = void 0),
              (n.media = null),
              (n.mediaBuffer = null),
              (n.config = void 0),
              (n.bitrateTest = !1),
              (n.lastCurrentTime = 0),
              (n.nextLoadPosition = 0),
              (n.startPosition = 0),
              (n.startTimeOffset = null),
              (n.loadedmetadata = !1),
              (n.retryDate = 0),
              (n.levels = null),
              (n.fragmentLoader = void 0),
              (n.keyLoader = void 0),
              (n.levelLastLoaded = null),
              (n.startFragRequested = !1),
              (n.decrypter = void 0),
              (n.initPTS = []),
              (n.onvseeking = null),
              (n.onvended = null),
              (n.logPrefix = ""),
              (n.log = void 0),
              (n.warn = void 0),
              (n.playlistType = s),
              (n.logPrefix = a),
              (n.log = R.log.bind(R, a + ":")),
              (n.warn = R.warn.bind(R, a + ":")),
              (n.hls = e),
              (n.fragmentLoader = new ki(e.config)),
              (n.keyLoader = r),
              (n.fragmentTracker = i),
              (n.config = e.config),
              (n.decrypter = new _i(e.config)),
              e.on(
                k.MANIFEST_LOADED,
                n.onManifestLoaded,
                (function (t) {
                  if (void 0 === t)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return t;
                })(n)
              ),
              n
            );
          }
          h(e, t);
          var i = e.prototype;
          return (
            (i.doTick = function () {
              this.onTickEnd();
            }),
            (i.onTickEnd = function () {}),
            (i.startLoad = function (t) {}),
            (i.stopLoad = function () {
              this.fragmentLoader.abort(),
                this.keyLoader.abort(this.playlistType);
              var t = this.fragCurrent;
              null != t &&
                t.loader &&
                (t.abortRequests(), this.fragmentTracker.removeFragment(t)),
                this.resetTransmuxer(),
                (this.fragCurrent = null),
                (this.fragPrevious = null),
                this.clearInterval(),
                this.clearNextTick(),
                (this.state = Ni);
            }),
            (i._streamEnded = function (t, e) {
              if (e.live || t.nextStart || !t.end || !this.media) return !1;
              var i = e.partList;
              if (null != i && i.length) {
                var r = i[i.length - 1];
                return qe.isBuffered(this.media, r.start + r.duration / 2);
              }
              var a = e.fragments[e.fragments.length - 1].type;
              return this.fragmentTracker.isEndListAppended(a);
            }),
            (i.getLevelDetails = function () {
              var t;
              if (this.levels && null !== this.levelLastLoaded)
                return null == (t = this.levelLastLoaded) ? void 0 : t.details;
            }),
            (i.onMediaAttached = function (t, e) {
              var i = (this.media = this.mediaBuffer = e.media);
              (this.onvseeking = this.onMediaSeeking.bind(this)),
                (this.onvended = this.onMediaEnded.bind(this)),
                i.addEventListener("seeking", this.onvseeking),
                i.addEventListener("ended", this.onvended);
              var r = this.config;
              this.levels &&
                r.autoStartLoad &&
                this.state === Ni &&
                this.startLoad(r.startPosition);
            }),
            (i.onMediaDetaching = function () {
              var t = this.media;
              null != t &&
                t.ended &&
                (this.log("MSE detaching and video ended, reset startPosition"),
                (this.startPosition = this.lastCurrentTime = 0)),
                t &&
                  this.onvseeking &&
                  this.onvended &&
                  (t.removeEventListener("seeking", this.onvseeking),
                  t.removeEventListener("ended", this.onvended),
                  (this.onvseeking = this.onvended = null)),
                this.keyLoader && this.keyLoader.detach(),
                (this.media = this.mediaBuffer = null),
                (this.loadedmetadata = !1),
                this.fragmentTracker.removeAllFragments(),
                this.stopLoad();
            }),
            (i.onMediaSeeking = function () {
              var t = this.config,
                e = this.fragCurrent,
                i = this.media,
                r = this.mediaBuffer,
                a = this.state,
                s = i ? i.currentTime : 0,
                n = qe.bufferInfo(r || i, s, t.maxBufferHole);
              if (
                (this.log(
                  "media seeking to " +
                    (I(s) ? s.toFixed(3) : s) +
                    ", state: " +
                    a
                ),
                this.state === Vi)
              )
                this.resetLoadingState();
              else if (e) {
                var o = t.maxFragLookUpTolerance,
                  h = e.start - o,
                  l = e.start + e.duration + o;
                if (!n.len || l < n.start || h > n.end) {
                  var A = s > l;
                  (s < h || A) &&
                    (A &&
                      e.loader &&
                      (this.log(
                        "seeking outside of buffer while fragment load in progress, cancel fragment load"
                      ),
                      e.abortRequests(),
                      this.resetLoadingState()),
                    (this.fragPrevious = null));
                }
              }
              i &&
                (this.fragmentTracker.removeFragmentsInRange(
                  s,
                  1 / 0,
                  this.playlistType,
                  !0
                ),
                (this.lastCurrentTime = s)),
                this.loadedmetadata ||
                  n.len ||
                  (this.nextLoadPosition = this.startPosition = s),
                this.tickImmediate();
            }),
            (i.onMediaEnded = function () {
              this.startPosition = this.lastCurrentTime = 0;
            }),
            (i.onManifestLoaded = function (t, e) {
              (this.startTimeOffset = e.startTimeOffset), (this.initPTS = []);
            }),
            (i.onHandlerDestroying = function () {
              this.hls.off(k.MANIFEST_LOADED, this.onManifestLoaded, this),
                this.stopLoad(),
                t.prototype.onHandlerDestroying.call(this),
                (this.hls = null);
            }),
            (i.onHandlerDestroyed = function () {
              (this.state = Ni),
                this.fragmentLoader && this.fragmentLoader.destroy(),
                this.keyLoader && this.keyLoader.destroy(),
                this.decrypter && this.decrypter.destroy(),
                (this.hls =
                  this.log =
                  this.warn =
                  this.decrypter =
                  this.keyLoader =
                  this.fragmentLoader =
                  this.fragmentTracker =
                    null),
                t.prototype.onHandlerDestroyed.call(this);
            }),
            (i.loadFragment = function (t, e, i) {
              this._loadFragForPlayback(t, e, i);
            }),
            (i._loadFragForPlayback = function (t, e, i) {
              var r = this;
              this._doFragLoad(t, e, i, function (e) {
                if (r.fragContextChanged(t))
                  return (
                    r.warn(
                      "Fragment " +
                        t.sn +
                        (e.part ? " p: " + e.part.index : "") +
                        " of level " +
                        t.level +
                        " was dropped during download."
                    ),
                    void r.fragmentTracker.removeFragment(t)
                  );
                t.stats.chunkCount++, r._handleFragmentLoadProgress(e);
              })
                .then(function (e) {
                  if (e) {
                    var i = r.state;
                    r.fragContextChanged(t)
                      ? (i === Oi || (!r.fragCurrent && i === Yi)) &&
                        (r.fragmentTracker.removeFragment(t), (r.state = Ui))
                      : ("payload" in e &&
                          (r.log(
                            "Loaded fragment " + t.sn + " of level " + t.level
                          ),
                          r.hls.trigger(k.FRAG_LOADED, e)),
                        r._handleFragmentLoadComplete(e));
                  }
                })
                .catch(function (e) {
                  r.state !== Ni &&
                    r.state !== Ki &&
                    (r.warn(e), r.resetFragmentLoading(t));
                });
            }),
            (i.clearTrackerIfNeeded = function (t) {
              var e,
                i = this.fragmentTracker;
              if (i.getState(t) === mi) {
                var r = t.type,
                  a = this.getFwdBufferInfo(this.mediaBuffer, r),
                  s = Math.max(
                    t.duration,
                    a ? a.len : this.config.maxBufferLength
                  );
                this.reduceMaxBufferLength(s) && i.removeFragment(t);
              } else
                0 ===
                (null == (e = this.mediaBuffer) ? void 0 : e.buffered.length)
                  ? i.removeAllFragments()
                  : i.hasParts(t.type) &&
                    (i.detectPartialFragments({
                      frag: t,
                      part: null,
                      stats: t.stats,
                      id: t.type,
                    }),
                    i.getState(t) === vi && i.removeFragment(t));
            }),
            (i.checkLiveUpdate = function (t) {
              if (t.updated && !t.live) {
                var e = t.fragments[t.fragments.length - 1];
                this.fragmentTracker.detectPartialFragments({
                  frag: e,
                  part: null,
                  stats: e.stats,
                  id: e.type,
                });
              }
              t.fragments[0] || (t.deltaUpdateFailed = !0);
            }),
            (i.flushMainBuffer = function (t, e, i) {
              if ((void 0 === i && (i = null), t - e)) {
                var r = { startOffset: t, endOffset: e, type: i };
                this.hls.trigger(k.BUFFER_FLUSHING, r);
              }
            }),
            (i._loadInitSegment = function (t, e) {
              var i = this;
              this._doFragLoad(t, e)
                .then(function (e) {
                  if (!e || i.fragContextChanged(t) || !i.levels)
                    throw new Error("init load aborted");
                  return e;
                })
                .then(function (e) {
                  var r = i.hls,
                    a = e.payload,
                    s = t.decryptdata;
                  if (
                    a &&
                    a.byteLength > 0 &&
                    null != s &&
                    s.key &&
                    s.iv &&
                    "AES-128" === s.method
                  ) {
                    var n = self.performance.now();
                    return i.decrypter
                      .decrypt(new Uint8Array(a), s.key.buffer, s.iv.buffer)
                      .catch(function (e) {
                        throw (
                          (r.trigger(k.ERROR, {
                            type: x.MEDIA_ERROR,
                            details: w.FRAG_DECRYPT_ERROR,
                            fatal: !1,
                            error: e,
                            reason: e.message,
                            frag: t,
                          }),
                          e)
                        );
                      })
                      .then(function (a) {
                        var s = self.performance.now();
                        return (
                          r.trigger(k.FRAG_DECRYPTED, {
                            frag: t,
                            payload: a,
                            stats: { tstart: n, tdecrypt: s },
                          }),
                          (e.payload = a),
                          i.completeInitSegmentLoad(e)
                        );
                      });
                  }
                  return i.completeInitSegmentLoad(e);
                })
                .catch(function (e) {
                  i.state !== Ni &&
                    i.state !== Ki &&
                    (i.warn(e), i.resetFragmentLoading(t));
                });
            }),
            (i.completeInitSegmentLoad = function (t) {
              if (!this.levels)
                throw new Error("init load aborted, missing levels");
              var e = t.frag.stats;
              (this.state = Ui),
                (t.frag.data = new Uint8Array(t.payload)),
                (e.parsing.start = e.buffering.start = self.performance.now()),
                (e.parsing.end = e.buffering.end = self.performance.now()),
                this.tick();
            }),
            (i.fragContextChanged = function (t) {
              var e = this.fragCurrent;
              return !t || !e || t.sn !== e.sn || t.level !== e.level;
            }),
            (i.fragBufferedComplete = function (t, e) {
              var i,
                r,
                a,
                s,
                n = this.mediaBuffer ? this.mediaBuffer : this.media;
              if (
                (this.log(
                  "Buffered " +
                    t.type +
                    " sn: " +
                    t.sn +
                    (e ? " part: " + e.index : "") +
                    " of " +
                    (this.playlistType === ne ? "level" : "track") +
                    " " +
                    t.level +
                    " (frag:[" +
                    (null != (i = t.startPTS) ? i : NaN).toFixed(3) +
                    "-" +
                    (null != (r = t.endPTS) ? r : NaN).toFixed(3) +
                    "] > buffer:" +
                    (n
                      ? (function (t) {
                          for (var e = "", i = t.length, r = 0; r < i; r++)
                            e +=
                              "[" +
                              t.start(r).toFixed(3) +
                              "-" +
                              t.end(r).toFixed(3) +
                              "]";
                          return e;
                        })(qe.getBuffered(n))
                      : "(detached)") +
                    ")"
                ),
                "initSegment" !== t.sn)
              ) {
                var o;
                if (t.type !== he) {
                  var h = t.elementaryStreams;
                  if (
                    !Object.keys(h).some(function (t) {
                      return !!h[t];
                    })
                  )
                    return void (this.state = Ui);
                }
                var l = null == (o = this.levels) ? void 0 : o[t.level];
                null != l &&
                  l.fragmentError &&
                  (this.log(
                    "Resetting level fragment error count of " +
                      l.fragmentError +
                      " on frag buffered"
                  ),
                  (l.fragmentError = 0));
              }
              (this.state = Ui),
                n &&
                  (!this.loadedmetadata &&
                    t.type == ne &&
                    n.buffered.length &&
                    (null == (a = this.fragCurrent) ? void 0 : a.sn) ===
                      (null == (s = this.fragPrevious) ? void 0 : s.sn) &&
                    ((this.loadedmetadata = !0), this.seekToStartPos()),
                  this.tick());
            }),
            (i.seekToStartPos = function () {}),
            (i._handleFragmentLoadComplete = function (t) {
              var e = this.transmuxer;
              if (e) {
                var i = t.frag,
                  r = t.part,
                  a = t.partsLoaded,
                  s =
                    !a ||
                    0 === a.length ||
                    a.some(function (t) {
                      return !t;
                    }),
                  n = new Di(
                    i.level,
                    i.sn,
                    i.stats.chunkCount + 1,
                    0,
                    r ? r.index : -1,
                    !s
                  );
                e.flush(n);
              }
            }),
            (i._handleFragmentLoadProgress = function (t) {}),
            (i._doFragLoad = function (t, e, i, r) {
              var a,
                s = this;
              void 0 === i && (i = null);
              var n = null == e ? void 0 : e.details;
              if (!this.levels || !n)
                throw new Error(
                  "frag load aborted, missing level" +
                    (n ? "" : " detail") +
                    "s"
                );
              var o = null;
              if (
                (!t.encrypted || (null != (a = t.decryptdata) && a.key)
                  ? !t.encrypted &&
                    n.encryptedFragments.length &&
                    this.keyLoader.loadClear(t, n.encryptedFragments)
                  : (this.log(
                      "Loading key for " +
                        t.sn +
                        " of [" +
                        n.startSN +
                        "-" +
                        n.endSN +
                        "], " +
                        ("[stream-controller]" === this.logPrefix
                          ? "level"
                          : "track") +
                        " " +
                        t.level
                    ),
                    (this.state = Gi),
                    (this.fragCurrent = t),
                    (o = this.keyLoader.load(t).then(function (t) {
                      if (!s.fragContextChanged(t.frag))
                        return (
                          s.hls.trigger(k.KEY_LOADED, t),
                          s.state === Gi && (s.state = Ui),
                          t
                        );
                    })),
                    this.hls.trigger(k.KEY_LOADING, { frag: t }),
                    null === this.fragCurrent &&
                      (o = Promise.reject(
                        new Error(
                          "frag load aborted, context changed in KEY_LOADING"
                        )
                      ))),
                (i = Math.max(t.start, i || 0)),
                this.config.lowLatencyMode && "initSegment" !== t.sn)
              ) {
                var h = n.partList;
                if (h && r) {
                  i > t.end && n.fragmentHint && (t = n.fragmentHint);
                  var l = this.getNextPart(h, t, i);
                  if (l > -1) {
                    var A,
                      d = h[l];
                    return (
                      this.log(
                        "Loading part sn: " +
                          t.sn +
                          " p: " +
                          d.index +
                          " cc: " +
                          t.cc +
                          " of playlist [" +
                          n.startSN +
                          "-" +
                          n.endSN +
                          "] parts [0-" +
                          l +
                          "-" +
                          (h.length - 1) +
                          "] " +
                          ("[stream-controller]" === this.logPrefix
                            ? "level"
                            : "track") +
                          ": " +
                          t.level +
                          ", target: " +
                          parseFloat(i.toFixed(3))
                      ),
                      (this.nextLoadPosition = d.start + d.duration),
                      (this.state = Oi),
                      (A = o
                        ? o
                            .then(function (i) {
                              return !i || s.fragContextChanged(i.frag)
                                ? null
                                : s.doFragPartsLoad(t, d, e, r);
                            })
                            .catch(function (t) {
                              return s.handleFragLoadError(t);
                            })
                        : this.doFragPartsLoad(t, d, e, r).catch(function (t) {
                            return s.handleFragLoadError(t);
                          })),
                      this.hls.trigger(k.FRAG_LOADING, {
                        frag: t,
                        part: d,
                        targetBufferTime: i,
                      }),
                      null === this.fragCurrent
                        ? Promise.reject(
                            new Error(
                              "frag load aborted, context changed in FRAG_LOADING parts"
                            )
                          )
                        : A
                    );
                  }
                  if (!t.url || this.loadedEndOfParts(h, i))
                    return Promise.resolve(null);
                }
              }
              this.log(
                "Loading fragment " +
                  t.sn +
                  " cc: " +
                  t.cc +
                  " " +
                  (n ? "of [" + n.startSN + "-" + n.endSN + "] " : "") +
                  ("[stream-controller]" === this.logPrefix
                    ? "level"
                    : "track") +
                  ": " +
                  t.level +
                  ", target: " +
                  parseFloat(i.toFixed(3))
              ),
                I(t.sn) &&
                  !this.bitrateTest &&
                  (this.nextLoadPosition = t.start + t.duration),
                (this.state = Oi);
              var u,
                c = this.config.progressive;
              return (
                (u =
                  c && o
                    ? o
                        .then(function (e) {
                          return !e ||
                            s.fragContextChanged(null == e ? void 0 : e.frag)
                            ? null
                            : s.fragmentLoader.load(t, r);
                        })
                        .catch(function (t) {
                          return s.handleFragLoadError(t);
                        })
                    : Promise.all([
                        this.fragmentLoader.load(t, c ? r : void 0),
                        o,
                      ])
                        .then(function (t) {
                          var e = t[0];
                          return !c && e && r && r(e), e;
                        })
                        .catch(function (t) {
                          return s.handleFragLoadError(t);
                        })),
                this.hls.trigger(k.FRAG_LOADING, {
                  frag: t,
                  targetBufferTime: i,
                }),
                null === this.fragCurrent
                  ? Promise.reject(
                      new Error(
                        "frag load aborted, context changed in FRAG_LOADING"
                      )
                    )
                  : u
              );
            }),
            (i.doFragPartsLoad = function (t, e, i, r) {
              var a = this;
              return new Promise(function (s, n) {
                var o,
                  h = [],
                  l = null == (o = i.details) ? void 0 : o.partList;
                !(function e(o) {
                  a.fragmentLoader
                    .loadPart(t, o, r)
                    .then(function (r) {
                      h[o.index] = r;
                      var n = r.part;
                      a.hls.trigger(k.FRAG_LOADED, r);
                      var A =
                        be(i, t.sn, o.index + 1) || De(l, t.sn, o.index + 1);
                      if (!A) return s({ frag: t, part: n, partsLoaded: h });
                      e(A);
                    })
                    .catch(n);
                })(e);
              });
            }),
            (i.handleFragLoadError = function (t) {
              if ("data" in t) {
                var e = t.data;
                t.data && e.details === w.INTERNAL_ABORTED
                  ? this.handleFragLoadAborted(e.frag, e.part)
                  : this.hls.trigger(k.ERROR, e);
              } else
                this.hls.trigger(k.ERROR, {
                  type: x.OTHER_ERROR,
                  details: w.INTERNAL_EXCEPTION,
                  err: t,
                  error: t,
                  fatal: !0,
                });
              return null;
            }),
            (i._handleTransmuxerFlush = function (t) {
              var e = this.getCurrentContext(t);
              if (e && this.state === Yi) {
                var i = e.frag,
                  r = e.part,
                  a = e.level,
                  s = self.performance.now();
                (i.stats.parsing.end = s),
                  r && (r.stats.parsing.end = s),
                  this.updateLevelTiming(i, r, a, t.partial);
              } else
                this.fragCurrent ||
                  this.state === Ni ||
                  this.state === Ki ||
                  (this.state = Ui);
            }),
            (i.getCurrentContext = function (t) {
              var e = this.levels,
                i = this.fragCurrent,
                r = t.level,
                a = t.sn,
                s = t.part;
              if (null == e || !e[r])
                return (
                  this.warn(
                    "Levels object was unset while buffering fragment " +
                      a +
                      " of level " +
                      r +
                      ". The current chunk will not be buffered."
                  ),
                  null
                );
              var n = e[r],
                o = s > -1 ? be(n, a, s) : null,
                h = o
                  ? o.fragment
                  : (function (t, e, i) {
                      if (null == t || !t.details) return null;
                      var r = t.details,
                        a = r.fragments[e - r.startSN];
                      return (
                        a ||
                        ((a = r.fragmentHint) && a.sn === e
                          ? a
                          : e < r.startSN && i && i.sn === e
                          ? i
                          : null)
                      );
                    })(n, a, i);
              return h
                ? (i && i !== h && (h.stats = i.stats),
                  { frag: h, part: o, level: n })
                : null;
            }),
            (i.bufferFragmentData = function (t, e, i, r, a) {
              var s;
              if (t && this.state === Yi) {
                var n = t.data1,
                  o = t.data2,
                  h = n;
                if ((n && o && (h = wt(n, o)), null != (s = h) && s.length)) {
                  var l = {
                    type: t.type,
                    frag: e,
                    part: i,
                    chunkMeta: r,
                    parent: e.type,
                    data: h,
                  };
                  if (
                    (this.hls.trigger(k.BUFFER_APPENDING, l),
                    t.dropped && t.independent && !i)
                  ) {
                    if (a) return;
                    this.flushBufferGap(e);
                  }
                }
              }
            }),
            (i.flushBufferGap = function (t) {
              var e = this.media;
              if (e)
                if (qe.isBuffered(e, e.currentTime)) {
                  var i = e.currentTime,
                    r = qe.bufferInfo(e, i, 0),
                    a = t.duration,
                    s = Math.min(
                      2 * this.config.maxFragLookUpTolerance,
                      0.25 * a
                    ),
                    n = Math.max(Math.min(t.start - s, r.end - s), i + s);
                  t.start - n > s && this.flushMainBuffer(n, t.start);
                } else this.flushMainBuffer(0, t.start);
            }),
            (i.getFwdBufferInfo = function (t, e) {
              var i = this.getLoadPosition();
              return I(i) ? this.getFwdBufferInfoAtPos(t, i, e) : null;
            }),
            (i.getFwdBufferInfoAtPos = function (t, e, i) {
              var r = this.config.maxBufferHole,
                a = qe.bufferInfo(t, e, r);
              if (0 === a.len && void 0 !== a.nextStart) {
                var s = this.fragmentTracker.getBufferedFrag(e, i);
                if (s && a.nextStart < s.end)
                  return qe.bufferInfo(t, e, Math.max(a.nextStart, r));
              }
              return a;
            }),
            (i.getMaxBufferLength = function (t) {
              var e,
                i = this.config;
              return (
                (e = t
                  ? Math.max((8 * i.maxBufferSize) / t, i.maxBufferLength)
                  : i.maxBufferLength),
                Math.min(e, i.maxMaxBufferLength)
              );
            }),
            (i.reduceMaxBufferLength = function (t) {
              var e = this.config,
                i = t || e.maxBufferLength;
              return (
                e.maxMaxBufferLength >= i &&
                ((e.maxMaxBufferLength /= 2),
                this.warn(
                  "Reduce max buffer length to " + e.maxMaxBufferLength + "s"
                ),
                !0)
              );
            }),
            (i.getAppendedFrag = function (t, e) {
              var i = this.fragmentTracker.getAppendedFrag(t, ne);
              return i && "fragment" in i ? i.fragment : i;
            }),
            (i.getNextFragment = function (t, e) {
              var i = e.fragments,
                r = i.length;
              if (!r) return null;
              var a,
                s = this.config,
                n = i[0].start;
              if (e.live) {
                var o = s.initialLiveManifestSize;
                if (r < o)
                  return (
                    this.warn(
                      "Not enough fragments to start playback (have: " +
                        r +
                        ", need: " +
                        o +
                        ")"
                    ),
                    null
                  );
                ((!e.PTSKnown &&
                  !this.startFragRequested &&
                  -1 === this.startPosition) ||
                  t < n) &&
                  ((a = this.getInitialLiveFragment(e, i)),
                  (this.startPosition = this.nextLoadPosition =
                    a ? this.hls.liveSyncPosition || a.start : t));
              } else t <= n && (a = i[0]);
              if (!a) {
                var h = s.lowLatencyMode ? e.partEnd : e.fragmentEnd;
                a = this.getFragmentAtPosition(t, h, e);
              }
              return this.mapToInitFragWhenRequired(a);
            }),
            (i.isLoopLoading = function (t, e) {
              var i = this.fragmentTracker.getState(t);
              return (
                (i === Ei || (i === vi && !!t.gap)) && this.nextLoadPosition > e
              );
            }),
            (i.getNextFragmentLoopLoading = function (t, e, i, r, a) {
              var s = t.gap,
                n = this.getNextFragment(this.nextLoadPosition, e);
              if (null === n) return n;
              if (((t = n), s && t && !t.gap && i.nextStart)) {
                var o = this.getFwdBufferInfoAtPos(
                  this.mediaBuffer ? this.mediaBuffer : this.media,
                  i.nextStart,
                  r
                );
                if (null !== o && i.len + o.len >= a)
                  return (
                    this.log(
                      'buffer full after gaps in "' +
                        r +
                        '" playlist starting at sn: ' +
                        t.sn
                    ),
                    null
                  );
              }
              return t;
            }),
            (i.mapToInitFragWhenRequired = function (t) {
              return null == t ||
                !t.initSegment ||
                (null != t && t.initSegment.data) ||
                this.bitrateTest
                ? t
                : t.initSegment;
            }),
            (i.getNextPart = function (t, e, i) {
              for (
                var r = -1, a = !1, s = !0, n = 0, o = t.length;
                n < o;
                n++
              ) {
                var h = t[n];
                if (((s = s && !h.independent), r > -1 && i < h.start)) break;
                var l = h.loaded;
                l
                  ? (r = -1)
                  : (a || h.independent || s) && h.fragment === e && (r = n),
                  (a = l);
              }
              return r;
            }),
            (i.loadedEndOfParts = function (t, e) {
              var i = t[t.length - 1];
              return i && e > i.start && i.loaded;
            }),
            (i.getInitialLiveFragment = function (t, e) {
              var i,
                r,
                a = this.fragPrevious,
                s = null;
              if (a) {
                if (
                  (t.hasProgramDateTime &&
                    (this.log(
                      "Live playlist, switching playlist, load frag with same PDT: " +
                        a.programDateTime
                    ),
                    (s = (function (t, e, i) {
                      if (null === e || !Array.isArray(t) || !t.length || !I(e))
                        return null;
                      if (e < (t[0].programDateTime || 0)) return null;
                      if (e >= (t[t.length - 1].endProgramDateTime || 0))
                        return null;
                      i = i || 0;
                      for (var r = 0; r < t.length; ++r) {
                        var a = t[r];
                        if (Ge(e, i, a)) return a;
                      }
                      return null;
                    })(
                      e,
                      a.endProgramDateTime,
                      this.config.maxFragLookUpTolerance
                    ))),
                  !s)
                ) {
                  var n = a.sn + 1;
                  if (n >= t.startSN && n <= t.endSN) {
                    var o = e[n - t.startSN];
                    a.cc === o.cc &&
                      ((s = o),
                      this.log(
                        "Live playlist, switching playlist, load frag with next SN: " +
                          s.sn
                      ));
                  }
                  s ||
                    ((i = e),
                    (r = a.cc),
                    (s = _e(i, function (t) {
                      return t.cc < r ? 1 : t.cc > r ? -1 : 0;
                    })) &&
                      this.log(
                        "Live playlist, switching playlist, load frag with same CC: " +
                          s.sn
                      ));
                }
              } else {
                var h = this.hls.liveSyncPosition;
                null !== h &&
                  (s = this.getFragmentAtPosition(
                    h,
                    this.bitrateTest ? t.fragmentEnd : t.edge,
                    t
                  ));
              }
              return s;
            }),
            (i.getFragmentAtPosition = function (t, e, i) {
              var r,
                a = this.config,
                s = this.fragPrevious,
                n = i.fragments,
                o = i.endSN,
                h = i.fragmentHint,
                l = a.maxFragLookUpTolerance,
                A = i.partList,
                d = !!(a.lowLatencyMode && null != A && A.length && h);
              if (
                (d && h && !this.bitrateTest && ((n = n.concat(h)), (o = h.sn)),
                (r = t < e ? Ne(s, n, t, t > e - l ? 0 : l) : n[n.length - 1]))
              ) {
                var u = r.sn - i.startSN,
                  c = this.fragmentTracker.getState(r);
                if (
                  ((c === Ei || (c === vi && r.gap)) && (s = r),
                  s &&
                    r.sn === s.sn &&
                    (!d || A[0].fragment.sn > r.sn) &&
                    s &&
                    r.level === s.level)
                ) {
                  var g = n[u + 1];
                  r =
                    r.sn < o && this.fragmentTracker.getState(g) !== Ei
                      ? g
                      : null;
                }
              }
              return r;
            }),
            (i.synchronizeToLiveEdge = function (t) {
              var e = this.config,
                i = this.media;
              if (i) {
                var r = this.hls.liveSyncPosition,
                  a = i.currentTime,
                  s = t.fragments[0].start,
                  n = t.edge,
                  o = a >= s - e.maxFragLookUpTolerance && a <= n;
                if (null !== r && i.duration > r && (a < r || !o)) {
                  var h =
                    void 0 !== e.liveMaxLatencyDuration
                      ? e.liveMaxLatencyDuration
                      : e.liveMaxLatencyDurationCount * t.targetduration;
                  ((!o && i.readyState < 4) || a < n - h) &&
                    (this.loadedmetadata || (this.nextLoadPosition = r),
                    i.readyState &&
                      (this.warn(
                        "Playback: " +
                          a.toFixed(3) +
                          " is located too far from the end of live sliding playlist: " +
                          n +
                          ", reset currentTime to : " +
                          r.toFixed(3)
                      ),
                      (i.currentTime = r)));
                }
              }
            }),
            (i.alignPlaylists = function (t, e, i) {
              var r = t.fragments.length;
              if (!r) return this.warn("No fragments in live playlist"), 0;
              var a = t.fragments[0].start,
                s = !e,
                n = t.alignedSliding && I(a);
              if (s || (!n && !a)) {
                var o = this.fragPrevious;
                !(function (t, e, i) {
                  e &&
                    ((function (t, e, i) {
                      if (
                        ((a = t),
                        (s = e),
                        i && (s.endCC > s.startCC || (a && a.cc < s.startCC)))
                      ) {
                        var r = (function (t, e) {
                          var i = t.fragments,
                            r = e.fragments;
                          if (r.length && i.length) {
                            var a = Ri(i, r[0].cc);
                            if (a && (!a || a.startPTS)) return a;
                            R.log("No frag in previous level to align on");
                          } else R.log("No fragments to align");
                        })(i, e);
                        r &&
                          I(r.start) &&
                          (R.log(
                            "Adjusting PTS using last level due to CC increase within current level " +
                              e.url
                          ),
                          Ti(r.start, e));
                      }
                      var a, s;
                    })(t, i, e),
                    !i.alignedSliding &&
                      e &&
                      (function (t, e) {
                        if (t.hasProgramDateTime && e.hasProgramDateTime) {
                          var i,
                            r,
                            a = t.fragments,
                            s = e.fragments;
                          if (a.length && s.length) {
                            var n = Math.min(e.endCC, t.endCC);
                            e.startCC < n &&
                              t.startCC < n &&
                              ((i = Ri(s, n)), (r = Ri(a, n))),
                              (i && r) ||
                                (r =
                                  Ri(a, (i = s[Math.floor(s.length / 2)]).cc) ||
                                  a[Math.floor(a.length / 2)]);
                            var o = i.programDateTime,
                              h = r.programDateTime;
                            o &&
                              h &&
                              Ti((h - o) / 1e3 - (r.start - i.start), t);
                          }
                        }
                      })(i, e),
                    i.alignedSliding || !e || i.skippedSegments || Se(e, i));
                })(o, i, t);
                var h = t.fragments[0].start;
                return (
                  this.log(
                    "Live playlist sliding: " +
                      h.toFixed(2) +
                      " start-sn: " +
                      (e ? e.startSN : "na") +
                      "->" +
                      t.startSN +
                      " prev-sn: " +
                      (o ? o.sn : "na") +
                      " fragments: " +
                      r
                  ),
                  h
                );
              }
              return a;
            }),
            (i.waitForCdnTuneIn = function (t) {
              return (
                t.live &&
                t.canBlockReload &&
                t.partTarget &&
                t.tuneInGoal > Math.max(t.partHoldBack, 3 * t.partTarget)
              );
            }),
            (i.setStartPosition = function (t, e) {
              var i = this.startPosition;
              if (
                (i < e && (i = -1), -1 === i || -1 === this.lastCurrentTime)
              ) {
                var r = null !== this.startTimeOffset,
                  a = r ? this.startTimeOffset : t.startTimeOffset;
                null !== a && I(a)
                  ? ((i = e + a),
                    a < 0 && (i += t.totalduration),
                    (i = Math.min(Math.max(e, i), e + t.totalduration)),
                    this.log(
                      "Start time offset " +
                        a +
                        " found in " +
                        (r ? "multivariant" : "media") +
                        " playlist, adjust startPosition to " +
                        i
                    ),
                    (this.startPosition = i))
                  : t.live
                  ? (i = this.hls.liveSyncPosition || e)
                  : (this.startPosition = i = 0),
                  (this.lastCurrentTime = i);
              }
              this.nextLoadPosition = i;
            }),
            (i.getLoadPosition = function () {
              var t = this.media,
                e = 0;
              return (
                this.loadedmetadata && t
                  ? (e = t.currentTime)
                  : this.nextLoadPosition && (e = this.nextLoadPosition),
                e
              );
            }),
            (i.handleFragLoadAborted = function (t, e) {
              this.transmuxer &&
                "initSegment" !== t.sn &&
                t.stats.aborted &&
                (this.warn(
                  "Fragment " +
                    t.sn +
                    (e ? " part " + e.index : "") +
                    " of level " +
                    t.level +
                    " was aborted"
                ),
                this.resetFragmentLoading(t));
            }),
            (i.resetFragmentLoading = function (t) {
              (this.fragCurrent &&
                (this.fragContextChanged(t) || this.state === ji)) ||
                (this.state = Ui);
            }),
            (i.onFragmentOrKeyLoadError = function (t, e) {
              if (e.chunkMeta && !e.frag) {
                var i = this.getCurrentContext(e.chunkMeta);
                i && (e.frag = i.frag);
              }
              var r = e.frag;
              if (r && r.type === t && this.levels)
                if (this.fragContextChanged(r)) {
                  var a;
                  this.warn(
                    "Frag load error must match current frag to retry " +
                      r.url +
                      " > " +
                      (null == (a = this.fragCurrent) ? void 0 : a.url)
                  );
                } else {
                  var s = e.details === w.FRAG_GAP;
                  s && this.fragmentTracker.fragBuffered(r, !0);
                  var n = e.errorAction,
                    o = n || {},
                    h = o.action,
                    l = o.retryCount,
                    A = void 0 === l ? 0 : l,
                    d = o.retryConfig;
                  if (n && 5 === h && d) {
                    this.resetStartWhenNotLoaded(this.levelLastLoaded);
                    var u = Me(d, A);
                    this.warn(
                      "Fragment " +
                        r.sn +
                        " of " +
                        t +
                        " " +
                        r.level +
                        " errored with " +
                        e.details +
                        ", retrying loading " +
                        (A + 1) +
                        "/" +
                        d.maxNumRetry +
                        " in " +
                        u +
                        "ms"
                    ),
                      (n.resolved = !0),
                      (this.retryDate = self.performance.now() + u),
                      (this.state = ji);
                  } else if (d && n) {
                    if ((this.resetFragmentErrors(t), !(A < d.maxNumRetry)))
                      return void R.warn(
                        e.details + " reached or exceeded max retry (" + A + ")"
                      );
                    s || 3 === h || (n.resolved = !0);
                  } else
                    2 === (null == n ? void 0 : n.action)
                      ? (this.state = zi)
                      : (this.state = Ki);
                  this.tickImmediate();
                }
            }),
            (i.reduceLengthAndFlushBuffer = function (t) {
              if (this.state === Yi || this.state === Hi) {
                var e = t.parent,
                  i = this.getFwdBufferInfo(this.mediaBuffer, e),
                  r = i && i.len > 0.5;
                r && this.reduceMaxBufferLength(i.len);
                var a = !r;
                return (
                  a &&
                    this.warn(
                      "Buffer full error while media.currentTime is not buffered, flush " +
                        e +
                        " buffer"
                    ),
                  t.frag &&
                    (this.fragmentTracker.removeFragment(t.frag),
                    (this.nextLoadPosition = t.frag.start)),
                  this.resetLoadingState(),
                  a
                );
              }
              return !1;
            }),
            (i.resetFragmentErrors = function (t) {
              t === oe && (this.fragCurrent = null),
                this.loadedmetadata || (this.startFragRequested = !1),
                this.state !== Ni && (this.state = Ui);
            }),
            (i.afterBufferFlushed = function (t, e, i) {
              if (t) {
                var r = qe.getBuffered(t);
                this.fragmentTracker.detectEvictedFragments(e, r, i),
                  this.state === Vi && this.resetLoadingState();
              }
            }),
            (i.resetLoadingState = function () {
              this.log("Reset loading state"),
                (this.fragCurrent = null),
                (this.fragPrevious = null),
                (this.state = Ui);
            }),
            (i.resetStartWhenNotLoaded = function (t) {
              if (!this.loadedmetadata) {
                this.startFragRequested = !1;
                var e = t ? t.details : null;
                null != e && e.live
                  ? ((this.startPosition = -1),
                    this.setStartPosition(e, 0),
                    this.resetLoadingState())
                  : (this.nextLoadPosition = this.startPosition);
              }
            }),
            (i.resetWhenMissingContext = function (t) {
              this.warn(
                "The loading context changed while buffering fragment " +
                  t.sn +
                  " of level " +
                  t.level +
                  ". This chunk will not be buffered."
              ),
                this.removeUnbufferedFrags(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState();
            }),
            (i.removeUnbufferedFrags = function (t) {
              void 0 === t && (t = 0),
                this.fragmentTracker.removeFragmentsInRange(
                  t,
                  1 / 0,
                  this.playlistType,
                  !1,
                  !0
                );
            }),
            (i.updateLevelTiming = function (t, e, i, r) {
              var a,
                s = this,
                n = i.details;
              if (n) {
                if (
                  !Object.keys(t.elementaryStreams).reduce(function (e, a) {
                    var o = t.elementaryStreams[a];
                    if (o) {
                      var h = o.endPTS - o.startPTS;
                      if (h <= 0)
                        return (
                          s.warn(
                            "Could not parse fragment " +
                              t.sn +
                              " " +
                              a +
                              " duration reliably (" +
                              h +
                              ")"
                          ),
                          e || !1
                        );
                      var l = r
                        ? 0
                        : Qe(n, t, o.startPTS, o.endPTS, o.startDTS, o.endDTS);
                      return (
                        s.hls.trigger(k.LEVEL_PTS_UPDATED, {
                          details: n,
                          level: i,
                          drift: l,
                          type: a,
                          frag: t,
                          start: o.startPTS,
                          end: o.endPTS,
                        }),
                        !0
                      );
                    }
                    return e;
                  }, !1) &&
                  null === (null == (a = this.transmuxer) ? void 0 : a.error)
                ) {
                  var o = new Error(
                    "Found no media in fragment " +
                      t.sn +
                      " of level " +
                      t.level +
                      " resetting transmuxer to fallback to playlist timing"
                  );
                  if (
                    (0 === i.fragmentError &&
                      (i.fragmentError++,
                      (t.gap = !0),
                      this.fragmentTracker.removeFragment(t),
                      this.fragmentTracker.fragBuffered(t, !0)),
                    this.warn(o.message),
                    this.hls.trigger(k.ERROR, {
                      type: x.MEDIA_ERROR,
                      details: w.FRAG_PARSING_ERROR,
                      fatal: !1,
                      error: o,
                      frag: t,
                      reason:
                        "Found no media in msn " +
                        t.sn +
                        ' of level "' +
                        i.url +
                        '"',
                    }),
                    !this.hls)
                  )
                    return;
                  this.resetTransmuxer();
                }
                (this.state = Hi),
                  this.hls.trigger(k.FRAG_PARSED, { frag: t, part: e });
              } else this.warn("level.details undefined");
            }),
            (i.resetTransmuxer = function () {
              this.transmuxer &&
                (this.transmuxer.destroy(), (this.transmuxer = null));
            }),
            (i.recoverWorkerError = function (t) {
              "demuxerWorker" === t.event &&
                (this.fragmentTracker.removeAllFragments(),
                this.resetTransmuxer(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState());
            }),
            n(e, [
              {
                key: "state",
                get: function () {
                  return this._state;
                },
                set: function (t) {
                  var e = this._state;
                  e !== t && ((this._state = t), this.log(e + "->" + t));
                },
              },
            ]),
            e
          );
        })(bi);
      function Wi() {
        return self.SourceBuffer || self.WebKitSourceBuffer;
      }
      function Ji() {
        if (!Lt()) return !1;
        var t = Wi();
        return (
          !t ||
          (t.prototype &&
            "function" == typeof t.prototype.appendBuffer &&
            "function" == typeof t.prototype.remove)
        );
      }
      function Zi(t, e) {
        return (
          void 0 === t && (t = ""),
          void 0 === e && (e = 9e4),
          {
            type: t,
            id: -1,
            pid: -1,
            inputTimeScale: e,
            sequenceNumber: -1,
            samples: [],
            dropped: 0,
          }
        );
      }
      var Xi = (function () {
          function t() {
            (this._audioTrack = void 0),
              (this._id3Track = void 0),
              (this.frameIndex = 0),
              (this.cachedData = null),
              (this.basePTS = null),
              (this.initPTS = null),
              (this.lastPTS = null);
          }
          var e = t.prototype;
          return (
            (e.resetInitSegment = function (t, e, i, r) {
              this._id3Track = {
                type: "id3",
                id: 3,
                pid: -1,
                inputTimeScale: 9e4,
                sequenceNumber: 0,
                samples: [],
                dropped: 0,
              };
            }),
            (e.resetTimeStamp = function (t) {
              (this.initPTS = t), this.resetContiguity();
            }),
            (e.resetContiguity = function () {
              (this.basePTS = null),
                (this.lastPTS = null),
                (this.frameIndex = 0);
            }),
            (e.canParse = function (t, e) {
              return !1;
            }),
            (e.appendFrame = function (t, e, i) {}),
            (e.demux = function (t, e) {
              this.cachedData &&
                ((t = wt(this.cachedData, t)), (this.cachedData = null));
              var i,
                r = J(t, 0),
                a = r ? r.length : 0,
                s = this._audioTrack,
                n = this._id3Track,
                o = r ? $(r) : void 0,
                h = t.length;
              for (
                (null === this.basePTS || (0 === this.frameIndex && I(o))) &&
                  ((this.basePTS = $i(o, e, this.initPTS)),
                  (this.lastPTS = this.basePTS)),
                  null === this.lastPTS && (this.lastPTS = this.basePTS),
                  r &&
                    r.length > 0 &&
                    n.samples.push({
                      pts: this.lastPTS,
                      dts: this.lastPTS,
                      data: r,
                      type: ce,
                      duration: Number.POSITIVE_INFINITY,
                    });
                a < h;

              ) {
                if (this.canParse(t, a)) {
                  var l = this.appendFrame(s, t, a);
                  l
                    ? (this.frameIndex++,
                      (this.lastPTS = l.sample.pts),
                      (i = a += l.length))
                    : (a = h);
                } else
                  X(t, a)
                    ? ((r = J(t, a)),
                      n.samples.push({
                        pts: this.lastPTS,
                        dts: this.lastPTS,
                        data: r,
                        type: ce,
                        duration: Number.POSITIVE_INFINITY,
                      }),
                      (i = a += r.length))
                    : a++;
                if (a === h && i !== h) {
                  var A = K(t, i);
                  this.cachedData
                    ? (this.cachedData = wt(this.cachedData, A))
                    : (this.cachedData = A);
                }
              }
              return {
                audioTrack: s,
                videoTrack: Zi(),
                id3Track: n,
                textTrack: Zi(),
              };
            }),
            (e.demuxSampleAes = function (t, e, i) {
              return Promise.reject(
                new Error(
                  "[" +
                    this +
                    "] This demuxer does not support Sample-AES decryption"
                )
              );
            }),
            (e.flush = function (t) {
              var e = this.cachedData;
              return (
                e && ((this.cachedData = null), this.demux(e, 0)),
                {
                  audioTrack: this._audioTrack,
                  videoTrack: Zi(),
                  id3Track: this._id3Track,
                  textTrack: Zi(),
                }
              );
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        $i = function (t, e, i) {
          return I(t)
            ? 90 * t
            : 9e4 * e + (i ? (9e4 * i.baseTime) / i.timescale : 0);
        };
      function tr(t, e) {
        return 255 === t[e] && 240 == (246 & t[e + 1]);
      }
      function er(t, e) {
        return 1 & t[e + 1] ? 7 : 9;
      }
      function ir(t, e) {
        return (
          ((3 & t[e + 3]) << 11) | (t[e + 4] << 3) | ((224 & t[e + 5]) >>> 5)
        );
      }
      function rr(t, e) {
        return e + 1 < t.length && tr(t, e);
      }
      function ar(t, e) {
        if (rr(t, e)) {
          var i = er(t, e);
          if (e + i >= t.length) return !1;
          var r = ir(t, e);
          if (r <= i) return !1;
          var a = e + r;
          return a === t.length || rr(t, a);
        }
        return !1;
      }
      function sr(t, e, i, r, a) {
        if (!t.samplerate) {
          var s = (function (t, e, i, r) {
            var a,
              s,
              n,
              o,
              h = navigator.userAgent.toLowerCase(),
              l = r,
              A = [
                96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3,
                11025, 8e3, 7350,
              ];
            a = 1 + ((192 & e[i + 2]) >>> 6);
            var d = (60 & e[i + 2]) >>> 2;
            if (!(d > A.length - 1))
              return (
                (n = (1 & e[i + 2]) << 2),
                (n |= (192 & e[i + 3]) >>> 6),
                R.log(
                  "manifest codec:" +
                    r +
                    ", ADTS type:" +
                    a +
                    ", samplingIndex:" +
                    d
                ),
                /firefox/i.test(h)
                  ? d >= 6
                    ? ((a = 5), (o = new Array(4)), (s = d - 3))
                    : ((a = 2), (o = new Array(2)), (s = d))
                  : -1 !== h.indexOf("android")
                  ? ((a = 2), (o = new Array(2)), (s = d))
                  : ((a = 5),
                    (o = new Array(4)),
                    (r &&
                      (-1 !== r.indexOf("mp4a.40.29") ||
                        -1 !== r.indexOf("mp4a.40.5"))) ||
                    (!r && d >= 6)
                      ? (s = d - 3)
                      : (((r &&
                          -1 !== r.indexOf("mp4a.40.2") &&
                          ((d >= 6 && 1 === n) || /vivaldi/i.test(h))) ||
                          (!r && 1 === n)) &&
                          ((a = 2), (o = new Array(2))),
                        (s = d))),
                (o[0] = a << 3),
                (o[0] |= (14 & d) >> 1),
                (o[1] |= (1 & d) << 7),
                (o[1] |= n << 3),
                5 === a &&
                  ((o[1] |= (14 & s) >> 1),
                  (o[2] = (1 & s) << 7),
                  (o[2] |= 8),
                  (o[3] = 0)),
                {
                  config: o,
                  samplerate: A[d],
                  channelCount: n,
                  codec: "mp4a.40." + a,
                  manifestCodec: l,
                }
              );
            var u = new Error("invalid ADTS sampling index:" + d);
            t.emit(k.ERROR, k.ERROR, {
              type: x.MEDIA_ERROR,
              details: w.FRAG_PARSING_ERROR,
              fatal: !0,
              error: u,
              reason: u.message,
            });
          })(e, i, r, a);
          if (!s) return;
          (t.config = s.config),
            (t.samplerate = s.samplerate),
            (t.channelCount = s.channelCount),
            (t.codec = s.codec),
            (t.manifestCodec = s.manifestCodec),
            R.log(
              "parsed codec:" +
                t.codec +
                ", rate:" +
                s.samplerate +
                ", channels:" +
                s.channelCount
            );
        }
      }
      function nr(t) {
        return 9216e4 / t;
      }
      function or(t, e, i, r, a) {
        var s,
          n = r + a * nr(t.samplerate),
          o = (function (t, e) {
            var i = er(t, e);
            if (e + i <= t.length) {
              var r = ir(t, e) - i;
              if (r > 0) return { headerLength: i, frameLength: r };
            }
          })(e, i);
        if (o) {
          var h = o.frameLength,
            l = o.headerLength,
            A = l + h,
            d = Math.max(0, i + A - e.length);
          d
            ? (s = new Uint8Array(A - l)).set(e.subarray(i + l, e.length), 0)
            : (s = e.subarray(i + l, i + A));
          var u = { unit: s, pts: n };
          return d || t.samples.push(u), { sample: u, length: A, missing: d };
        }
        var c = e.length - i;
        return (
          (s = new Uint8Array(c)).set(e.subarray(i, e.length), 0),
          { sample: { unit: s, pts: n }, length: c, missing: -1 }
        );
      }
      var hr = null,
        lr = [
          32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32,
          48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40,
          48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64,
          80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48,
          56, 64, 80, 96, 112, 128, 144, 160,
        ],
        Ar = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
        dr = [
          [0, 72, 144, 12],
          [0, 0, 0, 0],
          [0, 72, 144, 12],
          [0, 144, 144, 12],
        ],
        ur = [0, 1, 1, 4];
      function cr(t, e, i, r, a) {
        if (!(i + 24 > e.length)) {
          var s = gr(e, i);
          if (s && i + s.frameLength <= e.length) {
            var n = r + a * ((9e4 * s.samplesPerFrame) / s.sampleRate),
              o = { unit: e.subarray(i, i + s.frameLength), pts: n, dts: n };
            return (
              (t.config = []),
              (t.channelCount = s.channelCount),
              (t.samplerate = s.sampleRate),
              t.samples.push(o),
              { sample: o, length: s.frameLength, missing: 0 }
            );
          }
        }
      }
      function gr(t, e) {
        var i = (t[e + 1] >> 3) & 3,
          r = (t[e + 1] >> 1) & 3,
          a = (t[e + 2] >> 4) & 15,
          s = (t[e + 2] >> 2) & 3;
        if (1 !== i && 0 !== a && 15 !== a && 3 !== s) {
          var n = (t[e + 2] >> 1) & 1,
            o = t[e + 3] >> 6,
            h = 1e3 * lr[14 * (3 === i ? 3 - r : 3 === r ? 3 : 4) + a - 1],
            l = Ar[3 * (3 === i ? 0 : 2 === i ? 1 : 2) + s],
            A = 3 === o ? 1 : 2,
            d = dr[i][r],
            u = ur[r],
            c = 8 * d * u,
            g = Math.floor((d * h) / l + n) * u;
          if (null === hr) {
            var f = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
            hr = f ? parseInt(f[1]) : 0;
          }
          return (
            !!hr &&
              hr <= 87 &&
              2 === r &&
              h >= 224e3 &&
              0 === o &&
              (t[e + 3] = 128 | t[e + 3]),
            {
              sampleRate: l,
              channelCount: A,
              frameLength: g,
              samplesPerFrame: c,
            }
          );
        }
      }
      function fr(t, e) {
        return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1]);
      }
      function pr(t, e) {
        return e + 1 < t.length && fr(t, e);
      }
      function mr(t, e) {
        if (e + 1 < t.length && fr(t, e)) {
          var i = gr(t, e),
            r = 4;
          null != i && i.frameLength && (r = i.frameLength);
          var a = e + r;
          return a === t.length || pr(t, a);
        }
        return !1;
      }
      var vr = (function (t) {
          function e(e, i) {
            var r;
            return (
              ((r = t.call(this) || this).observer = void 0),
              (r.config = void 0),
              (r.observer = e),
              (r.config = i),
              r
            );
          }
          h(e, t);
          var i = e.prototype;
          return (
            (i.resetInitSegment = function (e, i, r, a) {
              t.prototype.resetInitSegment.call(this, e, i, r, a),
                (this._audioTrack = {
                  container: "audio/adts",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "aac",
                  samples: [],
                  manifestCodec: i,
                  duration: a,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              var e = J(t, 0),
                i = (null == e ? void 0 : e.length) || 0;
              if (mr(t, i)) return !1;
              for (var r = t.length; i < r; i++)
                if (ar(t, i)) return R.log("ADTS sync word found !"), !0;
              return !1;
            }),
            (i.canParse = function (t, e) {
              return (
                (r = e) + 5 < (i = t).length &&
                tr(i, r) &&
                ir(i, r) <= i.length - r
              );
              var i, r;
            }),
            (i.appendFrame = function (t, e, i) {
              sr(t, this.observer, e, i, t.manifestCodec);
              var r = or(t, e, i, this.basePTS, this.frameIndex);
              if (r && 0 === r.missing) return r;
            }),
            e
          );
        })(Xi),
        Er = /\/emsg[-/]ID3/i,
        yr = (function () {
          function t(t, e) {
            (this.remainderData = null),
              (this.timeOffset = 0),
              (this.config = void 0),
              (this.videoTrack = void 0),
              (this.audioTrack = void 0),
              (this.id3Track = void 0),
              (this.txtTrack = void 0),
              (this.config = e);
          }
          var e = t.prototype;
          return (
            (e.resetTimeStamp = function () {}),
            (e.resetInitSegment = function (t, e, i, r) {
              var a = (this.videoTrack = Zi("video", 1)),
                s = (this.audioTrack = Zi("audio", 1)),
                n = (this.txtTrack = Zi("text", 1));
              if (
                ((this.id3Track = Zi("id3", 1)),
                (this.timeOffset = 0),
                null != t && t.byteLength)
              ) {
                var o = yt(t);
                if (o.video) {
                  var h = o.video,
                    l = h.id,
                    A = h.timescale,
                    d = h.codec;
                  (a.id = l), (a.timescale = n.timescale = A), (a.codec = d);
                }
                if (o.audio) {
                  var u = o.audio,
                    c = u.id,
                    g = u.timescale,
                    f = u.codec;
                  (s.id = c), (s.timescale = g), (s.codec = f);
                }
                (n.id = ut.text),
                  (a.sampleDuration = 0),
                  (a.duration = s.duration = r);
              }
            }),
            (e.resetContiguity = function () {
              this.remainderData = null;
            }),
            (t.probe = function (t) {
              return (function (t) {
                for (var e = t.byteLength, i = 0; i < e; ) {
                  var r = ft(t, i);
                  if (
                    r > 8 &&
                    109 === t[i + 4] &&
                    111 === t[i + 5] &&
                    111 === t[i + 6] &&
                    102 === t[i + 7]
                  )
                    return !0;
                  i = r > 1 ? i + r : e;
                }
                return !1;
              })(t);
            }),
            (e.demux = function (t, e) {
              this.timeOffset = e;
              var i = t,
                r = this.videoTrack,
                a = this.txtTrack;
              if (this.config.progressive) {
                this.remainderData && (i = wt(this.remainderData, t));
                var s = (function (t) {
                  var e = { valid: null, remainder: null },
                    i = vt(t, ["moof"]);
                  if (i.length < 2) return (e.remainder = t), e;
                  var r = i[i.length - 1];
                  return (
                    (e.valid = K(t, 0, r.byteOffset - 8)),
                    (e.remainder = K(t, r.byteOffset - 8)),
                    e
                  );
                })(i);
                (this.remainderData = s.remainder),
                  (r.samples = s.valid || new Uint8Array());
              } else r.samples = i;
              var n = this.extractID3Track(r, e);
              return (
                (a.samples = Qt(e, r)),
                {
                  videoTrack: r,
                  audioTrack: this.audioTrack,
                  id3Track: n,
                  textTrack: this.txtTrack,
                }
              );
            }),
            (e.flush = function () {
              var t = this.timeOffset,
                e = this.videoTrack,
                i = this.txtTrack;
              (e.samples = this.remainderData || new Uint8Array()),
                (this.remainderData = null);
              var r = this.extractID3Track(e, this.timeOffset);
              return (
                (i.samples = Qt(t, e)),
                {
                  videoTrack: e,
                  audioTrack: Zi(),
                  id3Track: r,
                  textTrack: Zi(),
                }
              );
            }),
            (e.extractID3Track = function (t, e) {
              var i = this.id3Track;
              if (t.samples.length) {
                var r = vt(t.samples, ["emsg"]);
                r &&
                  r.forEach(function (t) {
                    var r = (function (t) {
                      var e = t[0],
                        i = "",
                        r = "",
                        a = 0,
                        s = 0,
                        n = 0,
                        o = 0,
                        h = 0,
                        l = 0;
                      if (0 === e) {
                        for (; "\0" !== ct(t.subarray(l, l + 1)); )
                          (i += ct(t.subarray(l, l + 1))), (l += 1);
                        for (
                          i += ct(t.subarray(l, l + 1)), l += 1;
                          "\0" !== ct(t.subarray(l, l + 1));

                        )
                          (r += ct(t.subarray(l, l + 1))), (l += 1);
                        (r += ct(t.subarray(l, l + 1))),
                          (l += 1),
                          (a = ft(t, 12)),
                          (s = ft(t, 16)),
                          (o = ft(t, 20)),
                          (h = ft(t, 24)),
                          (l = 28);
                      } else if (1 === e) {
                        a = ft(t, (l += 4));
                        var A = ft(t, (l += 4)),
                          d = ft(t, (l += 4));
                        for (
                          l += 4,
                            n = Math.pow(2, 32) * A + d,
                            C(n) ||
                              ((n = Number.MAX_SAFE_INTEGER),
                              R.warn(
                                "Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box"
                              )),
                            o = ft(t, l),
                            h = ft(t, (l += 4)),
                            l += 4;
                          "\0" !== ct(t.subarray(l, l + 1));

                        )
                          (i += ct(t.subarray(l, l + 1))), (l += 1);
                        for (
                          i += ct(t.subarray(l, l + 1)), l += 1;
                          "\0" !== ct(t.subarray(l, l + 1));

                        )
                          (r += ct(t.subarray(l, l + 1))), (l += 1);
                        (r += ct(t.subarray(l, l + 1))), (l += 1);
                      }
                      return {
                        schemeIdUri: i,
                        value: r,
                        timeScale: a,
                        presentationTime: n,
                        presentationTimeDelta: s,
                        eventDuration: o,
                        id: h,
                        payload: t.subarray(l, t.byteLength),
                      };
                    })(t);
                    if (Er.test(r.schemeIdUri)) {
                      var a = I(r.presentationTime)
                          ? r.presentationTime / r.timeScale
                          : e + r.presentationTimeDelta / r.timeScale,
                        s =
                          4294967295 === r.eventDuration
                            ? Number.POSITIVE_INFINITY
                            : r.eventDuration / r.timeScale;
                      s <= 0.001 && (s = Number.POSITIVE_INFINITY);
                      var n = r.payload;
                      i.samples.push({
                        data: n,
                        len: n.byteLength,
                        dts: a,
                        pts: a,
                        type: ge,
                        duration: s,
                      });
                    }
                  });
              }
              return i;
            }),
            (e.demuxSampleAes = function (t, e, i) {
              return Promise.reject(
                new Error(
                  "The MP4 demuxer does not support SAMPLE-AES decryption"
                )
              );
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        Ir = (function () {
          function t() {
            this.VideoSample = null;
          }
          var e = t.prototype;
          return (
            (e.createVideoSample = function (t, e, i, r) {
              return {
                key: t,
                frame: !1,
                pts: e,
                dts: i,
                units: [],
                debug: r,
                length: 0,
              };
            }),
            (e.getLastNalUnit = function (t) {
              var e,
                i,
                r = this.VideoSample;
              if (
                ((r && 0 !== r.units.length) || (r = t[t.length - 1]),
                null != (e = r) && e.units)
              ) {
                var a = r.units;
                i = a[a.length - 1];
              }
              return i;
            }),
            (e.pushAccessUnit = function (t, e) {
              if (t.units.length && t.frame) {
                if (void 0 === t.pts) {
                  var i = e.samples,
                    r = i.length;
                  if (!r) return void e.dropped++;
                  var a = i[r - 1];
                  (t.pts = a.pts), (t.dts = a.dts);
                }
                e.samples.push(t);
              }
              t.debug.length && R.log(t.pts + "/" + t.dts + ":" + t.debug);
            }),
            t
          );
        })(),
        Cr = (function () {
          function t(t) {
            (this.data = void 0),
              (this.bytesAvailable = void 0),
              (this.word = void 0),
              (this.bitsAvailable = void 0),
              (this.data = t),
              (this.bytesAvailable = t.byteLength),
              (this.word = 0),
              (this.bitsAvailable = 0);
          }
          var e = t.prototype;
          return (
            (e.loadWord = function () {
              var t = this.data,
                e = this.bytesAvailable,
                i = t.byteLength - e,
                r = new Uint8Array(4),
                a = Math.min(4, e);
              if (0 === a) throw new Error("no bytes available");
              r.set(t.subarray(i, i + a)),
                (this.word = new DataView(r.buffer).getUint32(0)),
                (this.bitsAvailable = 8 * a),
                (this.bytesAvailable -= a);
            }),
            (e.skipBits = function (t) {
              var e;
              (t = Math.min(t, 8 * this.bytesAvailable + this.bitsAvailable)),
                this.bitsAvailable > t
                  ? ((this.word <<= t), (this.bitsAvailable -= t))
                  : ((t -= this.bitsAvailable),
                    (t -= (e = t >> 3) << 3),
                    (this.bytesAvailable -= e),
                    this.loadWord(),
                    (this.word <<= t),
                    (this.bitsAvailable -= t));
            }),
            (e.readBits = function (t) {
              var e = Math.min(this.bitsAvailable, t),
                i = this.word >>> (32 - e);
              if (
                (t > 32 && R.error("Cannot read more than 32 bits at a time"),
                (this.bitsAvailable -= e),
                this.bitsAvailable > 0)
              )
                this.word <<= e;
              else {
                if (!(this.bytesAvailable > 0))
                  throw new Error("no bits available");
                this.loadWord();
              }
              return (e = t - e) > 0 && this.bitsAvailable
                ? (i << e) | this.readBits(e)
                : i;
            }),
            (e.skipLZ = function () {
              var t;
              for (t = 0; t < this.bitsAvailable; ++t)
                if (0 != (this.word & (2147483648 >>> t)))
                  return (this.word <<= t), (this.bitsAvailable -= t), t;
              return this.loadWord(), t + this.skipLZ();
            }),
            (e.skipUEG = function () {
              this.skipBits(1 + this.skipLZ());
            }),
            (e.skipEG = function () {
              this.skipBits(1 + this.skipLZ());
            }),
            (e.readUEG = function () {
              var t = this.skipLZ();
              return this.readBits(t + 1) - 1;
            }),
            (e.readEG = function () {
              var t = this.readUEG();
              return 1 & t ? (1 + t) >>> 1 : -1 * (t >>> 1);
            }),
            (e.readBoolean = function () {
              return 1 === this.readBits(1);
            }),
            (e.readUByte = function () {
              return this.readBits(8);
            }),
            (e.readUShort = function () {
              return this.readBits(16);
            }),
            (e.readUInt = function () {
              return this.readBits(32);
            }),
            (e.skipScalingList = function (t) {
              for (var e = 8, i = 8, r = 0; r < t; r++)
                0 !== i && (i = (e + this.readEG() + 256) % 256),
                  (e = 0 === i ? e : i);
            }),
            (e.readSPS = function () {
              var t,
                e,
                i,
                r = 0,
                a = 0,
                s = 0,
                n = 0,
                o = this.readUByte.bind(this),
                h = this.readBits.bind(this),
                l = this.readUEG.bind(this),
                A = this.readBoolean.bind(this),
                d = this.skipBits.bind(this),
                u = this.skipEG.bind(this),
                c = this.skipUEG.bind(this),
                g = this.skipScalingList.bind(this);
              o();
              var f = o();
              if (
                (h(5),
                d(3),
                o(),
                c(),
                100 === f ||
                  110 === f ||
                  122 === f ||
                  244 === f ||
                  44 === f ||
                  83 === f ||
                  86 === f ||
                  118 === f ||
                  128 === f)
              ) {
                var p = l();
                if ((3 === p && d(1), c(), c(), d(1), A()))
                  for (e = 3 !== p ? 8 : 12, i = 0; i < e; i++)
                    A() && g(i < 6 ? 16 : 64);
              }
              c();
              var m = l();
              if (0 === m) l();
              else if (1 === m)
                for (d(1), u(), u(), t = l(), i = 0; i < t; i++) u();
              c(), d(1);
              var v = l(),
                E = l(),
                y = h(1);
              0 === y && d(1),
                d(1),
                A() && ((r = l()), (a = l()), (s = l()), (n = l()));
              var I = [1, 1];
              if (A() && A())
                switch (o()) {
                  case 1:
                    I = [1, 1];
                    break;
                  case 2:
                    I = [12, 11];
                    break;
                  case 3:
                    I = [10, 11];
                    break;
                  case 4:
                    I = [16, 11];
                    break;
                  case 5:
                    I = [40, 33];
                    break;
                  case 6:
                    I = [24, 11];
                    break;
                  case 7:
                    I = [20, 11];
                    break;
                  case 8:
                    I = [32, 11];
                    break;
                  case 9:
                    I = [80, 33];
                    break;
                  case 10:
                    I = [18, 11];
                    break;
                  case 11:
                    I = [15, 11];
                    break;
                  case 12:
                    I = [64, 33];
                    break;
                  case 13:
                    I = [160, 99];
                    break;
                  case 14:
                    I = [4, 3];
                    break;
                  case 15:
                    I = [3, 2];
                    break;
                  case 16:
                    I = [2, 1];
                    break;
                  case 255:
                    I = [(o() << 8) | o(), (o() << 8) | o()];
                }
              return {
                width: Math.ceil(16 * (v + 1) - 2 * r - 2 * a),
                height: (2 - y) * (E + 1) * 16 - (y ? 2 : 4) * (s + n),
                pixelRatio: I,
              };
            }),
            (e.readSliceType = function () {
              return this.readUByte(), this.readUEG(), this.readUEG();
            }),
            t
          );
        })(),
        Br = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          h(e, t);
          var i = e.prototype;
          return (
            (i.parseAVCPES = function (t, e, i, r, a) {
              var s,
                n = this,
                o = this.parseAVCNALu(t, i.data),
                h = this.VideoSample,
                l = !1;
              (i.data = null),
                h &&
                  o.length &&
                  !t.audFound &&
                  (this.pushAccessUnit(h, t),
                  (h = this.VideoSample =
                    this.createVideoSample(!1, i.pts, i.dts, ""))),
                o.forEach(function (r) {
                  var o;
                  switch (r.type) {
                    case 1:
                      var A = !1;
                      s = !0;
                      var d,
                        u = r.data;
                      if (l && u.length > 4) {
                        var c = new Cr(u).readSliceType();
                        (2 !== c && 4 !== c && 7 !== c && 9 !== c) || (A = !0);
                      }
                      A &&
                        null != (d = h) &&
                        d.frame &&
                        !h.key &&
                        (n.pushAccessUnit(h, t), (h = n.VideoSample = null)),
                        h ||
                          (h = n.VideoSample =
                            n.createVideoSample(!0, i.pts, i.dts, "")),
                        (h.frame = !0),
                        (h.key = A);
                      break;
                    case 5:
                      (s = !0),
                        null != (o = h) &&
                          o.frame &&
                          !h.key &&
                          (n.pushAccessUnit(h, t), (h = n.VideoSample = null)),
                        h ||
                          (h = n.VideoSample =
                            n.createVideoSample(!0, i.pts, i.dts, "")),
                        (h.key = !0),
                        (h.frame = !0);
                      break;
                    case 6:
                      (s = !0), bt(r.data, 1, i.pts, e.samples);
                      break;
                    case 7:
                      var g, f;
                      (s = !0), (l = !0);
                      var p = r.data,
                        m = new Cr(p).readSPS();
                      if (
                        !t.sps ||
                        t.width !== m.width ||
                        t.height !== m.height ||
                        (null == (g = t.pixelRatio) ? void 0 : g[0]) !==
                          m.pixelRatio[0] ||
                        (null == (f = t.pixelRatio) ? void 0 : f[1]) !==
                          m.pixelRatio[1]
                      ) {
                        (t.width = m.width),
                          (t.height = m.height),
                          (t.pixelRatio = m.pixelRatio),
                          (t.sps = [p]),
                          (t.duration = a);
                        for (
                          var v = p.subarray(1, 4), E = "avc1.", y = 0;
                          y < 3;
                          y++
                        ) {
                          var I = v[y].toString(16);
                          I.length < 2 && (I = "0" + I), (E += I);
                        }
                        t.codec = E;
                      }
                      break;
                    case 8:
                      (s = !0), (t.pps = [r.data]);
                      break;
                    case 9:
                      (s = !0),
                        (t.audFound = !0),
                        h && n.pushAccessUnit(h, t),
                        (h = n.VideoSample =
                          n.createVideoSample(!1, i.pts, i.dts, ""));
                      break;
                    case 12:
                      s = !0;
                      break;
                    default:
                      (s = !1), h && (h.debug += "unknown NAL " + r.type + " ");
                  }
                  h && s && h.units.push(r);
                }),
                r &&
                  h &&
                  (this.pushAccessUnit(h, t), (this.VideoSample = null));
            }),
            (i.parseAVCNALu = function (t, e) {
              var i,
                r,
                a = e.byteLength,
                s = t.naluState || 0,
                n = s,
                o = [],
                h = 0,
                l = -1,
                A = 0;
              for (
                -1 === s && ((l = 0), (A = 31 & e[0]), (s = 0), (h = 1));
                h < a;

              )
                if (((i = e[h++]), s))
                  if (1 !== s)
                    if (i)
                      if (1 === i) {
                        if (((r = h - s - 1), l >= 0)) {
                          var d = { data: e.subarray(l, r), type: A };
                          o.push(d);
                        } else {
                          var u = this.getLastNalUnit(t.samples);
                          u &&
                            (n &&
                              h <= 4 - n &&
                              u.state &&
                              (u.data = u.data.subarray(
                                0,
                                u.data.byteLength - n
                              )),
                            r > 0 &&
                              ((u.data = wt(u.data, e.subarray(0, r))),
                              (u.state = 0)));
                        }
                        h < a ? ((l = h), (A = 31 & e[h]), (s = 0)) : (s = -1);
                      } else s = 0;
                    else s = 3;
                  else s = i ? 0 : 2;
                else s = i ? 0 : 1;
              if (l >= 0 && s >= 0) {
                var c = { data: e.subarray(l, a), type: A, state: s };
                o.push(c);
              }
              if (0 === o.length) {
                var g = this.getLastNalUnit(t.samples);
                g && (g.data = wt(g.data, e));
              }
              return (t.naluState = s), o;
            }),
            e
          );
        })(Ir),
        kr = (function () {
          function t(t, e, i) {
            (this.keyData = void 0),
              (this.decrypter = void 0),
              (this.keyData = i),
              (this.decrypter = new _i(e, { removePKCS7Padding: !1 }));
          }
          var e = t.prototype;
          return (
            (e.decryptBuffer = function (t) {
              return this.decrypter.decrypt(
                t,
                this.keyData.key.buffer,
                this.keyData.iv.buffer
              );
            }),
            (e.decryptAacSample = function (t, e, i) {
              var r = this,
                a = t[e].unit;
              if (!(a.length <= 16)) {
                var s = a.subarray(16, a.length - (a.length % 16)),
                  n = s.buffer.slice(s.byteOffset, s.byteOffset + s.length);
                this.decryptBuffer(n).then(function (s) {
                  var n = new Uint8Array(s);
                  a.set(n, 16),
                    r.decrypter.isSync() || r.decryptAacSamples(t, e + 1, i);
                });
              }
            }),
            (e.decryptAacSamples = function (t, e, i) {
              for (; ; e++) {
                if (e >= t.length) return void i();
                if (
                  !(
                    t[e].unit.length < 32 ||
                    (this.decryptAacSample(t, e, i), this.decrypter.isSync())
                  )
                )
                  return;
              }
            }),
            (e.getAvcEncryptedData = function (t) {
              for (
                var e = 16 * Math.floor((t.length - 48) / 160) + 16,
                  i = new Int8Array(e),
                  r = 0,
                  a = 32;
                a < t.length - 16;
                a += 160, r += 16
              )
                i.set(t.subarray(a, a + 16), r);
              return i;
            }),
            (e.getAvcDecryptedUnit = function (t, e) {
              for (
                var i = new Uint8Array(e), r = 0, a = 32;
                a < t.length - 16;
                a += 160, r += 16
              )
                t.set(i.subarray(r, r + 16), a);
              return t;
            }),
            (e.decryptAvcSample = function (t, e, i, r, a) {
              var s = this,
                n = Dt(a.data),
                o = this.getAvcEncryptedData(n);
              this.decryptBuffer(o.buffer).then(function (o) {
                (a.data = s.getAvcDecryptedUnit(n, o)),
                  s.decrypter.isSync() || s.decryptAvcSamples(t, e, i + 1, r);
              });
            }),
            (e.decryptAvcSamples = function (t, e, i, r) {
              if (t instanceof Uint8Array)
                throw new Error("Cannot decrypt samples of type Uint8Array");
              for (; ; e++, i = 0) {
                if (e >= t.length) return void r();
                for (var a = t[e].units; !(i >= a.length); i++) {
                  var s = a[i];
                  if (
                    !(
                      s.data.length <= 48 ||
                      (1 !== s.type && 5 !== s.type) ||
                      (this.decryptAvcSample(t, e, i, r, s),
                      this.decrypter.isSync())
                    )
                  )
                    return;
                }
              }
            }),
            t
          );
        })(),
        xr = 188,
        wr = (function () {
          function t(t, e, i) {
            (this.observer = void 0),
              (this.config = void 0),
              (this.typeSupported = void 0),
              (this.sampleAes = null),
              (this.pmtParsed = !1),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this._duration = 0),
              (this._pmtId = -1),
              (this._videoTrack = void 0),
              (this._audioTrack = void 0),
              (this._id3Track = void 0),
              (this._txtTrack = void 0),
              (this.aacOverFlow = null),
              (this.remainderData = null),
              (this.videoParser = void 0),
              (this.observer = t),
              (this.config = e),
              (this.typeSupported = i),
              (this.videoParser = new Br());
          }
          (t.probe = function (e) {
            var i = t.syncOffset(e);
            return (
              i > 0 &&
                R.warn(
                  "MPEG2-TS detected but first sync word found @ offset " + i
                ),
              -1 !== i
            );
          }),
            (t.syncOffset = function (t) {
              for (
                var e = t.length, i = Math.min(940, e - xr) + 1, r = 0;
                r < i;

              ) {
                for (var a = !1, s = -1, n = 0, o = r; o < e; o += xr) {
                  if (71 !== t[o] || (e - o !== xr && 71 !== t[o + xr])) {
                    if (n) return -1;
                    break;
                  }
                  if (
                    (n++,
                    -1 === s &&
                      0 !== (s = o) &&
                      (i = Math.min(s + 18612, t.length - xr) + 1),
                    a || (a = 0 === Qr(t, o)),
                    a && n > 1 && ((0 === s && n > 2) || o + xr > i))
                  )
                    return s;
                }
                r++;
              }
              return -1;
            }),
            (t.createTrack = function (t, e) {
              return {
                container:
                  "video" === t || "audio" === t ? "video/mp2t" : void 0,
                type: t,
                id: ut[t],
                pid: -1,
                inputTimeScale: 9e4,
                sequenceNumber: 0,
                samples: [],
                dropped: 0,
                duration: "audio" === t ? e : void 0,
              };
            });
          var e = t.prototype;
          return (
            (e.resetInitSegment = function (e, i, r, a) {
              (this.pmtParsed = !1),
                (this._pmtId = -1),
                (this._videoTrack = t.createTrack("video")),
                (this._audioTrack = t.createTrack("audio", a)),
                (this._id3Track = t.createTrack("id3")),
                (this._txtTrack = t.createTrack("text")),
                (this._audioTrack.segmentCodec = "aac"),
                (this.aacOverFlow = null),
                (this.remainderData = null),
                (this.audioCodec = i),
                (this.videoCodec = r),
                (this._duration = a);
            }),
            (e.resetTimeStamp = function () {}),
            (e.resetContiguity = function () {
              var t = this._audioTrack,
                e = this._videoTrack,
                i = this._id3Track;
              t && (t.pesData = null),
                e && (e.pesData = null),
                i && (i.pesData = null),
                (this.aacOverFlow = null),
                (this.remainderData = null);
            }),
            (e.demux = function (e, i, r, a) {
              var s;
              void 0 === r && (r = !1),
                void 0 === a && (a = !1),
                r || (this.sampleAes = null);
              var n = this._videoTrack,
                o = this._audioTrack,
                h = this._id3Track,
                l = this._txtTrack,
                A = n.pid,
                d = n.pesData,
                u = o.pid,
                c = h.pid,
                g = o.pesData,
                f = h.pesData,
                p = null,
                m = this.pmtParsed,
                v = this._pmtId,
                E = e.length;
              if (
                (this.remainderData &&
                  ((E = (e = wt(this.remainderData, e)).length),
                  (this.remainderData = null)),
                E < xr && !a)
              )
                return (
                  (this.remainderData = e),
                  { audioTrack: o, videoTrack: n, id3Track: h, textTrack: l }
                );
              var y = Math.max(0, t.syncOffset(e));
              (E -= (E - y) % xr) < e.byteLength &&
                !a &&
                (this.remainderData = new Uint8Array(
                  e.buffer,
                  E,
                  e.buffer.byteLength - E
                ));
              for (var I = 0, C = y; C < E; C += xr)
                if (71 === e[C]) {
                  var B = !!(64 & e[C + 1]),
                    Q = Qr(e, C),
                    S = void 0;
                  if ((48 & e[C + 3]) >> 4 > 1) {
                    if ((S = C + 5 + e[C + 4]) === C + xr) continue;
                  } else S = C + 4;
                  switch (Q) {
                    case A:
                      B &&
                        (d &&
                          (s = Rr(d)) &&
                          this.videoParser.parseAVCPES(
                            n,
                            l,
                            s,
                            !1,
                            this._duration
                          ),
                        (d = { data: [], size: 0 })),
                        d &&
                          (d.data.push(e.subarray(S, C + xr)),
                          (d.size += C + xr - S));
                      break;
                    case u:
                      if (B) {
                        if (g && (s = Rr(g)))
                          switch (o.segmentCodec) {
                            case "aac":
                              this.parseAACPES(o, s);
                              break;
                            case "mp3":
                              this.parseMPEGPES(o, s);
                          }
                        g = { data: [], size: 0 };
                      }
                      g &&
                        (g.data.push(e.subarray(S, C + xr)),
                        (g.size += C + xr - S));
                      break;
                    case c:
                      B &&
                        (f && (s = Rr(f)) && this.parseID3PES(h, s),
                        (f = { data: [], size: 0 })),
                        f &&
                          (f.data.push(e.subarray(S, C + xr)),
                          (f.size += C + xr - S));
                      break;
                    case 0:
                      B && (S += e[S] + 1), (v = this._pmtId = Sr(e, S));
                      break;
                    case v:
                      B && (S += e[S] + 1);
                      var b = br(e, S, this.typeSupported, r);
                      (A = b.videoPid) > 0 &&
                        ((n.pid = A), (n.segmentCodec = b.segmentVideoCodec)),
                        (u = b.audioPid) > 0 &&
                          ((o.pid = u), (o.segmentCodec = b.segmentAudioCodec)),
                        (c = b.id3Pid) > 0 && (h.pid = c),
                        null === p ||
                          m ||
                          (R.warn(
                            "MPEG-TS PMT found at " +
                              C +
                              " after unknown PID '" +
                              p +
                              "'. Backtracking to sync byte @" +
                              y +
                              " to parse all TS packets."
                          ),
                          (p = null),
                          (C = y - 188)),
                        (m = this.pmtParsed = !0);
                      break;
                    case 17:
                    case 8191:
                      break;
                    default:
                      p = Q;
                  }
                } else I++;
              if (I > 0) {
                var D = new Error(
                  "Found " + I + " TS packet/s that do not start with 0x47"
                );
                this.observer.emit(k.ERROR, k.ERROR, {
                  type: x.MEDIA_ERROR,
                  details: w.FRAG_PARSING_ERROR,
                  fatal: !1,
                  error: D,
                  reason: D.message,
                });
              }
              (n.pesData = d), (o.pesData = g), (h.pesData = f);
              var L = {
                audioTrack: o,
                videoTrack: n,
                id3Track: h,
                textTrack: l,
              };
              return a && this.extractRemainingSamples(L), L;
            }),
            (e.flush = function () {
              var t,
                e = this.remainderData;
              return (
                (this.remainderData = null),
                (t = e
                  ? this.demux(e, -1, !1, !0)
                  : {
                      videoTrack: this._videoTrack,
                      audioTrack: this._audioTrack,
                      id3Track: this._id3Track,
                      textTrack: this._txtTrack,
                    }),
                this.extractRemainingSamples(t),
                this.sampleAes ? this.decrypt(t, this.sampleAes) : t
              );
            }),
            (e.extractRemainingSamples = function (t) {
              var e,
                i = t.audioTrack,
                r = t.videoTrack,
                a = t.id3Track,
                s = t.textTrack,
                n = r.pesData,
                o = i.pesData,
                h = a.pesData;
              if (
                (n && (e = Rr(n))
                  ? (this.videoParser.parseAVCPES(r, s, e, !0, this._duration),
                    (r.pesData = null))
                  : (r.pesData = n),
                o && (e = Rr(o)))
              ) {
                switch (i.segmentCodec) {
                  case "aac":
                    this.parseAACPES(i, e);
                    break;
                  case "mp3":
                    this.parseMPEGPES(i, e);
                }
                i.pesData = null;
              } else
                null != o &&
                  o.size &&
                  R.log(
                    "last AAC PES packet truncated,might overlap between fragments"
                  ),
                  (i.pesData = o);
              h && (e = Rr(h))
                ? (this.parseID3PES(a, e), (a.pesData = null))
                : (a.pesData = h);
            }),
            (e.demuxSampleAes = function (t, e, i) {
              var r = this.demux(t, i, !0, !this.config.progressive),
                a = (this.sampleAes = new kr(this.observer, this.config, e));
              return this.decrypt(r, a);
            }),
            (e.decrypt = function (t, e) {
              return new Promise(function (i) {
                var r = t.audioTrack,
                  a = t.videoTrack;
                r.samples && "aac" === r.segmentCodec
                  ? e.decryptAacSamples(r.samples, 0, function () {
                      a.samples
                        ? e.decryptAvcSamples(a.samples, 0, 0, function () {
                            i(t);
                          })
                        : i(t);
                    })
                  : a.samples &&
                    e.decryptAvcSamples(a.samples, 0, 0, function () {
                      i(t);
                    });
              });
            }),
            (e.destroy = function () {
              this._duration = 0;
            }),
            (e.parseAACPES = function (t, e) {
              var i,
                r,
                a,
                s = 0,
                n = this.aacOverFlow,
                o = e.data;
              if (n) {
                this.aacOverFlow = null;
                var h = n.missing,
                  l = n.sample.unit.byteLength;
                if (-1 === h) o = wt(n.sample.unit, o);
                else {
                  var A = l - h;
                  n.sample.unit.set(o.subarray(0, h), A),
                    t.samples.push(n.sample),
                    (s = n.missing);
                }
              }
              for (i = s, r = o.length; i < r - 1 && !rr(o, i); i++);
              if (i !== s) {
                var d,
                  u = i < r - 1;
                d = u
                  ? "AAC PES did not start with ADTS header,offset:" + i
                  : "No ADTS header found in AAC PES";
                var c = new Error(d);
                if (
                  (R.warn("parsing error: " + d),
                  this.observer.emit(k.ERROR, k.ERROR, {
                    type: x.MEDIA_ERROR,
                    details: w.FRAG_PARSING_ERROR,
                    fatal: !1,
                    levelRetry: u,
                    error: c,
                    reason: d,
                  }),
                  !u)
                )
                  return;
              }
              if (
                (sr(t, this.observer, o, i, this.audioCodec), void 0 !== e.pts)
              )
                a = e.pts;
              else {
                if (!n) return void R.warn("[tsdemuxer]: AAC PES unknown PTS");
                var g = nr(t.samplerate);
                a = n.sample.pts + g;
              }
              for (var f, p = 0; i < r; ) {
                if (((i += (f = or(t, o, i, a, p)).length), f.missing)) {
                  this.aacOverFlow = f;
                  break;
                }
                for (p++; i < r - 1 && !rr(o, i); i++);
              }
            }),
            (e.parseMPEGPES = function (t, e) {
              var i = e.data,
                r = i.length,
                a = 0,
                s = 0,
                n = e.pts;
              if (void 0 !== n)
                for (; s < r; )
                  if (pr(i, s)) {
                    var o = cr(t, i, s, n, a);
                    if (!o) break;
                    (s += o.length), a++;
                  } else s++;
              else R.warn("[tsdemuxer]: MPEG PES unknown PTS");
            }),
            (e.parseAC3PES = function (t, e) {}),
            (e.parseID3PES = function (t, e) {
              if (void 0 !== e.pts) {
                var i = o({}, e, {
                  type: this._videoTrack ? ge : ce,
                  duration: Number.POSITIVE_INFINITY,
                });
                t.samples.push(i);
              } else R.warn("[tsdemuxer]: ID3 PES unknown PTS");
            }),
            t
          );
        })();
      function Qr(t, e) {
        return ((31 & t[e + 1]) << 8) + t[e + 2];
      }
      function Sr(t, e) {
        return ((31 & t[e + 10]) << 8) | t[e + 11];
      }
      function br(t, e, i, r) {
        var a = {
            audioPid: -1,
            videoPid: -1,
            id3Pid: -1,
            segmentVideoCodec: "avc",
            segmentAudioCodec: "aac",
          },
          s = e + 3 + (((15 & t[e + 1]) << 8) | t[e + 2]) - 4;
        for (e += 12 + (((15 & t[e + 10]) << 8) | t[e + 11]); e < s; ) {
          var n = Qr(t, e),
            o = ((15 & t[e + 3]) << 8) | t[e + 4];
          switch (t[e]) {
            case 207:
              if (!r) {
                Dr("ADTS AAC");
                break;
              }
            case 15:
              -1 === a.audioPid && (a.audioPid = n);
              break;
            case 21:
              -1 === a.id3Pid && (a.id3Pid = n);
              break;
            case 219:
              if (!r) {
                Dr("H.264");
                break;
              }
            case 27:
              -1 === a.videoPid &&
                ((a.videoPid = n), (a.segmentVideoCodec = "avc"));
              break;
            case 3:
            case 4:
              i.mpeg || i.mp3
                ? -1 === a.audioPid &&
                  ((a.audioPid = n), (a.segmentAudioCodec = "mp3"))
                : R.log("MPEG audio found, not supported in this browser");
              break;
            case 193:
              if (!r) {
                Dr("AC-3");
                break;
              }
            case 129:
              R.warn("AC-3 in M2TS support not included in build");
              break;
            case 6:
              if (-1 === a.audioPid && o > 0)
                for (var h = e + 5, l = o; l > 2; ) {
                  106 === t[h] &&
                    R.warn("AC-3 in M2TS support not included in build");
                  var A = t[h + 1] + 2;
                  (h += A), (l -= A);
                }
              break;
            case 194:
            case 135:
              R.warn("Unsupported EC-3 in M2TS found");
              break;
            case 36:
              R.warn("Unsupported HEVC in M2TS found");
          }
          e += o + 5;
        }
        return a;
      }
      function Dr(t) {
        R.log(t + " with AES-128-CBC encryption found in unencrypted stream");
      }
      function Rr(t) {
        var e,
          i,
          r,
          a,
          s,
          n = 0,
          o = t.data;
        if (!t || 0 === t.size) return null;
        for (; o[0].length < 19 && o.length > 1; )
          (o[0] = wt(o[0], o[1])), o.splice(1, 1);
        if (1 === ((e = o[0])[0] << 16) + (e[1] << 8) + e[2]) {
          if ((i = (e[4] << 8) + e[5]) && i > t.size - 6) return null;
          var h = e[7];
          192 & h &&
            ((a =
              536870912 * (14 & e[9]) +
              4194304 * (255 & e[10]) +
              16384 * (254 & e[11]) +
              128 * (255 & e[12]) +
              (254 & e[13]) / 2),
            64 & h
              ? a -
                  (s =
                    536870912 * (14 & e[14]) +
                    4194304 * (255 & e[15]) +
                    16384 * (254 & e[16]) +
                    128 * (255 & e[17]) +
                    (254 & e[18]) / 2) >
                  54e5 &&
                (R.warn(
                  Math.round((a - s) / 9e4) +
                    "s delta between PTS and DTS, align them"
                ),
                (a = s))
              : (s = a));
          var l = (r = e[8]) + 9;
          if (t.size <= l) return null;
          t.size -= l;
          for (
            var A = new Uint8Array(t.size), d = 0, u = o.length;
            d < u;
            d++
          ) {
            var c = (e = o[d]).byteLength;
            if (l) {
              if (l > c) {
                l -= c;
                continue;
              }
              (e = e.subarray(l)), (c -= l), (l = 0);
            }
            A.set(e, n), (n += c);
          }
          return i && (i -= r + 3), { data: A, pts: a, dts: s, len: i };
        }
        return null;
      }
      var Lr = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          h(e, t);
          var i = e.prototype;
          return (
            (i.resetInitSegment = function (e, i, r, a) {
              t.prototype.resetInitSegment.call(this, e, i, r, a),
                (this._audioTrack = {
                  container: "audio/mpeg",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "mp3",
                  samples: [],
                  manifestCodec: i,
                  duration: a,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              var e = J(t, 0),
                i = (null == e ? void 0 : e.length) || 0;
              if (
                e &&
                11 === t[i] &&
                119 === t[i + 1] &&
                void 0 !== $(e) &&
                (function (t, e) {
                  var i = 0,
                    r = 5;
                  e += r;
                  for (
                    var a = new Uint32Array(1),
                      s = new Uint32Array(1),
                      n = new Uint8Array(1);
                    r > 0;

                  ) {
                    n[0] = t[e];
                    var o = Math.min(r, 8),
                      h = 8 - o;
                    (s[0] = (4278190080 >>> (24 + h)) << h),
                      (a[0] = (n[0] & s[0]) >> h),
                      (i = i ? (i << o) | a[0] : a[0]),
                      (e += 1),
                      (r -= o);
                  }
                  return i;
                })(t, i) <= 16
              )
                return !1;
              for (var r = t.length; i < r; i++)
                if (mr(t, i)) return R.log("MPEG Audio sync word found !"), !0;
              return !1;
            }),
            (i.canParse = function (t, e) {
              return fr((i = t), (r = e)) && 4 <= i.length - r;
              var i, r;
            }),
            (i.appendFrame = function (t, e, i) {
              if (null !== this.basePTS)
                return cr(t, e, i, this.basePTS, this.frameIndex);
            }),
            e
          );
        })(Xi),
        Tr = (function () {
          function t() {}
          return (
            (t.getSilentFrame = function (t, e) {
              if ("mp4a.40.2" === t) {
                if (1 === e) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                if (2 === e)
                  return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                if (3 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142,
                  ]);
                if (4 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128,
                    8, 2, 56,
                  ]);
                if (5 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4,
                    153, 0, 33, 144, 2, 56,
                  ]);
                if (6 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4,
                    153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224,
                  ]);
              } else {
                if (1 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6,
                    241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
                if (2 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149,
                    0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
                if (3 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149,
                    0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
              }
            }),
            t
          );
        })(),
        Mr = Math.pow(2, 32) - 1,
        Fr = (function () {
          function t() {}
          return (
            (t.init = function () {
              var e;
              for (e in ((t.types = {
                avc1: [],
                avcC: [],
                btrt: [],
                dinf: [],
                dref: [],
                esds: [],
                ftyp: [],
                hdlr: [],
                mdat: [],
                mdhd: [],
                mdia: [],
                mfhd: [],
                minf: [],
                moof: [],
                moov: [],
                mp4a: [],
                ".mp3": [],
                dac3: [],
                "ac-3": [],
                mvex: [],
                mvhd: [],
                pasp: [],
                sdtp: [],
                stbl: [],
                stco: [],
                stsc: [],
                stsd: [],
                stsz: [],
                stts: [],
                tfdt: [],
                tfhd: [],
                traf: [],
                trak: [],
                trun: [],
                trex: [],
                tkhd: [],
                vmhd: [],
                smhd: [],
              }),
              t.types))
                t.types.hasOwnProperty(e) &&
                  (t.types[e] = [
                    e.charCodeAt(0),
                    e.charCodeAt(1),
                    e.charCodeAt(2),
                    e.charCodeAt(3),
                  ]);
              var i = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100,
                  108, 101, 114, 0,
                ]),
                r = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100,
                  108, 101, 114, 0,
                ]);
              t.HDLR_TYPES = { video: i, audio: r };
              var a = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0,
                  0, 1,
                ]),
                s = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
              (t.STTS = t.STSC = t.STCO = s),
                (t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                (t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])),
                (t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
                (t.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]));
              var n = new Uint8Array([105, 115, 111, 109]),
                o = new Uint8Array([97, 118, 99, 49]),
                h = new Uint8Array([0, 0, 0, 1]);
              (t.FTYP = t.box(t.types.ftyp, n, h, n, o)),
                (t.DINF = t.box(t.types.dinf, t.box(t.types.dref, a)));
            }),
            (t.box = function (t) {
              for (
                var e = 8,
                  i = arguments.length,
                  r = new Array(i > 1 ? i - 1 : 0),
                  a = 1;
                a < i;
                a++
              )
                r[a - 1] = arguments[a];
              for (var s = r.length, n = s; s--; ) e += r[s].byteLength;
              var o = new Uint8Array(e);
              for (
                o[0] = (e >> 24) & 255,
                  o[1] = (e >> 16) & 255,
                  o[2] = (e >> 8) & 255,
                  o[3] = 255 & e,
                  o.set(t, 4),
                  s = 0,
                  e = 8;
                s < n;
                s++
              )
                o.set(r[s], e), (e += r[s].byteLength);
              return o;
            }),
            (t.hdlr = function (e) {
              return t.box(t.types.hdlr, t.HDLR_TYPES[e]);
            }),
            (t.mdat = function (e) {
              return t.box(t.types.mdat, e);
            }),
            (t.mdhd = function (e, i) {
              i *= e;
              var r = Math.floor(i / (Mr + 1)),
                a = Math.floor(i % (Mr + 1));
              return t.box(
                t.types.mdhd,
                new Uint8Array([
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                  r >> 24,
                  (r >> 16) & 255,
                  (r >> 8) & 255,
                  255 & r,
                  a >> 24,
                  (a >> 16) & 255,
                  (a >> 8) & 255,
                  255 & a,
                  85,
                  196,
                  0,
                  0,
                ])
              );
            }),
            (t.mdia = function (e) {
              return t.box(
                t.types.mdia,
                t.mdhd(e.timescale, e.duration),
                t.hdlr(e.type),
                t.minf(e)
              );
            }),
            (t.mfhd = function (e) {
              return t.box(
                t.types.mfhd,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  e >> 24,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                ])
              );
            }),
            (t.minf = function (e) {
              return "audio" === e.type
                ? t.box(
                    t.types.minf,
                    t.box(t.types.smhd, t.SMHD),
                    t.DINF,
                    t.stbl(e)
                  )
                : t.box(
                    t.types.minf,
                    t.box(t.types.vmhd, t.VMHD),
                    t.DINF,
                    t.stbl(e)
                  );
            }),
            (t.moof = function (e, i, r) {
              return t.box(t.types.moof, t.mfhd(e), t.traf(r, i));
            }),
            (t.moov = function (e) {
              for (var i = e.length, r = []; i--; ) r[i] = t.trak(e[i]);
              return t.box.apply(
                null,
                [t.types.moov, t.mvhd(e[0].timescale, e[0].duration)]
                  .concat(r)
                  .concat(t.mvex(e))
              );
            }),
            (t.mvex = function (e) {
              for (var i = e.length, r = []; i--; ) r[i] = t.trex(e[i]);
              return t.box.apply(null, [t.types.mvex].concat(r));
            }),
            (t.mvhd = function (e, i) {
              i *= e;
              var r = Math.floor(i / (Mr + 1)),
                a = Math.floor(i % (Mr + 1)),
                s = new Uint8Array([
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                  r >> 24,
                  (r >> 16) & 255,
                  (r >> 8) & 255,
                  255 & r,
                  a >> 24,
                  (a >> 16) & 255,
                  (a >> 8) & 255,
                  255 & a,
                  0,
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  64,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  255,
                  255,
                  255,
                  255,
                ]);
              return t.box(t.types.mvhd, s);
            }),
            (t.sdtp = function (e) {
              var i,
                r,
                a = e.samples || [],
                s = new Uint8Array(4 + a.length);
              for (i = 0; i < a.length; i++)
                (r = a[i].flags),
                  (s[i + 4] =
                    (r.dependsOn << 4) |
                    (r.isDependedOn << 2) |
                    r.hasRedundancy);
              return t.box(t.types.sdtp, s);
            }),
            (t.stbl = function (e) {
              return t.box(
                t.types.stbl,
                t.stsd(e),
                t.box(t.types.stts, t.STTS),
                t.box(t.types.stsc, t.STSC),
                t.box(t.types.stsz, t.STSZ),
                t.box(t.types.stco, t.STCO)
              );
            }),
            (t.avc1 = function (e) {
              var i,
                r,
                a,
                s = [],
                n = [];
              for (i = 0; i < e.sps.length; i++)
                (a = (r = e.sps[i]).byteLength),
                  s.push((a >>> 8) & 255),
                  s.push(255 & a),
                  (s = s.concat(Array.prototype.slice.call(r)));
              for (i = 0; i < e.pps.length; i++)
                (a = (r = e.pps[i]).byteLength),
                  n.push((a >>> 8) & 255),
                  n.push(255 & a),
                  (n = n.concat(Array.prototype.slice.call(r)));
              var o = t.box(
                  t.types.avcC,
                  new Uint8Array(
                    [1, s[3], s[4], s[5], 255, 224 | e.sps.length]
                      .concat(s)
                      .concat([e.pps.length])
                      .concat(n)
                  )
                ),
                h = e.width,
                l = e.height,
                A = e.pixelRatio[0],
                d = e.pixelRatio[1];
              return t.box(
                t.types.avc1,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  (h >> 8) & 255,
                  255 & h,
                  (l >> 8) & 255,
                  255 & l,
                  0,
                  72,
                  0,
                  0,
                  0,
                  72,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  18,
                  100,
                  97,
                  105,
                  108,
                  121,
                  109,
                  111,
                  116,
                  105,
                  111,
                  110,
                  47,
                  104,
                  108,
                  115,
                  46,
                  106,
                  115,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  24,
                  17,
                  17,
                ]),
                o,
                t.box(
                  t.types.btrt,
                  new Uint8Array([
                    0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192,
                  ])
                ),
                t.box(
                  t.types.pasp,
                  new Uint8Array([
                    A >> 24,
                    (A >> 16) & 255,
                    (A >> 8) & 255,
                    255 & A,
                    d >> 24,
                    (d >> 16) & 255,
                    (d >> 8) & 255,
                    255 & d,
                  ])
                )
              );
            }),
            (t.esds = function (t) {
              var e = t.config.length;
              return new Uint8Array(
                [
                  0,
                  0,
                  0,
                  0,
                  3,
                  23 + e,
                  0,
                  1,
                  0,
                  4,
                  15 + e,
                  64,
                  21,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  5,
                ]
                  .concat([e])
                  .concat(t.config)
                  .concat([6, 1, 2])
              );
            }),
            (t.audioStsd = function (t) {
              var e = t.samplerate;
              return new Uint8Array([
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                t.channelCount,
                0,
                16,
                0,
                0,
                0,
                0,
                (e >> 8) & 255,
                255 & e,
                0,
                0,
              ]);
            }),
            (t.mp4a = function (e) {
              return t.box(
                t.types.mp4a,
                t.audioStsd(e),
                t.box(t.types.esds, t.esds(e))
              );
            }),
            (t.mp3 = function (e) {
              return t.box(t.types[".mp3"], t.audioStsd(e));
            }),
            (t.ac3 = function (e) {
              return t.box(
                t.types["ac-3"],
                t.audioStsd(e),
                t.box(t.types.dac3, e.config)
              );
            }),
            (t.stsd = function (e) {
              return "audio" === e.type
                ? "mp3" === e.segmentCodec && "mp3" === e.codec
                  ? t.box(t.types.stsd, t.STSD, t.mp3(e))
                  : "ac3" === e.segmentCodec
                  ? t.box(t.types.stsd, t.STSD, t.ac3(e))
                  : t.box(t.types.stsd, t.STSD, t.mp4a(e))
                : t.box(t.types.stsd, t.STSD, t.avc1(e));
            }),
            (t.tkhd = function (e) {
              var i = e.id,
                r = e.duration * e.timescale,
                a = e.width,
                s = e.height,
                n = Math.floor(r / (Mr + 1)),
                o = Math.floor(r % (Mr + 1));
              return t.box(
                t.types.tkhd,
                new Uint8Array([
                  1,
                  0,
                  0,
                  7,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (i >> 24) & 255,
                  (i >> 16) & 255,
                  (i >> 8) & 255,
                  255 & i,
                  0,
                  0,
                  0,
                  0,
                  n >> 24,
                  (n >> 16) & 255,
                  (n >> 8) & 255,
                  255 & n,
                  o >> 24,
                  (o >> 16) & 255,
                  (o >> 8) & 255,
                  255 & o,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  64,
                  0,
                  0,
                  0,
                  (a >> 8) & 255,
                  255 & a,
                  0,
                  0,
                  (s >> 8) & 255,
                  255 & s,
                  0,
                  0,
                ])
              );
            }),
            (t.traf = function (e, i) {
              var r = t.sdtp(e),
                a = e.id,
                s = Math.floor(i / (Mr + 1)),
                n = Math.floor(i % (Mr + 1));
              return t.box(
                t.types.traf,
                t.box(
                  t.types.tfhd,
                  new Uint8Array([
                    0,
                    0,
                    0,
                    0,
                    a >> 24,
                    (a >> 16) & 255,
                    (a >> 8) & 255,
                    255 & a,
                  ])
                ),
                t.box(
                  t.types.tfdt,
                  new Uint8Array([
                    1,
                    0,
                    0,
                    0,
                    s >> 24,
                    (s >> 16) & 255,
                    (s >> 8) & 255,
                    255 & s,
                    n >> 24,
                    (n >> 16) & 255,
                    (n >> 8) & 255,
                    255 & n,
                  ])
                ),
                t.trun(e, r.length + 16 + 20 + 8 + 16 + 8 + 8),
                r
              );
            }),
            (t.trak = function (e) {
              return (
                (e.duration = e.duration || 4294967295),
                t.box(t.types.trak, t.tkhd(e), t.mdia(e))
              );
            }),
            (t.trex = function (e) {
              var i = e.id;
              return t.box(
                t.types.trex,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  i >> 24,
                  (i >> 16) & 255,
                  (i >> 8) & 255,
                  255 & i,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  1,
                ])
              );
            }),
            (t.trun = function (e, i) {
              var r,
                a,
                s,
                n,
                o,
                h,
                l = e.samples || [],
                A = l.length,
                d = 12 + 16 * A,
                u = new Uint8Array(d);
              for (
                i += 8 + d,
                  u.set(
                    [
                      "video" === e.type ? 1 : 0,
                      0,
                      15,
                      1,
                      (A >>> 24) & 255,
                      (A >>> 16) & 255,
                      (A >>> 8) & 255,
                      255 & A,
                      (i >>> 24) & 255,
                      (i >>> 16) & 255,
                      (i >>> 8) & 255,
                      255 & i,
                    ],
                    0
                  ),
                  r = 0;
                r < A;
                r++
              )
                (s = (a = l[r]).duration),
                  (n = a.size),
                  (o = a.flags),
                  (h = a.cts),
                  u.set(
                    [
                      (s >>> 24) & 255,
                      (s >>> 16) & 255,
                      (s >>> 8) & 255,
                      255 & s,
                      (n >>> 24) & 255,
                      (n >>> 16) & 255,
                      (n >>> 8) & 255,
                      255 & n,
                      (o.isLeading << 2) | o.dependsOn,
                      (o.isDependedOn << 6) |
                        (o.hasRedundancy << 4) |
                        (o.paddingValue << 1) |
                        o.isNonSync,
                      61440 & o.degradPrio,
                      15 & o.degradPrio,
                      (h >>> 24) & 255,
                      (h >>> 16) & 255,
                      (h >>> 8) & 255,
                      255 & h,
                    ],
                    12 + 16 * r
                  );
              return t.box(t.types.trun, u);
            }),
            (t.initSegment = function (e) {
              t.types || t.init();
              var i = t.moov(e);
              return wt(t.FTYP, i);
            }),
            t
          );
        })();
      function Pr(t, e) {
        return (
          void 0 === e && (e = !1),
          (function (t, e, i, r) {
            void 0 === i && (i = 1), void 0 === r && (r = !1);
            var a = 1e3 * t * i;
            return r ? Math.round(a) : a;
          })(t, 0, 1 / 9e4, e)
        );
      }
      (Fr.types = void 0),
        (Fr.HDLR_TYPES = void 0),
        (Fr.STTS = void 0),
        (Fr.STSC = void 0),
        (Fr.STCO = void 0),
        (Fr.STSZ = void 0),
        (Fr.VMHD = void 0),
        (Fr.SMHD = void 0),
        (Fr.STSD = void 0),
        (Fr.FTYP = void 0),
        (Fr.DINF = void 0);
      var _r = null,
        Nr = null,
        Ur = (function () {
          function t(t, e, i, r) {
            if (
              ((this.observer = void 0),
              (this.config = void 0),
              (this.typeSupported = void 0),
              (this.ISGenerated = !1),
              (this._initPTS = null),
              (this._initDTS = null),
              (this.nextAvcDts = null),
              (this.nextAudioPts = null),
              (this.videoSampleDuration = null),
              (this.isAudioContiguous = !1),
              (this.isVideoContiguous = !1),
              (this.videoTrackConfig = void 0),
              (this.observer = t),
              (this.config = e),
              (this.typeSupported = i),
              (this.ISGenerated = !1),
              null === _r)
            ) {
              var a = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
              _r = a ? parseInt(a[1]) : 0;
            }
            if (null === Nr) {
              var s = navigator.userAgent.match(/Safari\/(\d+)/i);
              Nr = s ? parseInt(s[1]) : 0;
            }
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.config =
                this.videoTrackConfig =
                this._initPTS =
                this._initDTS =
                  null;
            }),
            (e.resetTimeStamp = function (t) {
              R.log("[mp4-remuxer]: initPTS & initDTS reset"),
                (this._initPTS = this._initDTS = t);
            }),
            (e.resetNextTimestamp = function () {
              R.log("[mp4-remuxer]: reset next timestamp"),
                (this.isVideoContiguous = !1),
                (this.isAudioContiguous = !1);
            }),
            (e.resetInitSegment = function () {
              R.log("[mp4-remuxer]: ISGenerated flag reset"),
                (this.ISGenerated = !1),
                (this.videoTrackConfig = void 0);
            }),
            (e.getVideoStartPts = function (t) {
              var e = !1,
                i = t.reduce(function (t, i) {
                  var r = i.pts - t;
                  return r < -4294967296
                    ? ((e = !0), Gr(t, i.pts))
                    : r > 0
                    ? t
                    : i.pts;
                }, t[0].pts);
              return e && R.debug("PTS rollover detected"), i;
            }),
            (e.remux = function (t, e, i, r, a, s, n, o) {
              var h,
                l,
                A,
                d,
                u,
                c,
                g = a,
                f = a,
                p = t.pid > -1,
                m = e.pid > -1,
                v = e.samples.length,
                E = t.samples.length > 0,
                y = (n && v > 0) || v > 1;
              if (((!p || E) && (!m || y)) || this.ISGenerated || n) {
                if (this.ISGenerated) {
                  var I,
                    C,
                    B,
                    k,
                    x = this.videoTrackConfig;
                  !x ||
                    (e.width === x.width &&
                      e.height === x.height &&
                      (null == (I = e.pixelRatio) ? void 0 : I[0]) ===
                        (null == (C = x.pixelRatio) ? void 0 : C[0]) &&
                      (null == (B = e.pixelRatio) ? void 0 : B[1]) ===
                        (null == (k = x.pixelRatio) ? void 0 : k[1])) ||
                    this.resetInitSegment();
                } else A = this.generateIS(t, e, a, s);
                var w,
                  Q = this.isVideoContiguous,
                  S = -1;
                if (
                  y &&
                  ((S = (function (t) {
                    for (var e = 0; e < t.length; e++) if (t[e].key) return e;
                    return -1;
                  })(e.samples)),
                  !Q && this.config.forceKeyFrameOnDiscontinuity)
                )
                  if (((c = !0), S > 0)) {
                    R.warn(
                      "[mp4-remuxer]: Dropped " +
                        S +
                        " out of " +
                        v +
                        " video samples due to a missing keyframe"
                    );
                    var b = this.getVideoStartPts(e.samples);
                    (e.samples = e.samples.slice(S)),
                      (e.dropped += S),
                      (w = f += (e.samples[0].pts - b) / e.inputTimeScale);
                  } else
                    -1 === S &&
                      (R.warn(
                        "[mp4-remuxer]: No keyframe found out of " +
                          v +
                          " video samples"
                      ),
                      (c = !1));
                if (this.ISGenerated) {
                  if (E && y) {
                    var D = this.getVideoStartPts(e.samples),
                      L = (Gr(t.samples[0].pts, D) - D) / e.inputTimeScale;
                    (g += Math.max(0, L)), (f += Math.max(0, -L));
                  }
                  if (E) {
                    if (
                      (t.samplerate ||
                        (R.warn(
                          "[mp4-remuxer]: regenerate InitSegment as audio detected"
                        ),
                        (A = this.generateIS(t, e, a, s))),
                      (l = this.remuxAudio(
                        t,
                        g,
                        this.isAudioContiguous,
                        s,
                        m || y || o === oe ? f : void 0
                      )),
                      y)
                    ) {
                      var T = l ? l.endPTS - l.startPTS : 0;
                      e.inputTimeScale ||
                        (R.warn(
                          "[mp4-remuxer]: regenerate InitSegment as video detected"
                        ),
                        (A = this.generateIS(t, e, a, s))),
                        (h = this.remuxVideo(e, f, Q, T));
                    }
                  } else y && (h = this.remuxVideo(e, f, Q, 0));
                  h &&
                    ((h.firstKeyFrame = S),
                    (h.independent = -1 !== S),
                    (h.firstKeyFramePTS = w));
                }
              }
              return (
                this.ISGenerated &&
                  this._initPTS &&
                  this._initDTS &&
                  (i.samples.length &&
                    (u = Or(i, a, this._initPTS, this._initDTS)),
                  r.samples.length && (d = jr(r, a, this._initPTS))),
                {
                  audio: l,
                  video: h,
                  initSegment: A,
                  independent: c,
                  text: d,
                  id3: u,
                }
              );
            }),
            (e.generateIS = function (t, e, i, r) {
              var a,
                s,
                n,
                o = t.samples,
                h = e.samples,
                l = this.typeSupported,
                A = {},
                d = this._initPTS,
                u = !d || r,
                c = "audio/mp4";
              if ((u && (a = s = 1 / 0), t.config && o.length)) {
                switch (((t.timescale = t.samplerate), t.segmentCodec)) {
                  case "mp3":
                    l.mpeg
                      ? ((c = "audio/mpeg"), (t.codec = ""))
                      : l.mp3 && (t.codec = "mp3");
                    break;
                  case "ac3":
                    t.codec = "ac-3";
                }
                (A.audio = {
                  id: "audio",
                  container: c,
                  codec: t.codec,
                  initSegment:
                    "mp3" === t.segmentCodec && l.mpeg
                      ? new Uint8Array(0)
                      : Fr.initSegment([t]),
                  metadata: { channelCount: t.channelCount },
                }),
                  u &&
                    ((n = t.inputTimeScale),
                    d && n === d.timescale
                      ? (u = !1)
                      : (a = s = o[0].pts - Math.round(n * i)));
              }
              if (e.sps && e.pps && h.length) {
                if (
                  ((e.timescale = e.inputTimeScale),
                  (A.video = {
                    id: "main",
                    container: "video/mp4",
                    codec: e.codec,
                    initSegment: Fr.initSegment([e]),
                    metadata: { width: e.width, height: e.height },
                  }),
                  u)
                )
                  if (((n = e.inputTimeScale), d && n === d.timescale)) u = !1;
                  else {
                    var g = this.getVideoStartPts(h),
                      f = Math.round(n * i);
                    (s = Math.min(s, Gr(h[0].dts, g) - f)),
                      (a = Math.min(a, g - f));
                  }
                this.videoTrackConfig = {
                  width: e.width,
                  height: e.height,
                  pixelRatio: e.pixelRatio,
                };
              }
              if (Object.keys(A).length)
                return (
                  (this.ISGenerated = !0),
                  u
                    ? ((this._initPTS = { baseTime: a, timescale: n }),
                      (this._initDTS = { baseTime: s, timescale: n }))
                    : (a = n = void 0),
                  { tracks: A, initPTS: a, timescale: n }
                );
            }),
            (e.remuxVideo = function (t, e, i, r) {
              var a,
                s,
                n = t.inputTimeScale,
                h = t.samples,
                l = [],
                A = h.length,
                d = this._initPTS,
                u = this.nextAvcDts,
                c = 8,
                g = this.videoSampleDuration,
                f = Number.POSITIVE_INFINITY,
                p = Number.NEGATIVE_INFINITY,
                m = !1;
              if (!i || null === u) {
                var v = e * n,
                  E = h[0].pts - Gr(h[0].dts, h[0].pts);
                _r && null !== u && Math.abs(v - E - u) < 15e3
                  ? (i = !0)
                  : (u = v - E);
              }
              for (var y = (d.baseTime * n) / d.timescale, I = 0; I < A; I++) {
                var C = h[I];
                (C.pts = Gr(C.pts - y, u)),
                  (C.dts = Gr(C.dts - y, u)),
                  C.dts < h[I > 0 ? I - 1 : I].dts && (m = !0);
              }
              m &&
                h.sort(function (t, e) {
                  var i = t.dts - e.dts,
                    r = t.pts - e.pts;
                  return i || r;
                }),
                (a = h[0].dts);
              var B = h[h.length - 1].dts - a,
                Q = B ? Math.round(B / (A - 1)) : g || t.inputTimeScale / 30;
              if (i) {
                var S = a - u,
                  b = S > Q,
                  D = S < -1;
                if (
                  (b || D) &&
                  (b
                    ? R.warn(
                        "AVC: " +
                          Pr(S, !0) +
                          " ms (" +
                          S +
                          "dts) hole between fragments detected at " +
                          e.toFixed(3)
                      )
                    : R.warn(
                        "AVC: " +
                          Pr(-S, !0) +
                          " ms (" +
                          S +
                          "dts) overlapping between fragments detected at " +
                          e.toFixed(3)
                      ),
                  !D || u >= h[0].pts || _r)
                ) {
                  a = u;
                  var L = h[0].pts - S;
                  if (b) (h[0].dts = a), (h[0].pts = L);
                  else
                    for (var T = 0; T < h.length && !(h[T].dts > L); T++)
                      (h[T].dts -= S), (h[T].pts -= S);
                  R.log(
                    "Video: Initial PTS/DTS adjusted: " +
                      Pr(L, !0) +
                      "/" +
                      Pr(a, !0) +
                      ", delta: " +
                      Pr(S, !0) +
                      " ms"
                  );
                }
              }
              for (
                var M = 0, F = 0, P = (a = Math.max(0, a)), _ = 0;
                _ < A;
                _++
              ) {
                for (
                  var N = h[_], U = N.units, G = U.length, O = 0, j = 0;
                  j < G;
                  j++
                )
                  O += U[j].data.length;
                (F += O),
                  (M += G),
                  (N.length = O),
                  N.dts < P
                    ? ((N.dts = P), (P += (Q / 4) | 0 || 1))
                    : (P = N.dts),
                  (f = Math.min(N.pts, f)),
                  (p = Math.max(N.pts, p));
              }
              s = h[A - 1].dts;
              var Y,
                H = F + 4 * M + 8;
              try {
                Y = new Uint8Array(H);
              } catch (yt) {
                return void this.observer.emit(k.ERROR, k.ERROR, {
                  type: x.MUX_ERROR,
                  details: w.REMUX_ALLOC_ERROR,
                  fatal: !1,
                  error: yt,
                  bytes: H,
                  reason: "fail allocating video mdat " + H,
                });
              }
              var V = new DataView(Y.buffer);
              V.setUint32(0, H), Y.set(Fr.types.mdat, 4);
              for (
                var K = !1,
                  z = Number.POSITIVE_INFINITY,
                  q = Number.POSITIVE_INFINITY,
                  W = Number.NEGATIVE_INFINITY,
                  J = Number.NEGATIVE_INFINITY,
                  Z = 0;
                Z < A;
                Z++
              ) {
                for (
                  var X = h[Z], $ = X.units, tt = 0, et = 0, it = $.length;
                  et < it;
                  et++
                ) {
                  var rt = $[et],
                    at = rt.data,
                    st = rt.data.byteLength;
                  V.setUint32(c, st),
                    (c += 4),
                    Y.set(at, c),
                    (c += st),
                    (tt += 4 + st);
                }
                var nt = void 0;
                if (Z < A - 1)
                  (g = h[Z + 1].dts - X.dts), (nt = h[Z + 1].pts - X.pts);
                else {
                  var ot = this.config,
                    ht = Z > 0 ? X.dts - h[Z - 1].dts : Q;
                  if (
                    ((nt = Z > 0 ? X.pts - h[Z - 1].pts : Q),
                    ot.stretchShortVideoTrack && null !== this.nextAudioPts)
                  ) {
                    var lt = Math.floor(ot.maxBufferHole * n),
                      At = (r ? f + r * n : this.nextAudioPts) - X.pts;
                    At > lt
                      ? ((g = At - ht) < 0 ? (g = ht) : (K = !0),
                        R.log(
                          "[mp4-remuxer]: It is approximately " +
                            At / 90 +
                            " ms to the next segment; using duration " +
                            g / 90 +
                            " ms for the last video frame."
                        ))
                      : (g = ht);
                  } else g = ht;
                }
                var dt = Math.round(X.pts - X.dts);
                (z = Math.min(z, g)),
                  (W = Math.max(W, g)),
                  (q = Math.min(q, nt)),
                  (J = Math.max(J, nt)),
                  l.push(new Yr(X.key, g, tt, dt));
              }
              if (l.length)
                if (_r) {
                  if (_r < 70) {
                    var ut = l[0].flags;
                    (ut.dependsOn = 2), (ut.isNonSync = 0);
                  }
                } else if (
                  Nr &&
                  J - q < W - z &&
                  Q / W < 0.025 &&
                  0 === l[0].cts
                ) {
                  R.warn(
                    "Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration."
                  );
                  for (var ct = a, gt = 0, ft = l.length; gt < ft; gt++) {
                    var pt = ct + l[gt].duration,
                      mt = ct + l[gt].cts;
                    if (gt < ft - 1) {
                      var vt = pt + l[gt + 1].cts;
                      l[gt].duration = vt - mt;
                    } else l[gt].duration = gt ? l[gt - 1].duration : Q;
                    (l[gt].cts = 0), (ct = pt);
                  }
                }
              (g = K || !g ? Q : g),
                (this.nextAvcDts = u = s + g),
                (this.videoSampleDuration = g),
                (this.isVideoContiguous = !0);
              var Et = {
                data1: Fr.moof(t.sequenceNumber++, a, o({}, t, { samples: l })),
                data2: Y,
                startPTS: f / n,
                endPTS: (p + g) / n,
                startDTS: a / n,
                endDTS: u / n,
                type: "video",
                hasAudio: !1,
                hasVideo: !0,
                nb: l.length,
                dropped: t.dropped,
              };
              return (t.samples = []), (t.dropped = 0), Et;
            }),
            (e.getSamplesPerFrame = function (t) {
              switch (t.segmentCodec) {
                case "mp3":
                  return 1152;
                case "ac3":
                  return 1536;
                default:
                  return 1024;
              }
            }),
            (e.remuxAudio = function (t, e, i, r, a) {
              var s = t.inputTimeScale,
                n = s / (t.samplerate ? t.samplerate : s),
                h = this.getSamplesPerFrame(t),
                l = h * n,
                A = this._initPTS,
                d = "mp3" === t.segmentCodec && this.typeSupported.mpeg,
                u = [],
                c = void 0 !== a,
                g = t.samples,
                f = d ? 0 : 8,
                p = this.nextAudioPts || -1,
                m = e * s,
                v = (A.baseTime * s) / A.timescale;
              if (
                ((this.isAudioContiguous = i =
                  i ||
                  (g.length &&
                    p > 0 &&
                    ((r && Math.abs(m - p) < 9e3) ||
                      Math.abs(Gr(g[0].pts - v, m) - p) < 20 * l))),
                g.forEach(function (t) {
                  t.pts = Gr(t.pts - v, m);
                }),
                !i || p < 0)
              ) {
                if (
                  !(g = g.filter(function (t) {
                    return t.pts >= 0;
                  })).length
                )
                  return;
                p = 0 === a ? 0 : r && !c ? Math.max(0, m) : g[0].pts;
              }
              if ("aac" === t.segmentCodec)
                for (
                  var E = this.config.maxAudioFramesDrift, y = 0, I = p;
                  y < g.length;
                  y++
                ) {
                  var C = g[y],
                    B = C.pts,
                    Q = B - I,
                    S = Math.abs((1e3 * Q) / s);
                  if (Q <= -E * l && c)
                    0 === y &&
                      (R.warn(
                        "Audio frame @ " +
                          (B / s).toFixed(3) +
                          "s overlaps nextAudioPts by " +
                          Math.round((1e3 * Q) / s) +
                          " ms."
                      ),
                      (this.nextAudioPts = p = I = B));
                  else if (Q >= E * l && S < 1e4 && c) {
                    var b = Math.round(Q / l);
                    (I = B - b * l) < 0 && (b--, (I += l)),
                      0 === y && (this.nextAudioPts = p = I),
                      R.warn(
                        "[mp4-remuxer]: Injecting " +
                          b +
                          " audio frame @ " +
                          (I / s).toFixed(3) +
                          "s due to " +
                          Math.round((1e3 * Q) / s) +
                          " ms gap."
                      );
                    for (var D = 0; D < b; D++) {
                      var L = Math.max(I, 0),
                        T = Tr.getSilentFrame(
                          t.manifestCodec || t.codec,
                          t.channelCount
                        );
                      T ||
                        (R.log(
                          "[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."
                        ),
                        (T = C.unit.subarray())),
                        g.splice(y, 0, { unit: T, pts: L }),
                        (I += l),
                        y++;
                    }
                  }
                  (C.pts = I), (I += l);
                }
              for (var M, F = null, P = null, _ = 0, N = g.length; N--; )
                _ += g[N].unit.byteLength;
              for (var U = 0, G = g.length; U < G; U++) {
                var O = g[U],
                  j = O.unit,
                  Y = O.pts;
                if (null !== P) u[U - 1].duration = Math.round((Y - P) / n);
                else {
                  if (
                    (i && "aac" === t.segmentCodec && (Y = p),
                    (F = Y),
                    !(_ > 0))
                  )
                    return;
                  _ += f;
                  try {
                    M = new Uint8Array(_);
                  } catch (Z) {
                    return void this.observer.emit(k.ERROR, k.ERROR, {
                      type: x.MUX_ERROR,
                      details: w.REMUX_ALLOC_ERROR,
                      fatal: !1,
                      error: Z,
                      bytes: _,
                      reason: "fail allocating audio mdat " + _,
                    });
                  }
                  d ||
                    (new DataView(M.buffer).setUint32(0, _),
                    M.set(Fr.types.mdat, 4));
                }
                M.set(j, f);
                var H = j.byteLength;
                (f += H), u.push(new Yr(!0, h, H, 0)), (P = Y);
              }
              var V = u.length;
              if (V) {
                var K = u[u.length - 1];
                this.nextAudioPts = p = P + n * K.duration;
                var z = d
                  ? new Uint8Array(0)
                  : Fr.moof(
                      t.sequenceNumber++,
                      F / n,
                      o({}, t, { samples: u })
                    );
                t.samples = [];
                var q = F / s,
                  W = p / s,
                  J = {
                    data1: z,
                    data2: M,
                    startPTS: q,
                    endPTS: W,
                    startDTS: q,
                    endDTS: W,
                    type: "audio",
                    hasAudio: !0,
                    hasVideo: !1,
                    nb: V,
                  };
                return (this.isAudioContiguous = !0), J;
              }
            }),
            (e.remuxEmptyAudio = function (t, e, i, r) {
              var a = t.inputTimeScale,
                s = a / (t.samplerate ? t.samplerate : a),
                n = this.nextAudioPts,
                o = this._initDTS,
                h = (9e4 * o.baseTime) / o.timescale,
                l = (null !== n ? n : r.startDTS * a) + h,
                A = r.endDTS * a + h,
                d = 1024 * s,
                u = Math.ceil((A - l) / d),
                c = Tr.getSilentFrame(
                  t.manifestCodec || t.codec,
                  t.channelCount
                );
              if ((R.warn("[mp4-remuxer]: remux empty Audio"), c)) {
                for (var g = [], f = 0; f < u; f++) {
                  var p = l + f * d;
                  g.push({ unit: c, pts: p, dts: p });
                }
                return (t.samples = g), this.remuxAudio(t, e, i, !1);
              }
              R.trace(
                "[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec"
              );
            }),
            t
          );
        })();
      function Gr(t, e) {
        var i;
        if (null === e) return t;
        for (
          i = e < t ? -8589934592 : 8589934592;
          Math.abs(t - e) > 4294967296;

        )
          t += i;
        return t;
      }
      function Or(t, e, i, r) {
        var a = t.samples.length;
        if (a) {
          for (var s = t.inputTimeScale, n = 0; n < a; n++) {
            var o = t.samples[n];
            (o.pts = Gr(o.pts - (i.baseTime * s) / i.timescale, e * s) / s),
              (o.dts = Gr(o.dts - (r.baseTime * s) / r.timescale, e * s) / s);
          }
          var h = t.samples;
          return (t.samples = []), { samples: h };
        }
      }
      function jr(t, e, i) {
        var r = t.samples.length;
        if (r) {
          for (var a = t.inputTimeScale, s = 0; s < r; s++) {
            var n = t.samples[s];
            n.pts = Gr(n.pts - (i.baseTime * a) / i.timescale, e * a) / a;
          }
          t.samples.sort(function (t, e) {
            return t.pts - e.pts;
          });
          var o = t.samples;
          return (t.samples = []), { samples: o };
        }
      }
      var Yr = function (t, e, i, r) {
          (this.size = void 0),
            (this.duration = void 0),
            (this.cts = void 0),
            (this.flags = void 0),
            (this.duration = e),
            (this.size = i),
            (this.cts = r),
            (this.flags = {
              isLeading: 0,
              isDependedOn: 0,
              hasRedundancy: 0,
              degradPrio: 0,
              dependsOn: t ? 2 : 1,
              isNonSync: t ? 0 : 1,
            });
        },
        Hr = (function () {
          function t() {
            (this.emitInitSegment = !1),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this.initData = void 0),
              (this.initPTS = null),
              (this.initTracks = void 0),
              (this.lastEndTime = null);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {}),
            (e.resetTimeStamp = function (t) {
              (this.initPTS = t), (this.lastEndTime = null);
            }),
            (e.resetNextTimestamp = function () {
              this.lastEndTime = null;
            }),
            (e.resetInitSegment = function (t, e, i, r) {
              (this.audioCodec = e),
                (this.videoCodec = i),
                this.generateInitSegment(
                  (function (t, e) {
                    if (!t || !e) return t;
                    var i = e.keyId;
                    return (
                      i &&
                        e.isCommonEncryption &&
                        vt(t, ["moov", "trak"]).forEach(function (t) {
                          var e = vt(t, [
                              "mdia",
                              "minf",
                              "stbl",
                              "stsd",
                            ])[0].subarray(8),
                            r = vt(e, ["enca"]),
                            a = r.length > 0;
                          a || (r = vt(e, ["encv"])),
                            r.forEach(function (t) {
                              vt(a ? t.subarray(28) : t.subarray(78), [
                                "sinf",
                              ]).forEach(function (t) {
                                var e = (function (t) {
                                  var e = vt(t, ["schm"])[0];
                                  if (e) {
                                    var i = ct(e.subarray(4, 8));
                                    if ("cbcs" === i || "cenc" === i)
                                      return vt(t, ["schi", "tenc"])[0];
                                  }
                                  return (
                                    R.error("[eme] missing 'schm' box"), null
                                  );
                                })(t);
                                if (e) {
                                  var r = e.subarray(8, 24);
                                  r.some(function (t) {
                                    return 0 !== t;
                                  }) ||
                                    (R.log(
                                      "[eme] Patching keyId in 'enc" +
                                        (a ? "a" : "v") +
                                        ">sinf>>tenc' box: " +
                                        lt(r) +
                                        " -> " +
                                        lt(i)
                                    ),
                                    e.set(i, 8));
                                }
                              });
                            });
                        }),
                      t
                    );
                  })(t, r)
                ),
                (this.emitInitSegment = !0);
            }),
            (e.generateInitSegment = function (t) {
              var e = this.audioCodec,
                i = this.videoCodec;
              if (null == t || !t.byteLength)
                return (
                  (this.initTracks = void 0), void (this.initData = void 0)
                );
              var r = (this.initData = yt(t));
              r.audio && (e = Vr(r.audio, N)), r.video && (i = Vr(r.video, U));
              var a = {};
              r.audio && r.video
                ? (a.audiovideo = {
                    container: "video/mp4",
                    codec: e + "," + i,
                    initSegment: t,
                    id: "main",
                  })
                : r.audio
                ? (a.audio = {
                    container: "audio/mp4",
                    codec: e,
                    initSegment: t,
                    id: "audio",
                  })
                : r.video
                ? (a.video = {
                    container: "video/mp4",
                    codec: i,
                    initSegment: t,
                    id: "main",
                  })
                : R.warn(
                    "[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."
                  ),
                (this.initTracks = a);
            }),
            (e.remux = function (t, e, i, r, a, s) {
              var n,
                o,
                h = this.initPTS,
                l = this.lastEndTime,
                A = {
                  audio: void 0,
                  video: void 0,
                  text: r,
                  id3: i,
                  initSegment: void 0,
                };
              I(l) || (l = this.lastEndTime = a || 0);
              var d = e.samples;
              if (null == d || !d.length) return A;
              var u = { initPTS: void 0, timescale: 1 },
                c = this.initData;
              if (
                ((null != (n = c) && n.length) ||
                  (this.generateInitSegment(d), (c = this.initData)),
                null == (o = c) || !o.length)
              )
                return (
                  R.warn(
                    "[passthrough-remuxer.ts]: Failed to generate initSegment."
                  ),
                  A
                );
              this.emitInitSegment &&
                ((u.tracks = this.initTracks), (this.emitInitSegment = !1));
              var g,
                f = (function (t, e) {
                  for (
                    var i = 0, r = 0, a = 0, s = vt(t, ["moof", "traf"]), n = 0;
                    n < s.length;
                    n++
                  ) {
                    var o = s[n],
                      h = vt(o, ["tfhd"])[0],
                      l = e[ft(h, 4)];
                    if (l) {
                      var A = l.default,
                        d = ft(h, 0) | (null == A ? void 0 : A.flags),
                        u = null == A ? void 0 : A.duration;
                      8 & d && (u = ft(h, 2 & d ? 12 : 8));
                      for (
                        var c = l.timescale || 9e4, g = vt(o, ["trun"]), f = 0;
                        f < g.length;
                        f++
                      )
                        !(i = xt(g[f])) && u && (i = u * ft(g[f], 4)),
                          l.type === U
                            ? (r += i / c)
                            : l.type === N && (a += i / c);
                    }
                  }
                  if (0 === r && 0 === a) {
                    for (
                      var p = 0, m = vt(t, ["sidx"]), v = 0;
                      v < m.length;
                      v++
                    ) {
                      var E = Et(m[v]);
                      null != E &&
                        E.references &&
                        (p += E.references.reduce(function (t, e) {
                          return t + e.info.duration || 0;
                        }, 0));
                    }
                    return p;
                  }
                  return r || a;
                })(d, c),
                p =
                  ((g = c),
                  vt(d, ["moof", "traf"]).reduce(function (t, e) {
                    var i = vt(e, ["tfdt"])[0],
                      r = i[0],
                      a = vt(e, ["tfhd"]).reduce(function (t, e) {
                        var a = ft(e, 4),
                          s = g[a];
                        if (s) {
                          var n = ft(i, 4);
                          if (1 === r) {
                            if (n === At)
                              return (
                                R.warn(
                                  "[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"
                                ),
                                t
                              );
                            (n *= At + 1), (n += ft(i, 8));
                          }
                          var o = n / (s.timescale || 9e4);
                          if (I(o) && (null === t || o < t)) return o;
                        }
                        return t;
                      }, null);
                    return null !== a && I(a) && (null === t || a < t) ? a : t;
                  }, null)),
                m = null === p ? a : p;
              ((function (t, e, i, r) {
                if (null === t) return !0;
                var a = Math.max(r, 1),
                  s = e - t.baseTime / t.timescale;
                return Math.abs(s - i) > a;
              })(h, m, a, f) ||
                (u.timescale !== h.timescale && s)) &&
                ((u.initPTS = m - a),
                h &&
                  1 === h.timescale &&
                  R.warn("Adjusting initPTS by " + (u.initPTS - h.baseTime)),
                (this.initPTS = h = { baseTime: u.initPTS, timescale: 1 }));
              var v = t ? m - h.baseTime / h.timescale : l,
                E = v + f;
              !(function (t, e, i) {
                vt(e, ["moof", "traf"]).forEach(function (e) {
                  vt(e, ["tfhd"]).forEach(function (r) {
                    var a = ft(r, 4),
                      s = t[a];
                    if (s) {
                      var n = s.timescale || 9e4;
                      vt(e, ["tfdt"]).forEach(function (t) {
                        var e = t[0],
                          r = i * n;
                        if (r) {
                          var a = ft(t, 4);
                          if (0 === e) (a -= r), mt(t, 4, (a = Math.max(a, 0)));
                          else {
                            (a *= Math.pow(2, 32)),
                              (a += ft(t, 8)),
                              (a -= r),
                              (a = Math.max(a, 0));
                            var s = Math.floor(a / (At + 1)),
                              o = Math.floor(a % (At + 1));
                            mt(t, 4, s), mt(t, 8, o);
                          }
                        }
                      });
                    }
                  });
                });
              })(c, d, h.baseTime / h.timescale),
                f > 0
                  ? (this.lastEndTime = E)
                  : (R.warn(
                      "Duration parsed from mp4 should be greater than zero"
                    ),
                    this.resetNextTimestamp());
              var y = !!c.audio,
                C = !!c.video,
                B = "";
              y && (B += "audio"), C && (B += "video");
              var k = {
                data1: d,
                startPTS: v,
                startDTS: v,
                endPTS: E,
                endDTS: E,
                type: B,
                hasAudio: y,
                hasVideo: C,
                nb: 1,
                dropped: 0,
              };
              return (
                (A.audio = "audio" === k.type ? k : void 0),
                (A.video = "audio" !== k.type ? k : void 0),
                (A.initSegment = u),
                (A.id3 = Or(i, a, h, h)),
                r.samples.length && (A.text = jr(r, a, h)),
                A
              );
            }),
            t
          );
        })();
      function Vr(t, e) {
        var i = null == t ? void 0 : t.codec;
        if (i && i.length > 4) return i;
        if (e === N) {
          if ("ec-3" === i || "ac-3" === i || "alac" === i) return i;
          if ("fLaC" === i || "Opus" === i) return Ot(i, !1);
          var r = "mp4a.40.5";
          return (
            R.info(
              'Parsed audio codec "' +
                i +
                '" or audio object type not handled. Using "' +
                r +
                '"'
            ),
            r
          );
        }
        return (
          R.warn('Unhandled video codec "' + i + '"'),
          "hvc1" === i || "hev1" === i
            ? "hvc1.1.6.L120.90"
            : "av01" === i
            ? "av01.0.04M.08"
            : "avc1.42e01e"
        );
      }
      var Kr,
        zr = "undefined" != typeof self ? self : void 0;
      try {
        Kr = self.performance.now.bind(self.performance);
      } catch (la) {
        R.debug("Unable to use Performance API on this environment"),
          (Kr = null == zr ? void 0 : zr.Date.now);
      }
      var qr = [
          { demux: yr, remux: Hr },
          { demux: wr, remux: Ur },
          { demux: vr, remux: Ur },
          { demux: Lr, remux: Ur },
        ],
        Wr = (function () {
          function t(t, e, i, r, a) {
            (this.async = !1),
              (this.observer = void 0),
              (this.typeSupported = void 0),
              (this.config = void 0),
              (this.vendor = void 0),
              (this.id = void 0),
              (this.demuxer = void 0),
              (this.remuxer = void 0),
              (this.decrypter = void 0),
              (this.probe = void 0),
              (this.decryptionPromise = null),
              (this.transmuxConfig = void 0),
              (this.currentTransmuxState = void 0),
              (this.observer = t),
              (this.typeSupported = e),
              (this.config = i),
              (this.vendor = r),
              (this.id = a);
          }
          var e = t.prototype;
          return (
            (e.configure = function (t) {
              (this.transmuxConfig = t),
                this.decrypter && this.decrypter.reset();
            }),
            (e.push = function (t, e, i, r) {
              var a = this,
                s = i.transmuxing;
              s.executeStart = Kr();
              var n = new Uint8Array(t),
                o = this.currentTransmuxState,
                h = this.transmuxConfig;
              r && (this.currentTransmuxState = r);
              var l,
                A,
                d = r || o,
                u = d.contiguous,
                c = d.discontinuity,
                g = d.trackSwitch,
                f = d.accurateTimeOffset,
                p = d.timeOffset,
                m = d.initSegmentChange,
                v = h.audioCodec,
                E = h.videoCodec,
                y = h.defaultInitPts,
                I = h.duration,
                C = h.initSegmentData,
                B =
                  ((l = e),
                  (A = null),
                  n.byteLength > 0 &&
                    null != (null == l ? void 0 : l.key) &&
                    null !== l.iv &&
                    null != l.method &&
                    (A = l),
                  A);
              if (B && "AES-128" === B.method) {
                var Q = this.getDecrypter();
                if (!Q.isSync())
                  return (
                    (this.decryptionPromise = Q.webCryptoDecrypt(
                      n,
                      B.key.buffer,
                      B.iv.buffer
                    ).then(function (t) {
                      var e = a.push(t, null, i);
                      return (a.decryptionPromise = null), e;
                    })),
                    this.decryptionPromise
                  );
                var S = Q.softwareDecrypt(n, B.key.buffer, B.iv.buffer);
                if ((i.part > -1 && (S = Q.flush()), !S))
                  return (s.executeEnd = Kr()), Jr(i);
                n = new Uint8Array(S);
              }
              var b = this.needsProbing(c, g);
              if (b) {
                var D = this.configureTransmuxer(n);
                if (D)
                  return (
                    R.warn("[transmuxer] " + D.message),
                    this.observer.emit(k.ERROR, k.ERROR, {
                      type: x.MEDIA_ERROR,
                      details: w.FRAG_PARSING_ERROR,
                      fatal: !1,
                      error: D,
                      reason: D.message,
                    }),
                    (s.executeEnd = Kr()),
                    Jr(i)
                  );
              }
              (c || g || m || b) && this.resetInitSegment(C, v, E, I, e),
                (c || m || b) && this.resetInitialTimestamp(y),
                u || this.resetContiguity();
              var L = this.transmux(n, B, p, f, i),
                T = this.currentTransmuxState;
              return (
                (T.contiguous = !0),
                (T.discontinuity = !1),
                (T.trackSwitch = !1),
                (s.executeEnd = Kr()),
                L
              );
            }),
            (e.flush = function (t) {
              var e = this,
                i = t.transmuxing;
              i.executeStart = Kr();
              var r = this.decrypter,
                a = this.currentTransmuxState,
                s = this.decryptionPromise;
              if (s)
                return s.then(function () {
                  return e.flush(t);
                });
              var n = [],
                o = a.timeOffset;
              if (r) {
                var h = r.flush();
                h && n.push(this.push(h, null, t));
              }
              var l = this.demuxer,
                A = this.remuxer;
              if (!l || !A) return (i.executeEnd = Kr()), [Jr(t)];
              var d = l.flush(o);
              return Zr(d)
                ? d.then(function (i) {
                    return e.flushRemux(n, i, t), n;
                  })
                : (this.flushRemux(n, d, t), n);
            }),
            (e.flushRemux = function (t, e, i) {
              var r = e.audioTrack,
                a = e.videoTrack,
                s = e.id3Track,
                n = e.textTrack,
                o = this.currentTransmuxState,
                h = o.accurateTimeOffset,
                l = o.timeOffset;
              R.log(
                "[transmuxer.ts]: Flushed fragment " +
                  i.sn +
                  (i.part > -1 ? " p: " + i.part : "") +
                  " of level " +
                  i.level
              );
              var A = this.remuxer.remux(r, a, s, n, l, h, !0, this.id);
              t.push({ remuxResult: A, chunkMeta: i }),
                (i.transmuxing.executeEnd = Kr());
            }),
            (e.resetInitialTimestamp = function (t) {
              var e = this.demuxer,
                i = this.remuxer;
              e && i && (e.resetTimeStamp(t), i.resetTimeStamp(t));
            }),
            (e.resetContiguity = function () {
              var t = this.demuxer,
                e = this.remuxer;
              t && e && (t.resetContiguity(), e.resetNextTimestamp());
            }),
            (e.resetInitSegment = function (t, e, i, r, a) {
              var s = this.demuxer,
                n = this.remuxer;
              s &&
                n &&
                (s.resetInitSegment(t, e, i, r),
                n.resetInitSegment(t, e, i, a));
            }),
            (e.destroy = function () {
              this.demuxer && (this.demuxer.destroy(), (this.demuxer = void 0)),
                this.remuxer &&
                  (this.remuxer.destroy(), (this.remuxer = void 0));
            }),
            (e.transmux = function (t, e, i, r, a) {
              return e && "SAMPLE-AES" === e.method
                ? this.transmuxSampleAes(t, e, i, r, a)
                : this.transmuxUnencrypted(t, i, r, a);
            }),
            (e.transmuxUnencrypted = function (t, e, i, r) {
              var a = this.demuxer.demux(t, e, !1, !this.config.progressive),
                s = a.audioTrack,
                n = a.videoTrack,
                o = a.id3Track,
                h = a.textTrack;
              return {
                remuxResult: this.remuxer.remux(s, n, o, h, e, i, !1, this.id),
                chunkMeta: r,
              };
            }),
            (e.transmuxSampleAes = function (t, e, i, r, a) {
              var s = this;
              return this.demuxer.demuxSampleAes(t, e, i).then(function (t) {
                return {
                  remuxResult: s.remuxer.remux(
                    t.audioTrack,
                    t.videoTrack,
                    t.id3Track,
                    t.textTrack,
                    i,
                    r,
                    !1,
                    s.id
                  ),
                  chunkMeta: a,
                };
              });
            }),
            (e.configureTransmuxer = function (t) {
              for (
                var e,
                  i = this.config,
                  r = this.observer,
                  a = this.typeSupported,
                  s = this.vendor,
                  n = 0,
                  o = qr.length;
                n < o;
                n++
              ) {
                var h;
                if (null != (h = qr[n].demux) && h.probe(t)) {
                  e = qr[n];
                  break;
                }
              }
              if (!e)
                return new Error(
                  "Failed to find demuxer by probing fragment data"
                );
              var l = this.demuxer,
                A = this.remuxer,
                d = e.remux,
                u = e.demux;
              (A && A instanceof d) || (this.remuxer = new d(r, i, a, s)),
                (l && l instanceof u) ||
                  ((this.demuxer = new u(r, i, a)), (this.probe = u.probe));
            }),
            (e.needsProbing = function (t, e) {
              return !this.demuxer || !this.remuxer || t || e;
            }),
            (e.getDecrypter = function () {
              var t = this.decrypter;
              return t || (t = this.decrypter = new _i(this.config)), t;
            }),
            t
          );
        })(),
        Jr = function (t) {
          return { remuxResult: {}, chunkMeta: t };
        };
      function Zr(t) {
        return "then" in t && t.then instanceof Function;
      }
      var Xr = function (t, e, i, r, a) {
          (this.audioCodec = void 0),
            (this.videoCodec = void 0),
            (this.initSegmentData = void 0),
            (this.duration = void 0),
            (this.defaultInitPts = void 0),
            (this.audioCodec = t),
            (this.videoCodec = e),
            (this.initSegmentData = i),
            (this.duration = r),
            (this.defaultInitPts = a || null);
        },
        $r = function (t, e, i, r, a, s) {
          (this.discontinuity = void 0),
            (this.contiguous = void 0),
            (this.accurateTimeOffset = void 0),
            (this.trackSwitch = void 0),
            (this.timeOffset = void 0),
            (this.initSegmentChange = void 0),
            (this.discontinuity = t),
            (this.contiguous = e),
            (this.accurateTimeOffset = i),
            (this.trackSwitch = r),
            (this.timeOffset = a),
            (this.initSegmentChange = s);
        },
        ta = { exports: {} };
      !(function (t) {
        var e = Object.prototype.hasOwnProperty,
          i = "~";
        function r() {}
        function a(t, e, i) {
          (this.fn = t), (this.context = e), (this.once = i || !1);
        }
        function s(t, e, r, s, n) {
          if ("function" != typeof r)
            throw new TypeError("The listener must be a function");
          var o = new a(r, s || t, n),
            h = i ? i + e : e;
          return (
            t._events[h]
              ? t._events[h].fn
                ? (t._events[h] = [t._events[h], o])
                : t._events[h].push(o)
              : ((t._events[h] = o), t._eventsCount++),
            t
          );
        }
        function n(t, e) {
          0 == --t._eventsCount ? (t._events = new r()) : delete t._events[e];
        }
        function o() {
          (this._events = new r()), (this._eventsCount = 0);
        }
        Object.create &&
          ((r.prototype = Object.create(null)), new r().__proto__ || (i = !1)),
          (o.prototype.eventNames = function () {
            var t,
              r,
              a = [];
            if (0 === this._eventsCount) return a;
            for (r in (t = this._events))
              e.call(t, r) && a.push(i ? r.slice(1) : r);
            return Object.getOwnPropertySymbols
              ? a.concat(Object.getOwnPropertySymbols(t))
              : a;
          }),
          (o.prototype.listeners = function (t) {
            var e = i ? i + t : t,
              r = this._events[e];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var a = 0, s = r.length, n = new Array(s); a < s; a++)
              n[a] = r[a].fn;
            return n;
          }),
          (o.prototype.listenerCount = function (t) {
            var e = i ? i + t : t,
              r = this._events[e];
            return r ? (r.fn ? 1 : r.length) : 0;
          }),
          (o.prototype.emit = function (t, e, r, a, s, n) {
            var o = i ? i + t : t;
            if (!this._events[o]) return !1;
            var h,
              l,
              A = this._events[o],
              d = arguments.length;
            if (A.fn) {
              switch ((A.once && this.removeListener(t, A.fn, void 0, !0), d)) {
                case 1:
                  return A.fn.call(A.context), !0;
                case 2:
                  return A.fn.call(A.context, e), !0;
                case 3:
                  return A.fn.call(A.context, e, r), !0;
                case 4:
                  return A.fn.call(A.context, e, r, a), !0;
                case 5:
                  return A.fn.call(A.context, e, r, a, s), !0;
                case 6:
                  return A.fn.call(A.context, e, r, a, s, n), !0;
              }
              for (l = 1, h = new Array(d - 1); l < d; l++)
                h[l - 1] = arguments[l];
              A.fn.apply(A.context, h);
            } else {
              var u,
                c = A.length;
              for (l = 0; l < c; l++)
                switch (
                  (A[l].once && this.removeListener(t, A[l].fn, void 0, !0), d)
                ) {
                  case 1:
                    A[l].fn.call(A[l].context);
                    break;
                  case 2:
                    A[l].fn.call(A[l].context, e);
                    break;
                  case 3:
                    A[l].fn.call(A[l].context, e, r);
                    break;
                  case 4:
                    A[l].fn.call(A[l].context, e, r, a);
                    break;
                  default:
                    if (!h)
                      for (u = 1, h = new Array(d - 1); u < d; u++)
                        h[u - 1] = arguments[u];
                    A[l].fn.apply(A[l].context, h);
                }
            }
            return !0;
          }),
          (o.prototype.on = function (t, e, i) {
            return s(this, t, e, i, !1);
          }),
          (o.prototype.once = function (t, e, i) {
            return s(this, t, e, i, !0);
          }),
          (o.prototype.removeListener = function (t, e, r, a) {
            var s = i ? i + t : t;
            if (!this._events[s]) return this;
            if (!e) return n(this, s), this;
            var o = this._events[s];
            if (o.fn)
              o.fn !== e ||
                (a && !o.once) ||
                (r && o.context !== r) ||
                n(this, s);
            else {
              for (var h = 0, l = [], A = o.length; h < A; h++)
                (o[h].fn !== e ||
                  (a && !o[h].once) ||
                  (r && o[h].context !== r)) &&
                  l.push(o[h]);
              l.length
                ? (this._events[s] = 1 === l.length ? l[0] : l)
                : n(this, s);
            }
            return this;
          }),
          (o.prototype.removeAllListeners = function (t) {
            var e;
            return (
              t
                ? ((e = i ? i + t : t), this._events[e] && n(this, e))
                : ((this._events = new r()), (this._eventsCount = 0)),
              this
            );
          }),
          (o.prototype.off = o.prototype.removeListener),
          (o.prototype.addListener = o.prototype.on),
          (o.prefixed = i),
          (o.EventEmitter = o),
          (t.exports = o);
      })(ta);
      var ea = c(ta.exports);
      function ia(t, e) {
        if (
          !(
            (i = e.remuxResult).audio ||
            i.video ||
            i.text ||
            i.id3 ||
            i.initSegment
          )
        )
          return !1;
        var i,
          r = [],
          a = e.remuxResult,
          s = a.audio,
          n = a.video;
        return (
          s && ra(r, s),
          n && ra(r, n),
          t.postMessage({ event: "transmuxComplete", data: e }, r),
          !0
        );
      }
      function ra(t, e) {
        e.data1 && t.push(e.data1.buffer), e.data2 && t.push(e.data2.buffer);
      }
      function aa(t, e, i) {
        e.reduce(function (e, i) {
          return ia(t, i) || e;
        }, !1) || t.postMessage({ event: "transmuxComplete", data: e[0] }),
          t.postMessage({ event: "flush", data: i });
      }
      void 0 !== e &&
        e &&
        (function (t) {
          var e = new ea(),
            i = function (e, i) {
              t.postMessage({ event: e, data: i });
            };
          e.on(k.FRAG_DECRYPTED, i),
            e.on(k.ERROR, i),
            t.addEventListener("message", function (r) {
              var a = r.data;
              switch (a.cmd) {
                case "init":
                  var s = JSON.parse(a.config);
                  (t.transmuxer = new Wr(
                    e,
                    a.typeSupported,
                    s,
                    a.vendor,
                    a.id
                  )),
                    D(s.debug, a.id),
                    (function () {
                      var t = function (t) {
                        R[t] = function (e) {
                          i("workerLog", { logType: t, message: e });
                        };
                      };
                      for (var e in R) t(e);
                    })(),
                    i("init", null);
                  break;
                case "configure":
                  t.transmuxer.configure(a.config);
                  break;
                case "demux":
                  var n = t.transmuxer.push(
                    a.data,
                    a.decryptdata,
                    a.chunkMeta,
                    a.state
                  );
                  Zr(n)
                    ? ((t.transmuxer.async = !0),
                      n
                        .then(function (e) {
                          ia(t, e);
                        })
                        .catch(function (t) {
                          i(k.ERROR, {
                            type: x.MEDIA_ERROR,
                            details: w.FRAG_PARSING_ERROR,
                            chunkMeta: a.chunkMeta,
                            fatal: !1,
                            error: t,
                            err: t,
                            reason: "transmuxer-worker push error",
                          });
                        }))
                    : ((t.transmuxer.async = !1), ia(t, n));
                  break;
                case "flush":
                  var o = a.chunkMeta,
                    h = t.transmuxer.flush(o);
                  Zr(h) || t.transmuxer.async
                    ? (Zr(h) || (h = Promise.resolve(h)),
                      h
                        .then(function (e) {
                          aa(t, e, o);
                        })
                        .catch(function (t) {
                          i(k.ERROR, {
                            type: x.MEDIA_ERROR,
                            details: w.FRAG_PARSING_ERROR,
                            chunkMeta: a.chunkMeta,
                            fatal: !1,
                            error: t,
                            err: t,
                            reason: "transmuxer-worker flush error",
                          });
                        }))
                    : aa(t, h, o);
              }
            });
        })(self);
      var sa = (function () {
          function e(e, i, r, a) {
            var s = this;
            (this.error = null),
              (this.hls = void 0),
              (this.id = void 0),
              (this.observer = void 0),
              (this.frag = null),
              (this.part = null),
              (this.useWorker = void 0),
              (this.workerContext = null),
              (this.onwmsg = void 0),
              (this.transmuxer = null),
              (this.onTransmuxComplete = void 0),
              (this.onFlush = void 0);
            var n = e.config;
            (this.hls = e),
              (this.id = i),
              (this.useWorker = !!n.enableWorker),
              (this.onTransmuxComplete = r),
              (this.onFlush = a);
            var o = function (t, e) {
              ((e = e || {}).frag = s.frag),
                (e.id = s.id),
                t === k.ERROR && (s.error = e.error),
                s.hls.trigger(t, e);
            };
            (this.observer = new ea()),
              this.observer.on(k.FRAG_DECRYPTED, o),
              this.observer.on(k.ERROR, o);
            var h,
              l,
              A,
              d,
              u = Lt(n.preferManagedMediaSource) || {
                isTypeSupported: function () {
                  return !1;
                },
              },
              c = {
                mpeg: u.isTypeSupported("audio/mpeg"),
                mp3: u.isTypeSupported('audio/mp4; codecs="mp3"'),
                ac3: !1,
              },
              g = navigator.vendor;
            if (
              !this.useWorker ||
              "undefined" == typeof Worker ||
              (n.workerPath, 0)
            )
              this.transmuxer = new Wr(this.observer, c, n, g, i);
            else
              try {
                n.workerPath
                  ? (R.log(
                      "loading Web Worker " + n.workerPath + ' for "' + i + '"'
                    ),
                    (this.workerContext =
                      ((A = n.workerPath),
                      (d = new self.URL(A, self.location.href).href),
                      { worker: new self.Worker(d), scriptURL: d })))
                  : (R.log('injecting Web Worker for "' + i + '"'),
                    (this.workerContext =
                      ((h = new self.Blob(
                        [
                          "var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(" +
                            t.toString() +
                            ")(true);",
                        ],
                        { type: "text/javascript" }
                      )),
                      (l = self.URL.createObjectURL(h)),
                      { worker: new self.Worker(l), objectURL: l }))),
                  (this.onwmsg = function (t) {
                    return s.onWorkerMessage(t);
                  });
                var f = this.workerContext.worker;
                f.addEventListener("message", this.onwmsg),
                  (f.onerror = function (t) {
                    var e = new Error(
                      t.message + "  (" + t.filename + ":" + t.lineno + ")"
                    );
                    (n.enableWorker = !1),
                      R.warn(
                        'Error in "' + i + '" Web Worker, fallback to inline'
                      ),
                      s.hls.trigger(k.ERROR, {
                        type: x.OTHER_ERROR,
                        details: w.INTERNAL_EXCEPTION,
                        fatal: !1,
                        event: "demuxerWorker",
                        error: e,
                      });
                  }),
                  f.postMessage({
                    cmd: "init",
                    typeSupported: c,
                    vendor: g,
                    id: i,
                    config: JSON.stringify(n),
                  });
              } catch (la) {
                R.warn(
                  'Error setting up "' + i + '" Web Worker, fallback to inline',
                  la
                ),
                  this.resetWorker(),
                  (this.error = null),
                  (this.transmuxer = new Wr(this.observer, c, n, g, i));
              }
          }
          var i = e.prototype;
          return (
            (i.resetWorker = function () {
              if (this.workerContext) {
                var t = this.workerContext,
                  e = t.worker,
                  i = t.objectURL;
                i && self.URL.revokeObjectURL(i),
                  e.removeEventListener("message", this.onwmsg),
                  (e.onerror = null),
                  e.terminate(),
                  (this.workerContext = null);
              }
            }),
            (i.destroy = function () {
              if (this.workerContext)
                this.resetWorker(), (this.onwmsg = void 0);
              else {
                var t = this.transmuxer;
                t && (t.destroy(), (this.transmuxer = null));
              }
              var e = this.observer;
              e && e.removeAllListeners(),
                (this.frag = null),
                (this.observer = null),
                (this.hls = null);
            }),
            (i.push = function (t, e, i, r, a, s, n, o, h, l) {
              var A,
                d,
                u = this;
              h.transmuxing.start = self.performance.now();
              var c = this.transmuxer,
                g = s ? s.start : a.start,
                f = a.decryptdata,
                p = this.frag,
                m = !(p && a.cc === p.cc),
                v = !(p && h.level === p.level),
                E = p ? h.sn - p.sn : -1,
                y = this.part ? h.part - this.part.index : -1,
                I =
                  0 === E &&
                  h.id > 1 &&
                  h.id === (null == p ? void 0 : p.stats.chunkCount),
                C = !v && (1 === E || (0 === E && (1 === y || (I && y <= 0)))),
                B = self.performance.now();
              (v || E || 0 === a.stats.parsing.start) &&
                (a.stats.parsing.start = B),
                !s || (!y && C) || (s.stats.parsing.start = B);
              var k = !(
                  p &&
                  (null == (A = a.initSegment) ? void 0 : A.url) ===
                    (null == (d = p.initSegment) ? void 0 : d.url)
                ),
                x = new $r(m, C, o, v, g, k);
              if (!C || m || k) {
                R.log(
                  "[transmuxer-interface, " +
                    a.type +
                    "]: Starting new transmux session for sn: " +
                    h.sn +
                    " p: " +
                    h.part +
                    " level: " +
                    h.level +
                    " id: " +
                    h.id +
                    "\n        discontinuity: " +
                    m +
                    "\n        trackSwitch: " +
                    v +
                    "\n        contiguous: " +
                    C +
                    "\n        accurateTimeOffset: " +
                    o +
                    "\n        timeOffset: " +
                    g +
                    "\n        initSegmentChange: " +
                    k
                );
                var w = new Xr(i, r, e, n, l);
                this.configureTransmuxer(w);
              }
              if (((this.frag = a), (this.part = s), this.workerContext))
                this.workerContext.worker.postMessage(
                  {
                    cmd: "demux",
                    data: t,
                    decryptdata: f,
                    chunkMeta: h,
                    state: x,
                  },
                  t instanceof ArrayBuffer ? [t] : []
                );
              else if (c) {
                var Q = c.push(t, f, h, x);
                Zr(Q)
                  ? ((c.async = !0),
                    Q.then(function (t) {
                      u.handleTransmuxComplete(t);
                    }).catch(function (t) {
                      u.transmuxerError(
                        t,
                        h,
                        "transmuxer-interface push error"
                      );
                    }))
                  : ((c.async = !1), this.handleTransmuxComplete(Q));
              }
            }),
            (i.flush = function (t) {
              var e = this;
              t.transmuxing.start = self.performance.now();
              var i = this.transmuxer;
              if (this.workerContext)
                this.workerContext.worker.postMessage({
                  cmd: "flush",
                  chunkMeta: t,
                });
              else if (i) {
                var r = i.flush(t);
                Zr(r) || i.async
                  ? (Zr(r) || (r = Promise.resolve(r)),
                    r
                      .then(function (i) {
                        e.handleFlushResult(i, t);
                      })
                      .catch(function (i) {
                        e.transmuxerError(
                          i,
                          t,
                          "transmuxer-interface flush error"
                        );
                      }))
                  : this.handleFlushResult(r, t);
              }
            }),
            (i.transmuxerError = function (t, e, i) {
              this.hls &&
                ((this.error = t),
                this.hls.trigger(k.ERROR, {
                  type: x.MEDIA_ERROR,
                  details: w.FRAG_PARSING_ERROR,
                  chunkMeta: e,
                  fatal: !1,
                  error: t,
                  err: t,
                  reason: i,
                }));
            }),
            (i.handleFlushResult = function (t, e) {
              var i = this;
              t.forEach(function (t) {
                i.handleTransmuxComplete(t);
              }),
                this.onFlush(e);
            }),
            (i.onWorkerMessage = function (t) {
              var e = t.data,
                i = this.hls;
              switch (e.event) {
                case "init":
                  var r,
                    a = null == (r = this.workerContext) ? void 0 : r.objectURL;
                  a && self.URL.revokeObjectURL(a);
                  break;
                case "transmuxComplete":
                  this.handleTransmuxComplete(e.data);
                  break;
                case "flush":
                  this.onFlush(e.data);
                  break;
                case "workerLog":
                  R[e.data.logType] && R[e.data.logType](e.data.message);
                  break;
                default:
                  (e.data = e.data || {}),
                    (e.data.frag = this.frag),
                    (e.data.id = this.id),
                    i.trigger(e.event, e.data);
              }
            }),
            (i.configureTransmuxer = function (t) {
              var e = this.transmuxer;
              this.workerContext
                ? this.workerContext.worker.postMessage({
                    cmd: "configure",
                    config: t,
                  })
                : e && e.configure(t);
            }),
            (i.handleTransmuxComplete = function (t) {
              (t.chunkMeta.transmuxing.end = self.performance.now()),
                this.onTransmuxComplete(t);
            }),
            e
          );
        })(),
        na = (function () {
          function t(t, e, i, r) {
            (this.config = void 0),
              (this.media = null),
              (this.fragmentTracker = void 0),
              (this.hls = void 0),
              (this.nudgeRetry = 0),
              (this.stallReported = !1),
              (this.stalled = null),
              (this.moved = !1),
              (this.seeking = !1),
              (this.config = t),
              (this.media = e),
              (this.fragmentTracker = i),
              (this.hls = r);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.media = null), (this.hls = this.fragmentTracker = null);
            }),
            (e.poll = function (t, e) {
              var i = this.config,
                r = this.media,
                a = this.stalled;
              if (null !== r) {
                var s = r.currentTime,
                  n = r.seeking,
                  o = this.seeking && !n,
                  h = !this.seeking && n;
                if (((this.seeking = n), s === t))
                  if (h || o) this.stalled = null;
                  else if (
                    (r.paused && !n) ||
                    r.ended ||
                    0 === r.playbackRate ||
                    !qe.getBuffered(r).length
                  )
                    this.nudgeRetry = 0;
                  else {
                    var l = qe.bufferInfo(r, s, 0),
                      A = l.nextStart || 0;
                    if (n) {
                      var d = l.len > 2,
                        u =
                          !A ||
                          (e && e.start <= s) ||
                          (A - s > 2 &&
                            !this.fragmentTracker.getPartialFragment(s));
                      if (d || u) return;
                      this.moved = !1;
                    }
                    if (!this.moved && null !== this.stalled) {
                      var c;
                      if (!(l.len > 0 || A)) return;
                      var g = Math.max(A, l.start || 0) - s,
                        f = this.hls.levels
                          ? this.hls.levels[this.hls.currentLevel]
                          : null,
                        p = (
                          null == f || null == (c = f.details) ? void 0 : c.live
                        )
                          ? 2 * f.details.targetduration
                          : 2,
                        m = this.fragmentTracker.getPartialFragment(s);
                      if (g > 0 && (g <= p || m))
                        return void (r.paused || this._trySkipBufferHole(m));
                    }
                    var v = self.performance.now();
                    if (null !== a) {
                      var E = v - a;
                      if (
                        n ||
                        !(E >= 250) ||
                        (this._reportStall(l), this.media)
                      ) {
                        var y = qe.bufferInfo(r, s, i.maxBufferHole);
                        this._tryFixBufferStall(y, E);
                      }
                    } else this.stalled = v;
                  }
                else if (
                  ((this.moved = !0), n || (this.nudgeRetry = 0), null !== a)
                ) {
                  if (this.stallReported) {
                    var I = self.performance.now() - a;
                    R.warn(
                      "playback not stuck anymore @" +
                        s +
                        ", after " +
                        Math.round(I) +
                        "ms"
                    ),
                      (this.stallReported = !1);
                  }
                  this.stalled = null;
                }
              }
            }),
            (e._tryFixBufferStall = function (t, e) {
              var i = this.config,
                r = this.fragmentTracker,
                a = this.media;
              if (null !== a) {
                var s = a.currentTime,
                  n = r.getPartialFragment(s);
                if (n && (this._trySkipBufferHole(n) || !this.media)) return;
                (t.len > i.maxBufferHole ||
                  (t.nextStart && t.nextStart - s < i.maxBufferHole)) &&
                  e > 1e3 * i.highBufferWatchdogPeriod &&
                  (R.warn("Trying to nudge playhead over buffer-hole"),
                  (this.stalled = null),
                  this._tryNudgeBuffer());
              }
            }),
            (e._reportStall = function (t) {
              var e = this.hls,
                i = this.media;
              if (!this.stallReported && i) {
                this.stallReported = !0;
                var r = new Error(
                  "Playback stalling at @" +
                    i.currentTime +
                    " due to low buffer (" +
                    JSON.stringify(t) +
                    ")"
                );
                R.warn(r.message),
                  e.trigger(k.ERROR, {
                    type: x.MEDIA_ERROR,
                    details: w.BUFFER_STALLED_ERROR,
                    fatal: !1,
                    error: r,
                    buffer: t.len,
                  });
              }
            }),
            (e._trySkipBufferHole = function (t) {
              var e = this.config,
                i = this.hls,
                r = this.media;
              if (null === r) return 0;
              var a = r.currentTime,
                s = qe.bufferInfo(r, a, 0),
                n = a < s.start ? s.start : s.nextStart;
              if (n) {
                var o = s.len <= e.maxBufferHole,
                  h = s.len > 0 && s.len < 1 && r.readyState < 3,
                  l = n - a;
                if (l > 0 && (o || h)) {
                  if (l > e.maxBufferHole) {
                    var A = this.fragmentTracker,
                      d = !1;
                    if (0 === a) {
                      var u = A.getAppendedFrag(0, ne);
                      u && n < u.end && (d = !0);
                    }
                    if (!d) {
                      var c = t || A.getAppendedFrag(a, ne);
                      if (c) {
                        for (var g = !1, f = c.end; f < n; ) {
                          var p = A.getPartialFragment(f);
                          if (!p) {
                            g = !0;
                            break;
                          }
                          f += p.duration;
                        }
                        if (g) return 0;
                      }
                    }
                  }
                  var m = Math.max(n + 0.05, a + 0.1);
                  if (
                    (R.warn(
                      "skipping hole, adjusting currentTime from " +
                        a +
                        " to " +
                        m
                    ),
                    (this.moved = !0),
                    (this.stalled = null),
                    (r.currentTime = m),
                    t && !t.gap)
                  ) {
                    var v = new Error(
                      "fragment loaded with buffer holes, seeking from " +
                        a +
                        " to " +
                        m
                    );
                    i.trigger(k.ERROR, {
                      type: x.MEDIA_ERROR,
                      details: w.BUFFER_SEEK_OVER_HOLE,
                      fatal: !1,
                      error: v,
                      reason: v.message,
                      frag: t,
                    });
                  }
                  return m;
                }
              }
              return 0;
            }),
            (e._tryNudgeBuffer = function () {
              var t = this.config,
                e = this.hls,
                i = this.media,
                r = this.nudgeRetry;
              if (null !== i) {
                var a = i.currentTime;
                if ((this.nudgeRetry++, r < t.nudgeMaxRetry)) {
                  var s = a + (r + 1) * t.nudgeOffset,
                    n = new Error(
                      "Nudging 'currentTime' from " + a + " to " + s
                    );
                  R.warn(n.message),
                    (i.currentTime = s),
                    e.trigger(k.ERROR, {
                      type: x.MEDIA_ERROR,
                      details: w.BUFFER_NUDGE_ON_STALL,
                      error: n,
                      fatal: !1,
                    });
                } else {
                  var o = new Error(
                    "Playhead still not moving while enough data buffered @" +
                      a +
                      " after " +
                      t.nudgeMaxRetry +
                      " nudges"
                  );
                  R.error(o.message),
                    e.trigger(k.ERROR, {
                      type: x.MEDIA_ERROR,
                      details: w.BUFFER_STALLED_ERROR,
                      error: o,
                      fatal: !0,
                    });
                }
              }
            }),
            t
          );
        })(),
        oa = (function (t) {
          function e(e, i, r) {
            var a;
            return (
              ((a =
                t.call(this, e, i, r, "[stream-controller]", ne) ||
                this).audioCodecSwap = !1),
              (a.gapController = null),
              (a.level = -1),
              (a._forceStartLoad = !1),
              (a.altAudio = !1),
              (a.audioOnly = !1),
              (a.fragPlaying = null),
              (a.onvplaying = null),
              (a.onvseeked = null),
              (a.fragLastKbps = 0),
              (a.couldBacktrack = !1),
              (a.backtrackFragment = null),
              (a.audioCodecSwitch = !1),
              (a.videoBuffer = null),
              a._registerListeners(),
              a
            );
          }
          h(e, t);
          var i = e.prototype;
          return (
            (i._registerListeners = function () {
              var t = this.hls;
              t.on(k.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(k.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(k.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(
                  k.FRAG_LOAD_EMERGENCY_ABORTED,
                  this.onFragLoadEmergencyAborted,
                  this
                ),
                t.on(k.ERROR, this.onError, this),
                t.on(k.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(k.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.on(k.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(k.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(k.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (i._unregisterListeners = function () {
              var t = this.hls;
              t.off(k.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(k.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(k.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(k.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(k.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(
                  k.FRAG_LOAD_EMERGENCY_ABORTED,
                  this.onFragLoadEmergencyAborted,
                  this
                ),
                t.off(k.ERROR, this.onError, this),
                t.off(
                  k.AUDIO_TRACK_SWITCHING,
                  this.onAudioTrackSwitching,
                  this
                ),
                t.off(k.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.off(k.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(k.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(k.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(k.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (i.onHandlerDestroying = function () {
              this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this);
            }),
            (i.startLoad = function (t) {
              if (this.levels) {
                var e = this.lastCurrentTime,
                  i = this.hls;
                if (
                  (this.stopLoad(),
                  this.setInterval(100),
                  (this.level = -1),
                  !this.startFragRequested)
                ) {
                  var r = i.startLevel;
                  -1 === r &&
                    (i.config.testBandwidth && this.levels.length > 1
                      ? ((r = 0), (this.bitrateTest = !0))
                      : (r = i.firstAutoLevel)),
                    (this.level = i.nextLoadLevel = r),
                    (this.loadedmetadata = !1);
                }
                e > 0 &&
                  -1 === t &&
                  (this.log(
                    "Override startPosition with lastCurrentTime @" +
                      e.toFixed(3)
                  ),
                  (t = e)),
                  (this.state = Ui),
                  (this.nextLoadPosition =
                    this.startPosition =
                    this.lastCurrentTime =
                      t),
                  this.tick();
              } else (this._forceStartLoad = !0), (this.state = Ni);
            }),
            (i.stopLoad = function () {
              (this._forceStartLoad = !1), t.prototype.stopLoad.call(this);
            }),
            (i.doTick = function () {
              switch (this.state) {
                case zi:
                  var t = this.levels,
                    e = this.level,
                    i = null == t ? void 0 : t[e],
                    r = null == i ? void 0 : i.details;
                  if (r && (!r.live || this.levelLastLoaded === i)) {
                    if (this.waitForCdnTuneIn(r)) break;
                    this.state = Ui;
                    break;
                  }
                  if (this.hls.nextLoadLevel !== this.level) {
                    this.state = Ui;
                    break;
                  }
                  break;
                case ji:
                  var a,
                    s = self.performance.now(),
                    n = this.retryDate;
                  if (!n || s >= n || (null != (a = this.media) && a.seeking)) {
                    var o = this.levels,
                      h = this.level,
                      l = null == o ? void 0 : o[h];
                    this.resetStartWhenNotLoaded(l || null), (this.state = Ui);
                  }
              }
              this.state === Ui && this.doTickIdle(), this.onTickEnd();
            }),
            (i.onTickEnd = function () {
              t.prototype.onTickEnd.call(this),
                this.checkBuffer(),
                this.checkFragmentChanged();
            }),
            (i.doTickIdle = function () {
              var t = this.hls,
                e = this.levelLastLoaded,
                i = this.levels,
                r = this.media,
                a = t.config,
                s = t.nextLoadLevel;
              if (
                null !== e &&
                (r || (!this.startFragRequested && a.startFragPrefetch)) &&
                (!this.altAudio || !this.audioOnly) &&
                null != i &&
                i[s]
              ) {
                var n = i[s],
                  o = this.getMainFwdBufferInfo();
                if (null !== o) {
                  var h = this.getLevelDetails();
                  if (h && this._streamEnded(o, h)) {
                    var l = {};
                    return (
                      this.altAudio && (l.type = "video"),
                      this.hls.trigger(k.BUFFER_EOS, l),
                      void (this.state = Vi)
                    );
                  }
                  t.loadLevel !== s &&
                    -1 === t.manualLevel &&
                    this.log(
                      "Adapting to level " + s + " from level " + this.level
                    ),
                    (this.level = t.nextLoadLevel = s);
                  var A = n.details;
                  if (
                    !A ||
                    this.state === zi ||
                    (A.live && this.levelLastLoaded !== n)
                  )
                    return (this.level = s), void (this.state = zi);
                  var d = o.len,
                    u = this.getMaxBufferLength(n.maxBitrate);
                  if (!(d >= u)) {
                    this.backtrackFragment &&
                      this.backtrackFragment.start > o.end &&
                      (this.backtrackFragment = null);
                    var c = this.backtrackFragment
                        ? this.backtrackFragment.start
                        : o.end,
                      g = this.getNextFragment(c, A);
                    if (
                      this.couldBacktrack &&
                      !this.fragPrevious &&
                      g &&
                      "initSegment" !== g.sn &&
                      this.fragmentTracker.getState(g) !== Ei
                    ) {
                      var f,
                        p =
                          (null != (f = this.backtrackFragment) ? f : g).sn -
                          A.startSN,
                        m = A.fragments[p - 1];
                      m &&
                        g.cc === m.cc &&
                        ((g = m), this.fragmentTracker.removeFragment(m));
                    } else
                      this.backtrackFragment &&
                        o.len &&
                        (this.backtrackFragment = null);
                    if (g && this.isLoopLoading(g, c)) {
                      if (!g.gap) {
                        var v = this.audioOnly && !this.altAudio ? N : U,
                          E =
                            (v === U ? this.videoBuffer : this.mediaBuffer) ||
                            this.media;
                        E && this.afterBufferFlushed(E, v, ne);
                      }
                      g = this.getNextFragmentLoopLoading(g, A, o, ne, u);
                    }
                    g &&
                      (!g.initSegment ||
                        g.initSegment.data ||
                        this.bitrateTest ||
                        (g = g.initSegment),
                      this.loadFragment(g, n, c));
                  }
                }
              }
            }),
            (i.loadFragment = function (e, i, r) {
              var a = this.fragmentTracker.getState(e);
              (this.fragCurrent = e),
                a === pi || a === vi
                  ? "initSegment" === e.sn
                    ? this._loadInitSegment(e, i)
                    : this.bitrateTest
                    ? (this.log(
                        "Fragment " +
                          e.sn +
                          " of level " +
                          e.level +
                          " is being downloaded to test bitrate and will not be buffered"
                      ),
                      this._loadBitrateTestFrag(e, i))
                    : ((this.startFragRequested = !0),
                      t.prototype.loadFragment.call(this, e, i, r))
                  : this.clearTrackerIfNeeded(e);
            }),
            (i.getBufferedFrag = function (t) {
              return this.fragmentTracker.getBufferedFrag(t, ne);
            }),
            (i.followingBufferedFrag = function (t) {
              return t ? this.getBufferedFrag(t.end + 0.5) : null;
            }),
            (i.immediateLevelSwitch = function () {
              this.abortCurrentFrag(),
                this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
            }),
            (i.nextLevelSwitch = function () {
              var t = this.levels,
                e = this.media;
              if (null != e && e.readyState) {
                var i,
                  r = this.getAppendedFrag(e.currentTime);
                r && r.start > 1 && this.flushMainBuffer(0, r.start - 1);
                var a = this.getLevelDetails();
                if (null != a && a.live) {
                  var s = this.getMainFwdBufferInfo();
                  if (!s || s.len < 2 * a.targetduration) return;
                }
                if (!e.paused && t) {
                  var n = t[this.hls.nextLoadLevel],
                    o = this.fragLastKbps;
                  i =
                    o && this.fragCurrent
                      ? (this.fragCurrent.duration * n.maxBitrate) / (1e3 * o) +
                        1
                      : 0;
                } else i = 0;
                var h = this.getBufferedFrag(e.currentTime + i);
                if (h) {
                  var l = this.followingBufferedFrag(h);
                  if (l) {
                    this.abortCurrentFrag();
                    var A = l.maxStartPTS ? l.maxStartPTS : l.start,
                      d = l.duration,
                      u = Math.max(
                        h.end,
                        A +
                          Math.min(
                            Math.max(
                              d - this.config.maxFragLookUpTolerance,
                              d * (this.couldBacktrack ? 0.5 : 0.125)
                            ),
                            d * (this.couldBacktrack ? 0.75 : 0.25)
                          )
                      );
                    this.flushMainBuffer(u, Number.POSITIVE_INFINITY);
                  }
                }
              }
            }),
            (i.abortCurrentFrag = function () {
              var t = this.fragCurrent;
              switch (
                ((this.fragCurrent = null),
                (this.backtrackFragment = null),
                t &&
                  (t.abortRequests(), this.fragmentTracker.removeFragment(t)),
                this.state)
              ) {
                case Gi:
                case Oi:
                case ji:
                case Yi:
                case Hi:
                  this.state = Ui;
              }
              this.nextLoadPosition = this.getLoadPosition();
            }),
            (i.flushMainBuffer = function (e, i) {
              t.prototype.flushMainBuffer.call(
                this,
                e,
                i,
                this.altAudio ? "video" : null
              );
            }),
            (i.onMediaAttached = function (e, i) {
              t.prototype.onMediaAttached.call(this, e, i);
              var r = i.media;
              (this.onvplaying = this.onMediaPlaying.bind(this)),
                (this.onvseeked = this.onMediaSeeked.bind(this)),
                r.addEventListener("playing", this.onvplaying),
                r.addEventListener("seeked", this.onvseeked),
                (this.gapController = new na(
                  this.config,
                  r,
                  this.fragmentTracker,
                  this.hls
                ));
            }),
            (i.onMediaDetaching = function () {
              var e = this.media;
              e &&
                this.onvplaying &&
                this.onvseeked &&
                (e.removeEventListener("playing", this.onvplaying),
                e.removeEventListener("seeked", this.onvseeked),
                (this.onvplaying = this.onvseeked = null),
                (this.videoBuffer = null)),
                (this.fragPlaying = null),
                this.gapController &&
                  (this.gapController.destroy(), (this.gapController = null)),
                t.prototype.onMediaDetaching.call(this);
            }),
            (i.onMediaPlaying = function () {
              this.tick();
            }),
            (i.onMediaSeeked = function () {
              var t = this.media,
                e = t ? t.currentTime : null;
              I(e) && this.log("Media seeked to " + e.toFixed(3));
              var i = this.getMainFwdBufferInfo();
              null !== i && 0 !== i.len
                ? this.tick()
                : this.warn(
                    'Main forward buffer length on "seeked" event ' +
                      (i ? i.len : "empty") +
                      ")"
                  );
            }),
            (i.onManifestLoading = function () {
              this.log("Trigger BUFFER_RESET"),
                this.hls.trigger(k.BUFFER_RESET, void 0),
                this.fragmentTracker.removeAllFragments(),
                (this.couldBacktrack = !1),
                (this.startPosition =
                  this.lastCurrentTime =
                  this.fragLastKbps =
                    0),
                (this.levels =
                  this.fragPlaying =
                  this.backtrackFragment =
                  this.levelLastLoaded =
                    null),
                (this.altAudio = this.audioOnly = this.startFragRequested = !1);
            }),
            (i.onManifestParsed = function (t, e) {
              var i,
                r,
                a = !1,
                s = !1;
              e.levels.forEach(function (t) {
                var e = t.audioCodec;
                e &&
                  ((a = a || -1 !== e.indexOf("mp4a.40.2")),
                  (s = s || -1 !== e.indexOf("mp4a.40.5")));
              }),
                (this.audioCodecSwitch =
                  a &&
                  s &&
                  !(
                    "function" ==
                    typeof (null == (r = Wi()) || null == (i = r.prototype)
                      ? void 0
                      : i.changeType)
                  )),
                this.audioCodecSwitch &&
                  this.log(
                    "Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"
                  ),
                (this.levels = e.levels),
                (this.startFragRequested = !1);
            }),
            (i.onLevelLoading = function (t, e) {
              var i = this.levels;
              if (i && this.state === Ui) {
                var r = i[e.level];
                (!r.details ||
                  (r.details.live && this.levelLastLoaded !== r) ||
                  this.waitForCdnTuneIn(r.details)) &&
                  (this.state = zi);
              }
            }),
            (i.onLevelLoaded = function (t, e) {
              var i,
                r = this.levels,
                a = e.level,
                s = e.details,
                n = s.totalduration;
              if (r) {
                this.log(
                  "Level " +
                    a +
                    " loaded [" +
                    s.startSN +
                    "," +
                    s.endSN +
                    "]" +
                    (s.lastPartSn
                      ? "[part-" + s.lastPartSn + "-" + s.lastPartIndex + "]"
                      : "") +
                    ", cc [" +
                    s.startCC +
                    ", " +
                    s.endCC +
                    "] duration:" +
                    n
                );
                var o = r[a],
                  h = this.fragCurrent;
                !h ||
                  (this.state !== Oi && this.state !== ji) ||
                  (h.level !== e.level && h.loader && this.abortCurrentFrag());
                var l = 0;
                if (s.live || (null != (i = o.details) && i.live)) {
                  var A;
                  if ((this.checkLiveUpdate(s), s.deltaUpdateFailed)) return;
                  l = this.alignPlaylists(
                    s,
                    o.details,
                    null == (A = this.levelLastLoaded) ? void 0 : A.details
                  );
                }
                if (
                  ((o.details = s),
                  (this.levelLastLoaded = o),
                  this.hls.trigger(k.LEVEL_UPDATED, { details: s, level: a }),
                  this.state === zi)
                ) {
                  if (this.waitForCdnTuneIn(s)) return;
                  this.state = Ui;
                }
                this.startFragRequested
                  ? s.live && this.synchronizeToLiveEdge(s)
                  : this.setStartPosition(s, l),
                  this.tick();
              } else this.warn("Levels were reset while loading level " + a);
            }),
            (i._handleFragmentLoadProgress = function (t) {
              var e,
                i = t.frag,
                r = t.part,
                a = t.payload,
                s = this.levels;
              if (s) {
                var n = s[i.level],
                  o = n.details;
                if (!o)
                  return (
                    this.warn(
                      "Dropping fragment " +
                        i.sn +
                        " of level " +
                        i.level +
                        " after level details were reset"
                    ),
                    void this.fragmentTracker.removeFragment(i)
                  );
                var h = n.videoCodec,
                  l = o.PTSKnown || !o.live,
                  A = null == (e = i.initSegment) ? void 0 : e.data,
                  d = this._getAudioCodec(n),
                  u = (this.transmuxer =
                    this.transmuxer ||
                    new sa(
                      this.hls,
                      ne,
                      this._handleTransmuxComplete.bind(this),
                      this._handleTransmuxerFlush.bind(this)
                    )),
                  c = r ? r.index : -1,
                  g = -1 !== c,
                  f = new Di(
                    i.level,
                    i.sn,
                    i.stats.chunkCount,
                    a.byteLength,
                    c,
                    g
                  ),
                  p = this.initPTS[i.cc];
                u.push(a, A, d, h, i, r, o.totalduration, l, f, p);
              } else
                this.warn(
                  "Levels were reset while fragment load was in progress. Fragment " +
                    i.sn +
                    " of level " +
                    i.level +
                    " will not be buffered"
                );
            }),
            (i.onAudioTrackSwitching = function (t, e) {
              var i = this.altAudio;
              if (!e.url) {
                if (this.mediaBuffer !== this.media) {
                  this.log(
                    "Switching on main audio, use media.buffered to schedule main fragment loading"
                  ),
                    (this.mediaBuffer = this.media);
                  var r = this.fragCurrent;
                  r &&
                    (this.log(
                      "Switching to main audio track, cancel main fragment load"
                    ),
                    r.abortRequests(),
                    this.fragmentTracker.removeFragment(r)),
                    this.resetTransmuxer(),
                    this.resetLoadingState();
                } else this.audioOnly && this.resetTransmuxer();
                var a = this.hls;
                i &&
                  (a.trigger(k.BUFFER_FLUSHING, {
                    startOffset: 0,
                    endOffset: Number.POSITIVE_INFINITY,
                    type: null,
                  }),
                  this.fragmentTracker.removeAllFragments()),
                  a.trigger(k.AUDIO_TRACK_SWITCHED, e);
              }
            }),
            (i.onAudioTrackSwitched = function (t, e) {
              var i = e.id,
                r = !!this.hls.audioTracks[i].url;
              if (r) {
                var a = this.videoBuffer;
                a &&
                  this.mediaBuffer !== a &&
                  (this.log(
                    "Switching on alternate audio, use video.buffered to schedule main fragment loading"
                  ),
                  (this.mediaBuffer = a));
              }
              (this.altAudio = r), this.tick();
            }),
            (i.onBufferCreated = function (t, e) {
              var i,
                r,
                a = e.tracks,
                s = !1;
              for (var n in a) {
                var o = a[n];
                if ("main" === o.id) {
                  if (((r = n), (i = o), "video" === n)) {
                    var h = a[n];
                    h && (this.videoBuffer = h.buffer);
                  }
                } else s = !0;
              }
              s && i
                ? (this.log(
                    "Alternate track found, use " +
                      r +
                      ".buffered to schedule main fragment loading"
                  ),
                  (this.mediaBuffer = i.buffer))
                : (this.mediaBuffer = this.media);
            }),
            (i.onFragBuffered = function (t, e) {
              var i = e.frag,
                r = e.part;
              if (!i || i.type === ne) {
                if (this.fragContextChanged(i))
                  return (
                    this.warn(
                      "Fragment " +
                        i.sn +
                        (r ? " p: " + r.index : "") +
                        " of level " +
                        i.level +
                        " finished buffering, but was aborted. state: " +
                        this.state
                    ),
                    void (this.state === Hi && (this.state = Ui))
                  );
                var a = r ? r.stats : i.stats;
                (this.fragLastKbps = Math.round(
                  (8 * a.total) / (a.buffering.end - a.loading.first)
                )),
                  "initSegment" !== i.sn && (this.fragPrevious = i),
                  this.fragBufferedComplete(i, r);
              }
            }),
            (i.onError = function (t, e) {
              var i;
              if (e.fatal) this.state = Ki;
              else
                switch (e.details) {
                  case w.FRAG_GAP:
                  case w.FRAG_PARSING_ERROR:
                  case w.FRAG_DECRYPT_ERROR:
                  case w.FRAG_LOAD_ERROR:
                  case w.FRAG_LOAD_TIMEOUT:
                  case w.KEY_LOAD_ERROR:
                  case w.KEY_LOAD_TIMEOUT:
                    this.onFragmentOrKeyLoadError(ne, e);
                    break;
                  case w.LEVEL_LOAD_ERROR:
                  case w.LEVEL_LOAD_TIMEOUT:
                  case w.LEVEL_PARSING_ERROR:
                    e.levelRetry ||
                      this.state !== zi ||
                      (null == (i = e.context) ? void 0 : i.type) !== re ||
                      (this.state = Ui);
                    break;
                  case w.BUFFER_APPEND_ERROR:
                  case w.BUFFER_FULL_ERROR:
                    if (!e.parent || "main" !== e.parent) return;
                    if (e.details === w.BUFFER_APPEND_ERROR)
                      return void this.resetLoadingState();
                    this.reduceLengthAndFlushBuffer(e) &&
                      this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                    break;
                  case w.INTERNAL_EXCEPTION:
                    this.recoverWorkerError(e);
                }
            }),
            (i.checkBuffer = function () {
              var t = this.media,
                e = this.gapController;
              if (t && e && t.readyState) {
                if (this.loadedmetadata || !qe.getBuffered(t).length) {
                  var i = this.state !== Ui ? this.fragCurrent : null;
                  e.poll(this.lastCurrentTime, i);
                }
                this.lastCurrentTime = t.currentTime;
              }
            }),
            (i.onFragLoadEmergencyAborted = function () {
              (this.state = Ui),
                this.loadedmetadata ||
                  ((this.startFragRequested = !1),
                  (this.nextLoadPosition = this.startPosition)),
                this.tickImmediate();
            }),
            (i.onBufferFlushed = function (t, e) {
              var i = e.type;
              if (i !== N || (this.audioOnly && !this.altAudio)) {
                var r =
                  (i === U ? this.videoBuffer : this.mediaBuffer) || this.media;
                this.afterBufferFlushed(r, i, ne), this.tick();
              }
            }),
            (i.onLevelsUpdated = function (t, e) {
              this.level > -1 &&
                this.fragCurrent &&
                (this.level = this.fragCurrent.level),
                (this.levels = e.levels);
            }),
            (i.swapAudioCodec = function () {
              this.audioCodecSwap = !this.audioCodecSwap;
            }),
            (i.seekToStartPos = function () {
              var t = this.media;
              if (t) {
                var e = t.currentTime,
                  i = this.startPosition;
                if (i >= 0 && e < i) {
                  if (t.seeking)
                    return void this.log(
                      "could not seek to " + i + ", already seeking at " + e
                    );
                  var r = qe.getBuffered(t),
                    a = (r.length ? r.start(0) : 0) - i;
                  a > 0 &&
                    (a < this.config.maxBufferHole ||
                      a < this.config.maxFragLookUpTolerance) &&
                    (this.log(
                      "adjusting start position by " +
                        a +
                        " to match buffer start"
                    ),
                    (i += a),
                    (this.startPosition = i)),
                    this.log(
                      "seek to target start position " +
                        i +
                        " from current time " +
                        e
                    ),
                    (t.currentTime = i);
                }
              }
            }),
            (i._getAudioCodec = function (t) {
              var e = this.config.defaultAudioCodec || t.audioCodec;
              return (
                this.audioCodecSwap &&
                  e &&
                  (this.log("Swapping audio codec"),
                  (e =
                    -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")),
                e
              );
            }),
            (i._loadBitrateTestFrag = function (t, e) {
              var i = this;
              (t.bitrateTest = !0),
                this._doFragLoad(t, e).then(function (r) {
                  var a = i.hls;
                  if (r && !i.fragContextChanged(t)) {
                    (e.fragmentError = 0),
                      (i.state = Ui),
                      (i.startFragRequested = !1),
                      (i.bitrateTest = !1);
                    var s = t.stats;
                    (s.parsing.start =
                      s.parsing.end =
                      s.buffering.start =
                      s.buffering.end =
                        self.performance.now()),
                      a.trigger(k.FRAG_LOADED, r),
                      (t.bitrateTest = !1);
                  }
                });
            }),
            (i._handleTransmuxComplete = function (t) {
              var e,
                i = "main",
                r = this.hls,
                a = t.remuxResult,
                s = t.chunkMeta,
                n = this.getCurrentContext(s);
              if (n) {
                var o = n.frag,
                  h = n.part,
                  l = n.level,
                  A = a.video,
                  d = a.text,
                  u = a.id3,
                  c = a.initSegment,
                  g = l.details,
                  f = this.altAudio ? void 0 : a.audio;
                if (this.fragContextChanged(o))
                  this.fragmentTracker.removeFragment(o);
                else {
                  if (((this.state = Yi), c)) {
                    if (null != c && c.tracks) {
                      var p = o.initSegment || o;
                      this._bufferInitSegment(l, c.tracks, p, s),
                        r.trigger(k.FRAG_PARSING_INIT_SEGMENT, {
                          frag: p,
                          id: i,
                          tracks: c.tracks,
                        });
                    }
                    var m = c.initPTS,
                      v = c.timescale;
                    I(m) &&
                      ((this.initPTS[o.cc] = { baseTime: m, timescale: v }),
                      r.trigger(k.INIT_PTS_FOUND, {
                        frag: o,
                        id: i,
                        initPTS: m,
                        timescale: v,
                      }));
                  }
                  if (A && g && "initSegment" !== o.sn) {
                    var E = g.fragments[o.sn - 1 - g.startSN],
                      y = o.sn === g.startSN,
                      C = !E || o.cc > E.cc;
                    if (!1 !== a.independent) {
                      var B = A.startPTS,
                        x = A.endPTS,
                        w = A.startDTS,
                        Q = A.endDTS;
                      if (h)
                        h.elementaryStreams[A.type] = {
                          startPTS: B,
                          endPTS: x,
                          startDTS: w,
                          endDTS: Q,
                        };
                      else if (
                        (A.firstKeyFrame &&
                          A.independent &&
                          1 === s.id &&
                          !C &&
                          (this.couldBacktrack = !0),
                        A.dropped && A.independent)
                      ) {
                        var S = this.getMainFwdBufferInfo(),
                          b =
                            (S ? S.end : this.getLoadPosition()) +
                            this.config.maxBufferHole,
                          D = A.firstKeyFramePTS ? A.firstKeyFramePTS : B;
                        if (!y && b < D - this.config.maxBufferHole && !C)
                          return void this.backtrack(o);
                        C && (o.gap = !0),
                          o.setElementaryStreamInfo(
                            A.type,
                            o.start,
                            x,
                            o.start,
                            Q,
                            !0
                          );
                      } else y && B > 2 && (o.gap = !0);
                      o.setElementaryStreamInfo(A.type, B, x, w, Q),
                        this.backtrackFragment && (this.backtrackFragment = o),
                        this.bufferFragmentData(A, o, h, s, y || C);
                    } else {
                      if (!y && !C) return void this.backtrack(o);
                      o.gap = !0;
                    }
                  }
                  if (f) {
                    var R = f.startPTS,
                      L = f.endPTS,
                      T = f.startDTS,
                      M = f.endDTS;
                    h &&
                      (h.elementaryStreams[N] = {
                        startPTS: R,
                        endPTS: L,
                        startDTS: T,
                        endDTS: M,
                      }),
                      o.setElementaryStreamInfo(N, R, L, T, M),
                      this.bufferFragmentData(f, o, h, s);
                  }
                  if (g && null != u && null != (e = u.samples) && e.length) {
                    var F = { id: i, frag: o, details: g, samples: u.samples };
                    r.trigger(k.FRAG_PARSING_METADATA, F);
                  }
                  if (g && d) {
                    var P = { id: i, frag: o, details: g, samples: d.samples };
                    r.trigger(k.FRAG_PARSING_USERDATA, P);
                  }
                }
              } else this.resetWhenMissingContext(s);
            }),
            (i._bufferInitSegment = function (t, e, i, r) {
              var a = this;
              if (this.state === Yi) {
                (this.audioOnly = !!e.audio && !e.video),
                  this.altAudio && !this.audioOnly && delete e.audio;
                var s = e.audio,
                  n = e.video,
                  o = e.audiovideo;
                if (s) {
                  var h = t.audioCodec,
                    l = navigator.userAgent.toLowerCase();
                  this.audioCodecSwitch &&
                    (h &&
                      (h =
                        -1 !== h.indexOf("mp4a.40.5")
                          ? "mp4a.40.2"
                          : "mp4a.40.5"),
                    1 !== s.metadata.channelCount &&
                      -1 === l.indexOf("firefox") &&
                      (h = "mp4a.40.5")),
                    h &&
                      -1 !== h.indexOf("mp4a.40.5") &&
                      -1 !== l.indexOf("android") &&
                      "audio/mpeg" !== s.container &&
                      ((h = "mp4a.40.2"),
                      this.log("Android: force audio codec to " + h)),
                    t.audioCodec &&
                      t.audioCodec !== h &&
                      this.log(
                        'Swapping manifest audio codec "' +
                          t.audioCodec +
                          '" for "' +
                          h +
                          '"'
                      ),
                    (s.levelCodec = h),
                    (s.id = "main"),
                    this.log(
                      "Init audio buffer, container:" +
                        s.container +
                        ", codecs[selected/level/parsed]=[" +
                        (h || "") +
                        "/" +
                        (t.audioCodec || "") +
                        "/" +
                        s.codec +
                        "]"
                    );
                }
                n &&
                  ((n.levelCodec = t.videoCodec),
                  (n.id = "main"),
                  this.log(
                    "Init video buffer, container:" +
                      n.container +
                      ", codecs[level/parsed]=[" +
                      (t.videoCodec || "") +
                      "/" +
                      n.codec +
                      "]"
                  )),
                  o &&
                    this.log(
                      "Init audiovideo buffer, container:" +
                        o.container +
                        ", codecs[level/parsed]=[" +
                        t.codecs +
                        "/" +
                        o.codec +
                        "]"
                    ),
                  this.hls.trigger(k.BUFFER_CODECS, e),
                  Object.keys(e).forEach(function (t) {
                    var s = e[t].initSegment;
                    null != s &&
                      s.byteLength &&
                      a.hls.trigger(k.BUFFER_APPENDING, {
                        type: t,
                        data: s,
                        frag: i,
                        part: null,
                        chunkMeta: r,
                        parent: i.type,
                      });
                  }),
                  this.tickImmediate();
              }
            }),
            (i.getMainFwdBufferInfo = function () {
              return this.getFwdBufferInfo(
                this.mediaBuffer ? this.mediaBuffer : this.media,
                ne
              );
            }),
            (i.backtrack = function (t) {
              (this.couldBacktrack = !0),
                (this.backtrackFragment = t),
                this.resetTransmuxer(),
                this.flushBufferGap(t),
                this.fragmentTracker.removeFragment(t),
                (this.fragPrevious = null),
                (this.nextLoadPosition = t.start),
                (this.state = Ui);
            }),
            (i.checkFragmentChanged = function () {
              var t = this.media,
                e = null;
              if (t && t.readyState > 1 && !1 === t.seeking) {
                var i = t.currentTime;
                if (
                  (qe.isBuffered(t, i)
                    ? (e = this.getAppendedFrag(i))
                    : qe.isBuffered(t, i + 0.1) &&
                      (e = this.getAppendedFrag(i + 0.1)),
                  e)
                ) {
                  this.backtrackFragment = null;
                  var r = this.fragPlaying,
                    a = e.level;
                  (r && e.sn === r.sn && r.level === a) ||
                    ((this.fragPlaying = e),
                    this.hls.trigger(k.FRAG_CHANGED, { frag: e }),
                    (r && r.level === a) ||
                      this.hls.trigger(k.LEVEL_SWITCHED, { level: a }));
                }
              }
            }),
            n(e, [
              {
                key: "nextLevel",
                get: function () {
                  var t = this.nextBufferedFrag;
                  return t ? t.level : -1;
                },
              },
              {
                key: "currentFrag",
                get: function () {
                  var t = this.media;
                  return t
                    ? this.fragPlaying || this.getAppendedFrag(t.currentTime)
                    : null;
                },
              },
              {
                key: "currentProgramDateTime",
                get: function () {
                  var t = this.media;
                  if (t) {
                    var e = t.currentTime,
                      i = this.currentFrag;
                    if (i && I(e) && I(i.programDateTime)) {
                      var r = i.programDateTime + 1e3 * (e - i.start);
                      return new Date(r);
                    }
                  }
                  return null;
                },
              },
              {
                key: "currentLevel",
                get: function () {
                  var t = this.currentFrag;
                  return t ? t.level : -1;
                },
              },
              {
                key: "nextBufferedFrag",
                get: function () {
                  var t = this.currentFrag;
                  return t ? this.followingBufferedFrag(t) : null;
                },
              },
              {
                key: "forceStartLoad",
                get: function () {
                  return this._forceStartLoad;
                },
              },
            ]),
            e
          );
        })(qi),
        ha = (function () {
          function t(e) {
            void 0 === e && (e = {}),
              (this.config = void 0),
              (this.userConfig = void 0),
              (this.coreComponents = void 0),
              (this.networkControllers = void 0),
              (this.started = !1),
              (this._emitter = new ea()),
              (this._autoLevelCapping = -1),
              (this._maxHdcpLevel = null),
              (this.abrController = void 0),
              (this.bufferController = void 0),
              (this.capLevelController = void 0),
              (this.latencyController = void 0),
              (this.levelController = void 0),
              (this.streamController = void 0),
              (this.audioTrackController = void 0),
              (this.subtitleTrackController = void 0),
              (this.emeController = void 0),
              (this.cmcdController = void 0),
              (this._media = null),
              (this.url = null),
              (this.triggeringException = void 0),
              D(e.debug || !1, "Hls instance");
            var i = (this.config = (function (t, e) {
              if (
                (e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) &&
                (e.liveSyncDuration || e.liveMaxLatencyDuration)
              )
                throw new Error(
                  "Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration"
                );
              if (
                void 0 !== e.liveMaxLatencyDurationCount &&
                (void 0 === e.liveSyncDurationCount ||
                  e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount)
              )
                throw new Error(
                  'Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"'
                );
              if (
                void 0 !== e.liveMaxLatencyDuration &&
                (void 0 === e.liveSyncDuration ||
                  e.liveMaxLatencyDuration <= e.liveSyncDuration)
              )
                throw new Error(
                  'Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"'
                );
              var i = ci(t),
                a = ["TimeOut", "MaxRetry", "RetryDelay", "MaxRetryTimeout"];
              return (
                ["manifest", "level", "frag"].forEach(function (t) {
                  var r = ("level" === t ? "playlist" : t) + "LoadPolicy",
                    s = void 0 === e[r],
                    n = [];
                  a.forEach(function (a) {
                    var o = t + "Loading" + a,
                      h = e[o];
                    if (void 0 !== h && s) {
                      n.push(o);
                      var l = i[r].default;
                      switch (((e[r] = { default: l }), a)) {
                        case "TimeOut":
                          (l.maxLoadTimeMs = h), (l.maxTimeToFirstByteMs = h);
                          break;
                        case "MaxRetry":
                          (l.errorRetry.maxNumRetry = h),
                            (l.timeoutRetry.maxNumRetry = h);
                          break;
                        case "RetryDelay":
                          (l.errorRetry.retryDelayMs = h),
                            (l.timeoutRetry.retryDelayMs = h);
                          break;
                        case "MaxRetryTimeout":
                          (l.errorRetry.maxRetryDelayMs = h),
                            (l.timeoutRetry.maxRetryDelayMs = h);
                      }
                    }
                  }),
                    n.length &&
                      R.warn(
                        'hls.js config: "' +
                          n.join('", "') +
                          '" setting(s) are deprecated, use "' +
                          r +
                          '": ' +
                          JSON.stringify(e[r])
                      );
                }),
                r(r({}, i), e)
              );
            })(t.DefaultConfig, e));
            (this.userConfig = e),
              i.progressive &&
                (function (t) {
                  var e = t.loader;
                  e !== hi && e !== si
                    ? (R.log(
                        "[config]: Custom loader detected, cannot enable progressive streaming"
                      ),
                      (t.progressive = !1))
                    : (function () {
                        if (
                          self.fetch &&
                          self.AbortController &&
                          self.ReadableStream &&
                          self.Request
                        )
                          try {
                            return new self.ReadableStream({}), !0;
                          } catch (t) {}
                        return !1;
                      })() &&
                      ((t.loader = hi),
                      (t.progressive = !0),
                      (t.enableSoftwareAES = !0),
                      R.log(
                        "[config]: Progressive streaming enabled, using FetchLoader"
                      ));
                })(i);
            var a = i.abrController,
              s = i.bufferController,
              n = i.capLevelController,
              o = i.errorController,
              h = i.fpsController,
              l = new o(this),
              A = (this.abrController = new a(this)),
              d = (this.bufferController = new s(this)),
              u = (this.capLevelController = new n(this)),
              c = new h(this),
              g = new de(this),
              f = new Ee(this),
              p = i.contentSteeringController,
              m = p ? new p(this) : null,
              v = (this.levelController = new gi(this, m)),
              E = new yi(this),
              y = new Si(this.config),
              I = (this.streamController = new oa(this, E, y));
            u.setStreamController(I), c.setStreamController(I);
            var C = [g, v, I];
            m && C.splice(1, 0, m), (this.networkControllers = C);
            var B = [A, d, u, c, f, E];
            this.audioTrackController = this.createController(
              i.audioTrackController,
              C
            );
            var x = i.audioStreamController;
            x && C.push(new x(this, E, y)),
              (this.subtitleTrackController = this.createController(
                i.subtitleTrackController,
                C
              ));
            var w = i.subtitleStreamController;
            w && C.push(new w(this, E, y)),
              this.createController(i.timelineController, B),
              (y.emeController = this.emeController =
                this.createController(i.emeController, B)),
              (this.cmcdController = this.createController(
                i.cmcdController,
                B
              )),
              (this.latencyController = this.createController(ye, B)),
              (this.coreComponents = B),
              C.push(l);
            var Q = l.onErrorOut;
            "function" == typeof Q && this.on(k.ERROR, Q, l);
          }
          (t.isMSESupported = function () {
            return Ji();
          }),
            (t.isSupported = function () {
              return (function () {
                if (!Ji()) return !1;
                var t = Lt();
                return (
                  "function" ==
                    typeof (null == t ? void 0 : t.isTypeSupported) &&
                  ([
                    "avc1.42E01E,mp4a.40.2",
                    "av01.0.01M.08",
                    "vp09.00.50.08",
                  ].some(function (e) {
                    return t.isTypeSupported(Pt(e, "video"));
                  }) ||
                    ["mp4a.40.2", "fLaC"].some(function (e) {
                      return t.isTypeSupported(Pt(e, "audio"));
                    }))
                );
              })();
            }),
            (t.getMediaSource = function () {
              return Lt();
            });
          var e = t.prototype;
          return (
            (e.createController = function (t, e) {
              if (t) {
                var i = new t(this);
                return e && e.push(i), i;
              }
              return null;
            }),
            (e.on = function (t, e, i) {
              void 0 === i && (i = this), this._emitter.on(t, e, i);
            }),
            (e.once = function (t, e, i) {
              void 0 === i && (i = this), this._emitter.once(t, e, i);
            }),
            (e.removeAllListeners = function (t) {
              this._emitter.removeAllListeners(t);
            }),
            (e.off = function (t, e, i, r) {
              void 0 === i && (i = this), this._emitter.off(t, e, i, r);
            }),
            (e.listeners = function (t) {
              return this._emitter.listeners(t);
            }),
            (e.emit = function (t, e, i) {
              return this._emitter.emit(t, e, i);
            }),
            (e.trigger = function (t, e) {
              if (this.config.debug) return this.emit(t, t, e);
              try {
                return this.emit(t, t, e);
              } catch (r) {
                if (
                  (R.error(
                    "An internal error happened while handling event " +
                      t +
                      '. Error message: "' +
                      r.message +
                      '". Here is a stacktrace:',
                    r
                  ),
                  !this.triggeringException)
                ) {
                  this.triggeringException = !0;
                  var i = t === k.ERROR;
                  this.trigger(k.ERROR, {
                    type: x.OTHER_ERROR,
                    details: w.INTERNAL_EXCEPTION,
                    fatal: i,
                    event: t,
                    error: r,
                  }),
                    (this.triggeringException = !1);
                }
              }
              return !1;
            }),
            (e.listenerCount = function (t) {
              return this._emitter.listenerCount(t);
            }),
            (e.destroy = function () {
              R.log("destroy"),
                this.trigger(k.DESTROYING, void 0),
                this.detachMedia(),
                this.removeAllListeners(),
                (this._autoLevelCapping = -1),
                (this.url = null),
                this.networkControllers.forEach(function (t) {
                  return t.destroy();
                }),
                (this.networkControllers.length = 0),
                this.coreComponents.forEach(function (t) {
                  return t.destroy();
                }),
                (this.coreComponents.length = 0);
              var t = this.config;
              (t.xhrSetup = t.fetchSetup = void 0), (this.userConfig = null);
            }),
            (e.attachMedia = function (t) {
              R.log("attachMedia"),
                (this._media = t),
                this.trigger(k.MEDIA_ATTACHING, { media: t });
            }),
            (e.detachMedia = function () {
              R.log("detachMedia"),
                this.trigger(k.MEDIA_DETACHING, void 0),
                (this._media = null);
            }),
            (e.loadSource = function (t) {
              this.stopLoad();
              var e = this.media,
                i = this.url,
                r = (this.url = y.buildAbsoluteURL(self.location.href, t, {
                  alwaysNormalize: !0,
                }));
              (this._autoLevelCapping = -1),
                (this._maxHdcpLevel = null),
                R.log("loadSource:" + r),
                e &&
                  i &&
                  (i !== r || this.bufferController.hasSourceTypes()) &&
                  (this.detachMedia(), this.attachMedia(e)),
                this.trigger(k.MANIFEST_LOADING, { url: t });
            }),
            (e.startLoad = function (t) {
              void 0 === t && (t = -1),
                R.log("startLoad(" + t + ")"),
                (this.started = !0),
                this.networkControllers.forEach(function (e) {
                  e.startLoad(t);
                });
            }),
            (e.stopLoad = function () {
              R.log("stopLoad"),
                (this.started = !1),
                this.networkControllers.forEach(function (t) {
                  t.stopLoad();
                });
            }),
            (e.resumeBuffering = function () {
              this.started &&
                this.networkControllers.forEach(function (t) {
                  "fragmentLoader" in t && t.startLoad(-1);
                });
            }),
            (e.pauseBuffering = function () {
              this.networkControllers.forEach(function (t) {
                "fragmentLoader" in t && t.stopLoad();
              });
            }),
            (e.swapAudioCodec = function () {
              R.log("swapAudioCodec"), this.streamController.swapAudioCodec();
            }),
            (e.recoverMediaError = function () {
              R.log("recoverMediaError");
              var t = this._media;
              this.detachMedia(), t && this.attachMedia(t);
            }),
            (e.removeLevel = function (t) {
              this.levelController.removeLevel(t);
            }),
            (e.setAudioOption = function (t) {
              var e;
              return null == (e = this.audioTrackController)
                ? void 0
                : e.setAudioOption(t);
            }),
            (e.setSubtitleOption = function (t) {
              var e;
              return (
                null == (e = this.subtitleTrackController) ||
                  e.setSubtitleOption(t),
                null
              );
            }),
            n(
              t,
              [
                {
                  key: "levels",
                  get: function () {
                    return this.levelController.levels || [];
                  },
                },
                {
                  key: "currentLevel",
                  get: function () {
                    return this.streamController.currentLevel;
                  },
                  set: function (t) {
                    R.log("set currentLevel:" + t),
                      (this.levelController.manualLevel = t),
                      this.streamController.immediateLevelSwitch();
                  },
                },
                {
                  key: "nextLevel",
                  get: function () {
                    return this.streamController.nextLevel;
                  },
                  set: function (t) {
                    R.log("set nextLevel:" + t),
                      (this.levelController.manualLevel = t),
                      this.streamController.nextLevelSwitch();
                  },
                },
                {
                  key: "loadLevel",
                  get: function () {
                    return this.levelController.level;
                  },
                  set: function (t) {
                    R.log("set loadLevel:" + t),
                      (this.levelController.manualLevel = t);
                  },
                },
                {
                  key: "nextLoadLevel",
                  get: function () {
                    return this.levelController.nextLoadLevel;
                  },
                  set: function (t) {
                    this.levelController.nextLoadLevel = t;
                  },
                },
                {
                  key: "firstLevel",
                  get: function () {
                    return Math.max(
                      this.levelController.firstLevel,
                      this.minAutoLevel
                    );
                  },
                  set: function (t) {
                    R.log("set firstLevel:" + t),
                      (this.levelController.firstLevel = t);
                  },
                },
                {
                  key: "startLevel",
                  get: function () {
                    var t = this.levelController.startLevel;
                    return -1 === t && this.abrController.forcedAutoLevel > -1
                      ? this.abrController.forcedAutoLevel
                      : t;
                  },
                  set: function (t) {
                    R.log("set startLevel:" + t),
                      -1 !== t && (t = Math.max(t, this.minAutoLevel)),
                      (this.levelController.startLevel = t);
                  },
                },
                {
                  key: "capLevelToPlayerSize",
                  get: function () {
                    return this.config.capLevelToPlayerSize;
                  },
                  set: function (t) {
                    var e = !!t;
                    e !== this.config.capLevelToPlayerSize &&
                      (e
                        ? this.capLevelController.startCapping()
                        : (this.capLevelController.stopCapping(),
                          (this.autoLevelCapping = -1),
                          this.streamController.nextLevelSwitch()),
                      (this.config.capLevelToPlayerSize = e));
                  },
                },
                {
                  key: "autoLevelCapping",
                  get: function () {
                    return this._autoLevelCapping;
                  },
                  set: function (t) {
                    this._autoLevelCapping !== t &&
                      (R.log("set autoLevelCapping:" + t),
                      (this._autoLevelCapping = t),
                      this.levelController.checkMaxAutoUpdated());
                  },
                },
                {
                  key: "bandwidthEstimate",
                  get: function () {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimate() : NaN;
                  },
                  set: function (t) {
                    this.abrController.resetEstimator(t);
                  },
                },
                {
                  key: "ttfbEstimate",
                  get: function () {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimateTTFB() : NaN;
                  },
                },
                {
                  key: "maxHdcpLevel",
                  get: function () {
                    return this._maxHdcpLevel;
                  },
                  set: function (t) {
                    var e;
                    (e = t),
                      Ie.indexOf(e) > -1 &&
                        this._maxHdcpLevel !== t &&
                        ((this._maxHdcpLevel = t),
                        this.levelController.checkMaxAutoUpdated());
                  },
                },
                {
                  key: "autoLevelEnabled",
                  get: function () {
                    return -1 === this.levelController.manualLevel;
                  },
                },
                {
                  key: "manualLevel",
                  get: function () {
                    return this.levelController.manualLevel;
                  },
                },
                {
                  key: "minAutoLevel",
                  get: function () {
                    var t = this.levels,
                      e = this.config.minAutoBitrate;
                    if (!t) return 0;
                    for (var i = t.length, r = 0; r < i; r++)
                      if (t[r].maxBitrate >= e) return r;
                    return 0;
                  },
                },
                {
                  key: "maxAutoLevel",
                  get: function () {
                    var t,
                      e = this.levels,
                      i = this.autoLevelCapping,
                      r = this.maxHdcpLevel;
                    if (
                      ((t =
                        -1 === i && null != e && e.length ? e.length - 1 : i),
                      r)
                    )
                      for (var a = t; a--; ) {
                        var s = e[a].attrs["HDCP-LEVEL"];
                        if (s && s <= r) return a;
                      }
                    return t;
                  },
                },
                {
                  key: "firstAutoLevel",
                  get: function () {
                    return this.abrController.firstAutoLevel;
                  },
                },
                {
                  key: "nextAutoLevel",
                  get: function () {
                    return this.abrController.nextAutoLevel;
                  },
                  set: function (t) {
                    this.abrController.nextAutoLevel = t;
                  },
                },
                {
                  key: "playingDate",
                  get: function () {
                    return this.streamController.currentProgramDateTime;
                  },
                },
                {
                  key: "mainForwardBufferInfo",
                  get: function () {
                    return this.streamController.getMainFwdBufferInfo();
                  },
                },
                {
                  key: "allAudioTracks",
                  get: function () {
                    var t = this.audioTrackController;
                    return t ? t.allAudioTracks : [];
                  },
                },
                {
                  key: "audioTracks",
                  get: function () {
                    var t = this.audioTrackController;
                    return t ? t.audioTracks : [];
                  },
                },
                {
                  key: "audioTrack",
                  get: function () {
                    var t = this.audioTrackController;
                    return t ? t.audioTrack : -1;
                  },
                  set: function (t) {
                    var e = this.audioTrackController;
                    e && (e.audioTrack = t);
                  },
                },
                {
                  key: "allSubtitleTracks",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return t ? t.allSubtitleTracks : [];
                  },
                },
                {
                  key: "subtitleTracks",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTracks : [];
                  },
                },
                {
                  key: "subtitleTrack",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTrack : -1;
                  },
                  set: function (t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleTrack = t);
                  },
                },
                {
                  key: "media",
                  get: function () {
                    return this._media;
                  },
                },
                {
                  key: "subtitleDisplay",
                  get: function () {
                    var t = this.subtitleTrackController;
                    return !!t && t.subtitleDisplay;
                  },
                  set: function (t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleDisplay = t);
                  },
                },
                {
                  key: "lowLatencyMode",
                  get: function () {
                    return this.config.lowLatencyMode;
                  },
                  set: function (t) {
                    this.config.lowLatencyMode = t;
                  },
                },
                {
                  key: "liveSyncPosition",
                  get: function () {
                    return this.latencyController.liveSyncPosition;
                  },
                },
                {
                  key: "latency",
                  get: function () {
                    return this.latencyController.latency;
                  },
                },
                {
                  key: "maxLatency",
                  get: function () {
                    return this.latencyController.maxLatency;
                  },
                },
                {
                  key: "targetLatency",
                  get: function () {
                    return this.latencyController.targetLatency;
                  },
                },
                {
                  key: "drift",
                  get: function () {
                    return this.latencyController.drift;
                  },
                },
                {
                  key: "forceStartLoad",
                  get: function () {
                    return this.streamController.forceStartLoad;
                  },
                },
              ],
              [
                {
                  key: "version",
                  get: function () {
                    return "1.5.1";
                  },
                },
                {
                  key: "Events",
                  get: function () {
                    return k;
                  },
                },
                {
                  key: "ErrorTypes",
                  get: function () {
                    return x;
                  },
                },
                {
                  key: "ErrorDetails",
                  get: function () {
                    return w;
                  },
                },
                {
                  key: "DefaultConfig",
                  get: function () {
                    return t.defaultConfig ? t.defaultConfig : ui;
                  },
                  set: function (e) {
                    t.defaultConfig = e;
                  },
                },
              ]
            ),
            t
          );
        })();
      return (ha.defaultConfig = void 0), ha;
    }),
      (se.exports = i());
  })(!1);
const oe = A(ne.exports),
  he = "请切换线路",
  le = "https://ap.phvod.top";
var Ae,
  de =
    (((Ae = de || {}).SOURCEERROR = "资源出错，" + he),
    (Ae.SKIPTS = "检测到错误片段，已为你跳过"),
    (Ae.POSTTEXT = "片段缺失，已上报，如不能播放，" + he),
    (Ae.PAGEERR = "请刷新页面，切换播放源"),
    (Ae.JXERR = "解析失败，" + he),
    Ae),
  ue = ((t) => (
    (t.NODM = "还没有弹幕,赶紧来一发吧"),
    (t.DMTIP =
      "祝您观影愉快，请不要相信视频中任何广告，有任何问题请反馈留言！"),
    (t.DMURL = "📱手机追剧下载胖虎影视app"),
    (t.DMDURL = "胖虎影视"),
    t
  ))(ue || {});
const ce = (t, e) => {
    t.video.pause(), (t.video.src = e);
  },
  ge = (t, e, i, r) => {
    (t.option.type = i), t.switchQuality(e), r && t.storage.mediaSet("xl", r);
  },
  fe = (t, e) => {
    const i = t.indexOf(e);
    return i > -1 ? t.substring(0, i + e.length) : "";
  },
  pe = {
    "v.qq.com": (t) =>
      fe(t, ".html") ||
      ((t) => {
        const e = new URL(t).searchParams,
          i = e.get("cid"),
          r = e.get("vid");
        let a = "https://v.qq.com/x/cover/",
          s = ".html";
        return i && r ? a + (i + "/") + r + s : i ? a + (i + "/") + s : "";
      })(t),
    ".iqiyi.com": (t) => fe(t, ".html").replace("m.", "www."),
    ".youku.com": (t) =>
      fe(t, ".html")
        .replace("m.", "v.")
        .replace(/alipay_video|video/, "v_show"),
    ".mgtv.com": (t) =>
      fe(t, ".html").replace("m.", "www.").replace("//w.", "//www."),
    ".bilibili.com": (t) => t.replace("m.", "www."),
    ".sohu.com": (t) => fe(t, ".html") || fe(t, ".shtml"),
    ".pptv.com": (t) => fe(t, ".html").replace("m.", "v."),
    ".ixigua.com": (t) => t.replace("m.", "www.").replace("/video/", "/"),
  },
  me = () => {
    throw (
      (window.location.replace("https://www.cdnkan.top"), new Error("链接无效"))
    );
  },
ve = (t) => {
  if (!t) {
    throw new Error("链接不能为空");
  }
  const e = decodeURIComponent(t),
    i = Object.keys(pe).find((t) => e.includes(t));
  return i ? pe[i](e).replace("http:", "https:") : e;
  },
  Ee = (t, e) => {
    // const i = Math.floor(Date.now() / 1e3);
    // navigator.sendBeacon(
    //   `${le}/events/${t}`,
    //   encrypt(JSON.stringify({ ...e, time: i }))
    // );
  },
  ye = (t, e) => (t.notice.show = e),
  Ie = (() => {
    const t = window.location.search;
    let e = {
      url: ve(t.split("?url=")[1]),
      next: t.split("&next=")[1],
      from: "",
      mp4: "",
      surl: "",
      type: "",
    };
    return {
      get: function (t) {
        return e[t];
      },
      set: function (t) {
        e = { ...e, ...t };
      },
      getAll: function () {
        return { ...e };
      },
      clear: function () {
        e = { ...e, from: "", mp4: "", surl: "", type: "" };
      },
    };
  })(),
  Ce = (t, e, i) => {
    (i.currentTime = t), e.startLoad(t);
  },
  Be = (t, e, i, r, a) => {
    const { baseurl: s, start: n, duration: o, sn: h } = t;
    if (h < e) {
      const t = n + o + 0.1;
      if (i.has(h)) Ce(t, r, a);
      else if (i.size <= 35) {
        if ((i.add(h), Ce(t, r, a), ye(a, de.SKIPTS), 6 === i.size)) {
          const { from: t, url: e } = Ie.getAll();
          0 === t && (ye(a, de.POSTTEXT), Ee("he", { ourl: e, surl: s }));
        }
      } else ye(a, de.SOURCEERROR);
    } else ye(a, de.SOURCEERROR);
  },
  ke = new TextEncoder("utf-8"),
  xe = new TextDecoder("utf-8");
let we = new DataView(new ArrayBuffer(8));
var Qe = [];
const Se = (t) =>
    (async (t = {}, e) => {
      let i;
      if (e.startsWith("data:")) {
        const r = e.replace(/^data:.*?base64,/, "");
        let a;
        if ("function" == typeof Buffer && "function" == typeof Buffer.from)
          a = Buffer.from(r, "base64");
        else {
          if ("function" != typeof atob)
            throw new Error(
              "Failed to decode base64-encoded data URL, Buffer and atob are not supported"
            );
          {
            const t = atob(r);
            a = new Uint8Array(t.length);
            for (let e = 0; e < t.length; e++) a[e] = t.charCodeAt(e);
          }
        }
        i = await WebAssembly.instantiate(a, t);
      } else {
        const r = await fetch(e),
          a = r.headers.get("Content-Type") || "";
        if (
          "instantiateStreaming" in WebAssembly &&
          a.startsWith("application/wasm")
        )
          i = await WebAssembly.instantiateStreaming(r, t);
        else {
          const e = await r.arrayBuffer();
          i = await WebAssembly.instantiate(e, t);
        }
      }
      return i.instance;
    })(
      t,
      "data:application/wasm;base64,"
    ),
  be = async (t = "", e) =>
    (async (t, e) => {
      try {
        const i = await fetch(t, e);
        if (!i.ok) {
          const t = new Error();
          throw ((t.status = i.status), t);
        }
        return await i.json();
      } catch (i) {
        throw i;
      }
    })(t, {
      method: "POST",
      headers: { "Content-Type": "text/plain" },
      body: e,
    }),
  De = async (t, e, i) => {
    try {
      const r = `${i}`;
      if (!r) return void ye(t, de.PAGEERR);
      const {
        code: a,
        url: s,
        type: n,
        req: o,
        from: h,
      } = await be(`${le}/lx/post.php`, r);
      if (200 == a) {
        const i = s;
        if (!i) return void ye(t, de.PAGEERR);
        Ie.set({ from: h, surl: i, type: n }), ge(t, i, n, e);
      } else if (302 === a) {
        const i = await (async (t, e) => {
          try {
            const i = e,
              r = await be(t, JSON.stringify({ params: i })),
              { code: a, url: s } = r;
            if (200 == a) {
              const t = `${s}|${Math.floor(Date.now() / 1e3)}`;
              return await be(`${le}/lx/post1.php`, t);
            }
            return "";
          } catch (i) {
            throw i;
          }
        })(o, s);
        if (i) {
          const { code: r, url: a, type: s } = i;
          if (200 === r) {
            const i = decrypt(a);
            if (!i) return void ye(t, de.PAGEERR);
            if ((Ie.set({ from: h, surl: i, type: s }), "mp4" === s)) {
              Ie.set({ mp4: i });
              const r = await fetch(i, { method: "HEAD" });
              if (r.ok && r.redirected) {
                const i = r.url;
                Ie.set({ from: h, surl: i, type: s }), ge(t, i, s, e);
              }
            } else ge(t, i, s, e);
          } else ye(t, de.JXERR);
        } else ye(t, de.JXERR);
      }
    } catch (r) {
      if ((console.error(r, "fetch err"), r.status, r.status))
        400 === r.status || 500 === r.status
          ? ye(t, de.JXERR)
          : 408 === r.status && ye(t, "请检查本地时间是否和远程时间同步");
      else {
        const e = Ie.get("mp4");
        e && ge(t, e, "mp4");
      }
    }
  },
  Re = Ie.get("url"),
  Le = new (class {
    constructor() {
      (this._callbackTimeouts = new Map()), (this._nextCallbackTimeoutID = 1);
      const t = () => new DataView(this._inst.exports.memory.buffer),
        e = (t) => {
          we.setBigInt64(0, t, !0);
          const e = we.getFloat64(0, !0);
          if (0 === e) return;
          if (!isNaN(e)) return e;
          const i = 0xffffffffn & t;
          return this._values[i];
        },
        i = (i) => {
          let r = t().getBigUint64(i, !0);
          return e(r);
        },
        r = (t) => {
          const e = 0x7ff80000n;
          if ("number" == typeof t)
            return isNaN(t)
              ? e << 32n
              : 0 === t
              ? (e << 32n) | 1n
              : (we.setFloat64(0, t, !0), we.getBigInt64(0, !0));
          switch (t) {
            case void 0:
              return 0n;
            case null:
              return (e << 32n) | 2n;
            case !0:
              return (e << 32n) | 3n;
            case !1:
              return (e << 32n) | 4n;
          }
          let i = this._ids.get(t);
          void 0 === i &&
            ((i = this._idPool.pop()),
            void 0 === i && (i = BigInt(this._values.length)),
            (this._values[i] = t),
            (this._goRefCounts[i] = 0),
            this._ids.set(t, i)),
            this._goRefCounts[i]++;
          let r = 1n;
          switch (typeof t) {
            case "string":
              r = 2n;
              break;
            case "symbol":
              r = 3n;
              break;
            case "function":
              r = 4n;
          }
          return i | ((e | r) << 32n);
        },
        a = (e, i) => {
          let a = r(i);
          t().setBigUint64(e, a, !0);
        },
        s = (t, e, i) => new Uint8Array(this._inst.exports.memory.buffer, t, e),
        n = (t, e) =>
          xe.decode(new DataView(this._inst.exports.memory.buffer, t, e)),
        o = Date.now() - performance.now();
      this.importObject = {
        wasi_snapshot_preview1: {
          fd_write: function (e, i, r, a) {
            let s = 0;
            if (1 == e)
              for (let n = 0; n < r; n++) {
                let e = i + 8 * n,
                  r = t().getUint32(e + 0, !0),
                  a = t().getUint32(e + 4, !0);
                s += a;
                for (let i = 0; i < a; i++) {
                  let e = t().getUint8(r + i);
                  if (13 == e);
                  else if (10 == e) {
                    xe.decode(new Uint8Array(Qe));
                    Qe = [];
                  } else Qe.push(e);
                }
              }
            else console.error("invalid file descriptor:", e);
            return t().setUint32(a, s, !0), 0;
          },
          random_get: (t, e) => (crypto.getRandomValues(s(t, e)), 0),
        },
        gojs: {
          "runtime.ticks": () => o + performance.now(),
          "syscall/js.finalizeRef": (t) => {},
          "syscall/js.stringVal": (t, e) => {
            const i = n(t, e);
            return r(i);
          },
          "syscall/js.valueGet": (t, i, a) => {
            let s = n(i, a),
              o = e(t),
              h = Reflect.get(o, s);
            return r(h);
          },
          "syscall/js.valueSet": (t, i, r, a) => {
            const s = e(t),
              o = n(i, r),
              h = e(a);
            Reflect.set(s, o, h);
          },
          "syscall/js.valueDelete": (t, i, r) => {
            const a = e(t),
              s = n(i, r);
            Reflect.deleteProperty(a, s);
          },
          "syscall/js.valueIndex": (t, i) => r(Reflect.get(e(t), i)),
          "syscall/js.valueCall": (r, s, o, h, l, A, d) => {
            const u = e(s),
              c = n(o, h),
              g = ((t, e, r) => {
                const a = new Array(e);
                for (let s = 0; s < e; s++) a[s] = i(t + 8 * s);
                return a;
              })(l, A);
            try {
              const e = Reflect.get(u, c);
              a(r, Reflect.apply(e, u, g)), t().setUint8(r + 8, 1);
            } catch (f) {
              a(r, f), t().setUint8(r + 8, 0);
            }
          },
          "syscall/js.valueLength": (t) => e(t).length,
          "syscall/js.valuePrepareString": (i, r) => {
            const s = String(e(r)),
              n = ke.encode(s);
            a(i, n), t().setInt32(i + 8, n.length, !0);
          },
          "syscall/js.valueLoadString": (t, i, r, a) => {
            const n = e(t);
            s(i, r).set(n);
          },
        },
      };
    }
    async gto(t) {
      for (
        this._inst = t,
          this._values = [NaN, 0, null, !0, !1, [globalThis, window], this],
          this._goRefCounts = [],
          this._ids = new Map(),
          this._idPool = [],
          this.exited = !1;
        ;

      ) {
        const t = new Promise((t) => {
          this._resolveCallbackPromise = () => {
            if (this.exited)
              throw new Error("bad callback: program has already exited");
            setTimeout(t, 0);
          };
        });
        if ((this._inst.exports._start(), this.exited)) break;
        await t;
      }
    }
    _resume() {
      if (this.exited) throw new Error("program has already exited");
      this._inst.exports.resume(), this.exited && this._resolveExitPromise();
    }
    _makeFuncWrapper(t) {
      const e = this;
      return function () {
        const i = { id: t, this: this, args: arguments };
        return (e._pendingEvent = i), e._resume(), i.result;
      };
    }
  })(),
  Te = [
    { value: 1, html: "<span>线路</span>" },
    { value: 2, html: "<span>刷新</span>" },
  ],
  Me = {
    id: Re,
    container: "#app",
    url: "",
    fastForward: !0,
    volume: 0.5,
    theme: "#23ade5",
    muted: !1,
    autoplay: !1,
    pip: !0,
    autoMini: !0,
    setting: !0,
    loop: !1,
    flip: !0,
    playbackRate: !0,
    aspectRatio: !0,
    fullscreen: !0,
    hotkey: !0,
    miniProgressBar: !0,
    mutex: !0,
    backdrop: !0,
    playsInline: !0,
    autoPlayback: !0,
    lock: !0,
    autoOrientation: !0,
    moreVideoAttr: {
      "x5-video-player-type": "h5",
      "x5-video-player-fullscreen": !1,
      "x5-video-orientation": "portraint",
      preload: "metadata",
    },
    customType: {
      m3u8: async (t, e, i) => {
        try {
          if (oe.isSupported()) {
            const r = new oe(),
              a = new Set();
            let s, n;
            r.loadSource(e), r.attachMedia(t);
            const o = (t, e) => {
                const { firstLevel: i } = e;
                s = i;
              },
              h = (t, a) => {
                if (a.level === s) {
                  r.currentLevel = a.level;
                  const {
                    url: t,
                    fragments: s,
                    averagetargetduration: o,
                    endSN: h,
                  } = a.details;
                  n = h;
                  const l = o <= 1.2;
                  l && ((a.details.fragments = []), ye(i, de.SOURCEERROR));
                  const { from: A, url: d } = Ie.getAll();
                  0 !== A &&
                    t &&
                    s.length >= 40 &&
                    !l &&
                    Ee("m3", { ourl: d, curl: e, surl: t });
                }
              },
              l = (t, e) => {
                if (e.fatal)
                  switch (e.type) {
                    case oe.ErrorTypes.NETWORK_ERROR:
                      if (
                        (console.error("network_data", e),
                        "manifestLoadError" === e.details)
                      ) {
                        ye(i, de.SOURCEERROR);
                        const { from: t, url: r } = Ie.getAll();
                        0 === t && Ee("m3e", { ourl: r, surl: e.url });
                      } else
                        "fragLoadError" === e.details &&
                          e.frag &&
                          Be(e.frag, n, a, r, i);
                      break;
                    case oe.ErrorTypes.MEDIA_ERROR:
                      console.error("media_data", e),
                        "fragParsingError" === e.details &&
                          e.frag &&
                          Be(e.frag, n, a, r, i);
                      break;
                    default:
                      ye(i, "其他错误，请切换其他源"),
                        console.error("other_data", e);
                  }
              };
            r.on(oe.Events.MANIFEST_PARSED, o),
              r.on(oe.Events.LEVEL_LOADED, h),
              r.on(oe.Events.ERROR, l),
              (i.hls = r);
            const A = () => {
              a.clear(),
                r.off(oe.Events.MANIFEST_PARSED, o),
                r.off(oe.Events.LEVEL_LOADED, h),
                r.off(oe.Events.ERROR, l),
                r.destroy(),
                (i.hls = null);
            };
            i.once("url", A), i.once("destroy", A);
          } else
            t.canPlayType("application/vnd.apple.mpegurl")
              ? (t.src = e)
              : ye(i, "不支持的播放格式");
        } catch (r) {
          console.error(r, "hlsErr");
        }
      },
    },
    plugins: [
      ((Fe = {
        danmuku: async function () {
          return await (async (t) => {
            const e = await fetch(
                "https://dmku.brovod.top/phdm.php?url=" + t
              ),
              i = await e.json(),
              r = i.danmuku ?? [];
            if (23 === i.code) {
              const t = [
                {
                  text: `${
                    0 == i.danum || 2 == i.danum
                      ? ue.NODM
                      : `有 ${i.danum} 条弹幕列队来袭~做好准备吧`
                  }`,
                  time: 0,
                  color: "#fff",
                  mode: 0,
                },
                { text: ue.DMTIP, time: 6, color: "#fb7299", mode: 1 },
              ];
              for (let e = 2; e < r.length; e++) {
                const i = r[e];
                t.push({
                  text: i[4].includes(ue.DMDURL) ? ue.DMURL : i[4],
                  color: i[2],
                  mode: i[4].includes(ue.DMDURL) ? 1 : "right" === i[1] ? 0 : 1,
                  time: i[0],
                });
              }
              return t;
            }
            return [
              { text: ue.NODM, time: 0, color: "#fff", mode: 0 },
              { text: ue.DMTIP, time: 6, color: "#fb7299", mode: 1 },
            ];
          })(Re);
        },
        switch: 1,
        speed: 8.5,
        opacity: 1,
        fontSize: 0.8,
        color: "#FFFFFF",
        mode: 0,
        margin: 50,
        antiOverlap: !1,
        useWorker: !0,
        synchronousPlayback: !1,
        filter: (t) => t.text.length < 50,
        lockTime: 5,
        maxLength: 100,
        minWidth: 300,
        maxWidth: 400,
        heatmap: !0,
        theme: "dark",
        beforeEmit: (t) => !!t.text.trim(),
      }),
      (t) => {
        const e = new Wt(t, Fe);
        return (
          ee(t, e),
          Fe.heatmap && !t.option.isLive && ae(t, e, Fe.heatmap),
          {
            name: "YTDM",
            emit: e.emit.bind(e),
            load: e.load.bind(e),
            config: e.config.bind(e),
            hide: e.hide.bind(e),
            show: e.show.bind(e),
            get option() {
              return e.option;
            },
            get isHide() {
              return e.isHide;
            },
            get isStop() {
              return e.isStop;
            },
          }
        );
      }),
    ],
  };
var Fe;
const Pe = new Yt({ ...Me }),
  _e = Pe.storage.mediaGet("xl") || 1;
_e > Te.length
  ? ((Te[0].default = !0), Pe.storage.mediaSet("xl", 1))
  : (Te[_e - 1].default = !0),
  Pe.controls.add({
    name: "xl",
    position: "right",
    html: "线路",
    selector: Te,
    onSelect: (t) => (
      Ie.clear(),
      (Pe.notice.show = `切换线路${t.value}`),
      De(Pe, t.value, Re),
      Pe.storage.mediaSet("xl", t.value),
      "线路"
    ),
  }),
  Pe.width > 100 &&
    Se(Le.importObject)
      .then((t) => {
        Le.gto(t), _e > Te.length ? De(Pe, 1, Re) : De(Pe, _e, Re);
      })
      .catch((t) => {
        ye(Pe, "浏览器版本太低，请升级浏览器"), console.error(t, "wasmErr");
      }),
  Pe.on("ready", () => {
    const t = Pe.storage.get("times") || {};
    setTimeout(() => {
      Pe.seek = t[Re] || 0;
    });
  }),
  Pe.on("video:loadedmetadata", (t) => {
    const { from: e, url: i, surl: r, type: a } = Ie.getAll();
    if ("mp4" === a && r) {
      const { duration: a } = t.target;
      1 === e
        ? a > 45
          ? Ee("m4", { ourl: i, surl: r })
          : ce(Pe, i)
        : 2 === e &&
          (a > 140
            ? Ee("m4", { ourl: i, surl: r })
            : (ce(Pe, i), Ee("m4b", { ourl: i, surl: r })));
    }
  }),
  Pe.on("error", (t, e) => {
    if ((console.error("error", t, e), 3 === e)) {
      const { currentSrc: e, error: i } = t.target,
        { from: r, url: a, type: s, surl: n } = Ie.getAll();
      e === a ||
        0 !== r ||
        "mp4" !== s ||
        !n ||
        (2 !== i.code && 4 !== i.code) ||
        Ee("m4e", { ourl: a, surl: n });
    }
  }),
  Pe.on("video:ended", () => {
    const t = Ie.get("next");
    t &&
      (ye(Pe, "播放完毕，即将跳转..."),
      setTimeout(() => {
        window.location.href = t;
      }, 1e3));
  }),
  Pe.on("destroy", () => {
    (Yt.NOTICE_TIME = 1e5), ye(Pe, "播放器已销毁，请刷新页面重新加载");
  }),
  console.info(
    "%c胖虎影视播放器，https://www.cdnkan.top",
    "background: linear-gradient(to right, #ff8a00, #e52e71); color: white; padding: 8px; border-radius: 5px;"
  );
